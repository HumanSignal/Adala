name: pytests
on:
  push:
    branches:
      - master
    paths:
      - 'adala/**'
      - 'tests/**'
      - '.github/workflows/tests.yml'
      - '**/requirements**'
    tags-ignore:
      - '**'
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review
    branches:
      - master
      - 'release/**'
  workflow_dispatch:

env:
  OPENAI_API_KEY: test

jobs:
  run_black:
    name: Code formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up poetry
        uses: snok/install-poetry@v1
        with:
          python-version: '3.11'
          cache: true

      - name: Install Python dependencies
        run: poetry install

      - name: Run black
        run: poetry run pytest --black .

  run_pytest:
    name: Pytest ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            python-version: ['3.8', '3.9', '3.10', '3.11']
            test-command: poetry run pytest --junitxml report.xml --cov=. -vv
          - os: windows-latest
            python-version: ['3.8', '3.9', '3.10', '3.11']
            test-command: poetry run pytest -vv

    steps:
      - uses: actions/checkout@v4

      - name: Set up poetry
        uses: snok/install-poetry@v1
        with:
          python-version: ${{ matrix.python-version }}
          cache: true

      - name: Install Python dependencies
        run: poetry install

      - name: Run tests
        working-directory: tests/
        run: ${{ matrix.test-command }}

      - name: Upload to Codecov
        if: matrix.os == 'ubuntu-latest && python-version == '3.11'
        uses: codecov/codecov-action@v4.1.0
        with:
          files: tests/coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
