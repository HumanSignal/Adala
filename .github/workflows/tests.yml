name: pytests
on:
  push:
    branches:
      - master
    paths:
      - 'adala/**'
      - 'tests/**'
      - '.github/workflows/tests.yml'
      - '**/requirements**'
    tags-ignore:
      - '**'
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review
    branches:
      - master
      - 'release/**'
  workflow_dispatch:

env:
  OPENAI_API_KEY: test

jobs:
  run_black:
    name: Code formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up poetry
        uses: snok/install-poetry@v1
        with:
          python-version: '3.9'
          cache: true

      - name: Install Python dependencies
        run: |
          poetry install

      - name: Run black
        run: |
          poetry run pytest --black .

  run_pytest_ubuntu:
    name: Ubuntu
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - '3.8'
          - '3.9'
          - '3.10'
          - '3.11'

    steps:
      - uses: actions/checkout@v4

      - name: Set up poetry
        uses: snok/install-poetry@v1
        with:
          python-version: "${{ matrix.python-version }}"
          cache: true

      - name: Install Python dependencies
        run: |
          poetry install

      - name: Run functional tests
        run: |
          cd tests/
          poetry run pytest --junitxml report.xml --cov=. -vv 

  run_pytests_windows:
    name: Windows
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - '3.8'
          - '3.9'
          - '3.10'
          - '3.11'

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.head_sha }}

      - name: Set up poetry
        uses: snok/install-poetry@v1
        with:
          python-version: "${{ matrix.python-version }}"
          cache: true

      - name: Install Python dependencies
        run: |
          poetry install

      - name: Test with pytest
        run: |
          poetry run pytest -vv
