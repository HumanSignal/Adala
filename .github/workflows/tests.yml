name: pytests
on:
  push:
    branches:
      - master
    paths:
      - 'adala/**'
      - 'tests/**'
      - '.github/workflows/tests.yml'
      - '**/requirements**'
      - 'codecov.yml'
    tags-ignore:
      - '**'
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review
    branches:
      - master
      - 'release/**'
  workflow_dispatch:

env:
  OPENAI_API_KEY: test
  POETRY_VERSION: 2.1.4

jobs:
  run_black:
    name: Code formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: "Install poetry"
        run: pipx install "poetry==${{ env.POETRY_VERSION }}"

      - name: "Set up Python"
        id: setup_python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'poetry'

      - name: Install Python dependencies
        run: poetry install

      - name: Run black
        run: poetry run pytest --black .

  run_pytest:
    name: "pytest ${{ matrix.os }} | ${{ matrix.python-version }}"
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest ]
        # python-version: ['3.9', '3.10', '3.11']
        python-version: ['3.12']

    steps:
      - uses: actions/checkout@v5

      - name: "Install poetry"
        run: pipx install "poetry==${{ env.POETRY_VERSION }}"

      - name: "Set up Python ${{ matrix.python-version }}"
        id: setup_python
        uses: actions/setup-python@v5
        with:
          python-version: '${{ matrix.python-version }}'
          cache: 'poetry'

      - name: Install dependencies
        run: poetry install --no-interaction --no-root

      - name: Install app
        run: poetry install --no-interaction

      - name: Run tests with coverage
        if: matrix.os == 'ubuntu-latest'
        run: |
          poetry run pytest tests/ -vv ${{ matrix.python-version == '3.12' && '--cov=. --cov-report=xml' || '' }}

      - name: Upload to Codecov
        if: |
          matrix.os == 'ubuntu-latest' &&
          matrix.python-version == '3.12' &&
          github.event.pull_request.user.login != 'dependabot[bot]'
        uses: codecov/codecov-action@v5.4.3
        with:
          files: tests/coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

  dependabot-auto-merge:
    name: "Auto Merge dependabot PR"
    if: |
      always() &&
      needs.run_pytest.result == 'success' &&
      github.event_name == 'pull_request' &&
      github.event.pull_request.user.login == 'dependabot[bot]' &&
      ( startsWith(github.head_ref, 'dependabot/npm_and_yarn/') || startsWith(github.head_ref, 'dependabot/pip/') )
    runs-on: ubuntu-latest
    needs:
      - run_pytest
    steps:
      - name: Enable auto-merge for Dependabot PRs
        run: gh pr merge --admin --squash "${PR_URL}"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GIT_PAT }}
