interactions:
- request:
    body: '{"messages": [{"role": "user", "content": "Hey, how''s it going?"}], "model":
      "gpt-4-turbo", "max_tokens": 1000, "seed": 47, "temperature": 0.0}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '143'
      content-type:
      - application/json
      cookie:
      - __cf_bm=hB18UljW7UZU691nOlL0AKbEXZ.z2MxaC2s6BKzw89I-1723578070-1.0.1.1-MsLp.JVQFNNxZNJTUoOw_wRg7MOoziK7wiidR5KuaCFJInPXjcPfVq8gqTJ.NL2ut.JWhvl8PZR5j0cQnlAlZg;
        _cfuvid=61Rc3TIrUawOwIu8uMB9YcQU3WqJXMYoSpzKaDUbIWc-1723578070221-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA1SRQUvEMBCF7/0VYy5ettJdK133IoKK4kFBUERkyabTJppmQjJVF9n/LunWXb3k
        8L55jzeT7wxAmFosQCgtWXXe5qcfoX24kPr263594VaPd6q/cuf13eeHfr4Uk+Sg1Rsq/nUdKeq8
        RTbktlgFlIwpdVrNjk+qeTEvB9BRjTbZWs95mXMfVpTPilmZF2VenI5uTUZhFAt4yQAAvoc39XQ1
        fokFFJNfpcMYZYtisRsCEIFsUoSM0USWjsVkDxU5RjdUv0Zr6QBuDjvQGBCYQKP1sKb+CJ60ZFDS
        wQ1sc5IMn4Y1MNVyffY3NGDTR5kWc721o77ZtbTU+kCrOPKd3hhnol4GlJFcahSZvBjoJgN4Ha7R
        /1tQ+ECd5yXTO7oUOC23cWL/B39gNUImlnavH0+zsZ+I68jYLRvjWgw+mO1pGr9UVYVFVZfYiGyT
        /QAAAP//AwDF2umvKAIAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8b2b2eb2fa164892-LIS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 13 Aug 2024 19:41:26 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '1658'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '2000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '1998994'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 30ms
      x-request-id:
      - req_027e41a5b93846046dd289c9c9ee29f4
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "user", "content": "Hey, how''s it going?"}], "model":
      "gpt-3.5-turbo", "max_tokens": 1000, "seed": 47, "temperature": 0.0}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '145'
      content-type:
      - application/json
      cookie:
      - __cf_bm=hB18UljW7UZU691nOlL0AKbEXZ.z2MxaC2s6BKzw89I-1723578070-1.0.1.1-MsLp.JVQFNNxZNJTUoOw_wRg7MOoziK7wiidR5KuaCFJInPXjcPfVq8gqTJ.NL2ut.JWhvl8PZR5j0cQnlAlZg;
        _cfuvid=61Rc3TIrUawOwIu8uMB9YcQU3WqJXMYoSpzKaDUbIWc-1723578070221-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//VJFBTwIxEIXv+yvGXrwsBMQV5WJiYgLqUePBGFJ2h22x7TTtLEoM/920
        rKCXPbyvb/Le2+8CQOhGzEDUSnJtvRncbEP7Mqoer6bbp4/JfBu8fb3fqLuH6lndizI5aLXBmn9d
        w5qsN8ia3AHXASVjujqeXkyq6fXo+ioDSw2aZGs9DybDasBdWNFgNL6oeqciXWMUM3grAAC+8zdl
        dA1+iRmMyl/FYoyyRTE7PgIQgUxShIxRR5aORXmCNTlGl2PP0Rg6g8W5hU0XGSSkDh1jAB+oDdKW
        EAkW0JA7Z1Byi7BGNNq1sYRVx9mqMCAwgULjYUcdfGpWIN2OlXZtVhxiM4Q5fUItHSzgECwjpkbu
        bv8GDLjuokwDuc6YXt8fGxtqfaBV7PlRX2uno1oGlJFcaheZvMh0XwC852W7f2MJH8h6XjJ9oEsH
        x5eHc+L0L09wUvWQiaU56Zc3RZ9PxF1ktMu1di0GH3SeObfYFz8AAAD//wMAgc743GUCAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8b2b2ebf1ac04892-LIS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 13 Aug 2024 19:41:27 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '532'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '50000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '49998993'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 1ms
      x-request-id:
      - req_9b852577db96af97c7a158a39d5a03b6
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "Classify input text."}, {"role":
      "user", "content": "Text: Apple product with a sleek design."}], "model": "gpt-3.5-turbo",
      "max_tokens": 1000, "seed": 47, "temperature": 0.0, "tool_choice": {"type":
      "function", "function": {"name": "Output"}}, "tools": [{"type": "function",
      "function": {"name": "Output", "description": "Correctly extracted `Output`
      with all the required parameters with correct types", "parameters": {"properties":
      {"predicted_category": {"description": "The classification label", "enum": ["Footwear/Clothing",
      "Electronics", "Food/Beverages", "Furniture/Home Decor", "Beauty/Personal Care"],
      "title": "Predicted Category", "type": "string"}}, "required": ["predicted_category"],
      "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '767'
      content-type:
      - application/json
      cookie:
      - __cf_bm=hB18UljW7UZU691nOlL0AKbEXZ.z2MxaC2s6BKzw89I-1723578070-1.0.1.1-MsLp.JVQFNNxZNJTUoOw_wRg7MOoziK7wiidR5KuaCFJInPXjcPfVq8gqTJ.NL2ut.JWhvl8PZR5j0cQnlAlZg;
        _cfuvid=61Rc3TIrUawOwIu8uMB9YcQU3WqJXMYoSpzKaDUbIWc-1723578070221-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA2xS22rjMBB991eIeU5KnGya1O9b2IVuaUsLy6YYWZ44amWNKo2zCSH/vvhS2w3r
        ByPm+Fx0xqdICNA5JALUTrIqnZne7H3xkt8sPvbhaX3798GE6vr2+iBfvtmHAJOaQdkbKv5kXSkq
        nUHWZFtYeZSMtWq8mi+Wq/VsvWqAknI0Na1wPF1cLadc+Yyms3i+7Jg70goDJOJPJIQQp+ZdZ7Q5
        HiARs8nnpMQQZIGQ9B8JAZ5MPQEZgg4sLcNkABVZRlvHtpUxI4CJTKqkMYNx+5xG56EoaUz6K4vp
        tzks3u72P9WTRJk9P97/yJ5Hfq300TWBtpVVfUEjvJ8nF2ZCgJVlw72v2FV8wRQCpC+qEi3XqeG0
        Aecx14oxT5VkLMgfN5Bs4LtBxZ6sVmEDZ/iico7+d34ddeNxWwVputK6+bnfgqHCecrCRamw1VaH
        XepRhuZyEJhc6137NA5QfVkgOE+l45TpHW0tGMfrVg+GH2xAVx3GxNKMSPNl1AWEcAyMZbrVtkDv
        vO53H52jfwAAAP//AwCfLPwO+gIAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8b2b2ec49d684892-LIS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 13 Aug 2024 19:41:27 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '182'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '50000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '49998982'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 1ms
      x-request-id:
      - req_1c2e6a6ebd41facebf974b75153e79c6
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "Classify input text."}, {"role":
      "user", "content": "Text: Laptop stand for the kitchen."}], "model": "gpt-3.5-turbo",
      "max_tokens": 1000, "seed": 47, "temperature": 0.0, "tool_choice": {"type":
      "function", "function": {"name": "Output"}}, "tools": [{"type": "function",
      "function": {"name": "Output", "description": "Correctly extracted `Output`
      with all the required parameters with correct types", "parameters": {"properties":
      {"predicted_category": {"description": "The classification label", "enum": ["Footwear/Clothing",
      "Electronics", "Food/Beverages", "Furniture/Home Decor", "Beauty/Personal Care"],
      "title": "Predicted Category", "type": "string"}}, "required": ["predicted_category"],
      "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '762'
      content-type:
      - application/json
      cookie:
      - __cf_bm=hB18UljW7UZU691nOlL0AKbEXZ.z2MxaC2s6BKzw89I-1723578070-1.0.1.1-MsLp.JVQFNNxZNJTUoOw_wRg7MOoziK7wiidR5KuaCFJInPXjcPfVq8gqTJ.NL2ut.JWhvl8PZR5j0cQnlAlZg;
        _cfuvid=61Rc3TIrUawOwIu8uMB9YcQU3WqJXMYoSpzKaDUbIWc-1723578070221-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA2xSTY+bMBC98yusOScrQhqRcG1X2kpN91KtVDUVMmYgbo3HtYfNplH+ewVJgI3K
        AVnzeB9+wykSAnQJmQC1l6waZ+abV1+/mOrw7Sk8vyXV5vFT9bWg+PXwZ8sSZh2Dil+o+MZ6UNQ4
        g6zJXmDlUTJ2qos0Wa7SdbxOe6ChEk1Hqx3Plw+rObe+oHm8SFZX5p60wgCZ+BEJIcSpf3cZbYlv
        kIl4dps0GIKsEbLhIyHAk+kmIEPQgaVlmI2gIstou9i2NWYCMJHJlTRmNL48p8l5LEoak3/+++Wp
        3qjDktht18n3bbF+SSn+OPG7SB9dH6hqrRoKmuDDPLszEwKsbHruc8uu5TumECB93TZouUsNpx04
        j6VWjGWuJGNN/riDbAePBhV7slqFHZzhnco5+t/556Qbj1UbpLmWdp2fhy0Yqp2nItyVCpW2Ouxz
        jzL0l4PA5C7enU/vAO27BYLz1DjOmX6j7QQXi/SiB+MPNqI3jImlmZCSD9E1IIRjYGzyStsavfN6
        2H10jv4BAAD//wMA6AnpEvoCAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8b2b2ec7ebb54892-LIS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 13 Aug 2024 19:41:28 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '239'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '50000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '49998983'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 1ms
      x-request-id:
      - req_07f6851c6654678da4d7a5e776fa66ba
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "Classify input text."}, {"role":
      "user", "content": "Text: Chocolate leather boots."}], "model": "gpt-3.5-turbo",
      "max_tokens": 1000, "seed": 47, "temperature": 0.0, "tool_choice": {"type":
      "function", "function": {"name": "Output"}}, "tools": [{"type": "function",
      "function": {"name": "Output", "description": "Correctly extracted `Output`
      with all the required parameters with correct types", "parameters": {"properties":
      {"predicted_category": {"description": "The classification label", "enum": ["Footwear/Clothing",
      "Electronics", "Food/Beverages", "Furniture/Home Decor", "Beauty/Personal Care"],
      "title": "Predicted Category", "type": "string"}}, "required": ["predicted_category"],
      "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '757'
      content-type:
      - application/json
      cookie:
      - __cf_bm=hB18UljW7UZU691nOlL0AKbEXZ.z2MxaC2s6BKzw89I-1723578070-1.0.1.1-MsLp.JVQFNNxZNJTUoOw_wRg7MOoziK7wiidR5KuaCFJInPXjcPfVq8gqTJ.NL2ut.JWhvl8PZR5j0cQnlAlZg;
        _cfuvid=61Rc3TIrUawOwIu8uMB9YcQU3WqJXMYoSpzKaDUbIWc-1723578070221-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA2xSTY/TMBC951dYc26XpkvUkuuqLXCAw6osEkWR60wSs47Ha0+Aqup/R/nYNFuR
        Q2S9l/eR8ZwjIUDnkApQlWRVOzP/8NuXT7Txp8fH+Ol5HzZb3K9y/FR8LhbvYdYq6PgLFb+q7hTV
        ziBrsj2tPErG1jVeLe+T1XqxXndETTmaVlY6nt/fJXNu/JHmi3iZDMqKtMIAqfgRCSHEuXu3HW2O
        fyEVi9krUmMIskRIx4+EAE+mRUCGoANLyzC7kooso21r28aYCcFEJlPSmGtw/5wn5+ugpDHZQxHv
        qvASlh/3m93Ll7Di7bd49/04yeutT64rVDRWjQOa8COe3oQJAVbWnfZrw67hG6UQIH3Z1Gi5bQ3n
        AziPuVaMeaYkY0n+dID0AFsi/oPSv3swxJW25QEu8MbrEv3v/HMyIY9FE6QZRjfgl/EuDJXO0zHc
        jBYKbXWoMo8ydL8Igcn12W1OlwDNm2sE56l2nDE9o20N4zjp/eC6ZhN2WAhgYmkm+DKJhoYQToGx
        zgptS/TO63EFokv0DwAA//8DAOeyxREBAwAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8b2b2ecbfafe4892-LIS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 13 Aug 2024 19:41:28 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '254'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '50000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '49998984'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 1ms
      x-request-id:
      - req_e4663ac57d387af799e588a7b0d32815
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "Classify input text."}, {"role":
      "user", "content": "Text: Wooden cream for surfaces."}], "model": "gpt-3.5-turbo",
      "max_tokens": 1000, "seed": 47, "temperature": 0.0, "tool_choice": {"type":
      "function", "function": {"name": "Output"}}, "tools": [{"type": "function",
      "function": {"name": "Output", "description": "Correctly extracted `Output`
      with all the required parameters with correct types", "parameters": {"properties":
      {"predicted_category": {"description": "The classification label", "enum": ["Footwear/Clothing",
      "Electronics", "Food/Beverages", "Furniture/Home Decor", "Beauty/Personal Care"],
      "title": "Predicted Category", "type": "string"}}, "required": ["predicted_category"],
      "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '759'
      content-type:
      - application/json
      cookie:
      - __cf_bm=hB18UljW7UZU691nOlL0AKbEXZ.z2MxaC2s6BKzw89I-1723578070-1.0.1.1-MsLp.JVQFNNxZNJTUoOw_wRg7MOoziK7wiidR5KuaCFJInPXjcPfVq8gqTJ.NL2ut.JWhvl8PZR5j0cQnlAlZg;
        _cfuvid=61Rc3TIrUawOwIu8uMB9YcQU3WqJXMYoSpzKaDUbIWc-1723578070221-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//bFJdb9MwFH3Pr7DuczuSlKxrXmETlUAgHhCDosh1blN3jm3Z12Wl6n+f
        8rEkq/BDZN3j85FjnyPGQJaQMxB7TqK2ar46uurn4vut+7I4HNN/Klk/xPcfwuPx/kf8GWYNw2wP
        KOiVdSNMbRWSNLqDhUNO2Kgmy3SRLe/iu1UL1KZE1dAqS/PFTTan4LZmHidp1jP3Rgr0kLPfEWOM
        ndtvk1GX+Aw5i2evkxq95xVCPhxiDJxRzQS499IT1wSzERRGE+omtg5KTQAyRhWCKzUad+s82Y9F
        caUKK9T79bdHud7r7HnrlgdX/kqf/k79OumTbQPtghZDQRN8mOdXZoyB5nXL/RrIhmtlxoC7KtSo
        qUkN5w1Yh6UUhGUhOGFl3GkD+QYegtOSgsN3n0yN7CMK4zZwgTdyl+h/+z+Tkhzugueqb6+fX4br
        UKayzmz9Vbuwk1r6feGQ+/YvwZOxnXfj0zpAeHOTYJ2pLRVknlA3gkly2+nB+NJGdNVjZIirCSnN
        oj4g+JMnrIud1BU66+TwCKJL9AIAAP//AwBoBoyfAwMAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8b2b2ed04bbb4892-LIS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 13 Aug 2024 19:41:29 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '189'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '50000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '49998984'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 1ms
      x-request-id:
      - req_53bbde382d51a065f06412102ef3d867
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "Classify input text."}, {"role":
      "user", "content": "Text: Natural finish for your lips."}], "model": "gpt-3.5-turbo",
      "max_tokens": 1000, "seed": 47, "temperature": 0.0, "tool_choice": {"type":
      "function", "function": {"name": "Output"}}, "tools": [{"type": "function",
      "function": {"name": "Output", "description": "Correctly extracted `Output`
      with all the required parameters with correct types", "parameters": {"properties":
      {"predicted_category": {"description": "The classification label", "enum": ["Footwear/Clothing",
      "Electronics", "Food/Beverages", "Furniture/Home Decor", "Beauty/Personal Care"],
      "title": "Predicted Category", "type": "string"}}, "required": ["predicted_category"],
      "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '762'
      content-type:
      - application/json
      cookie:
      - __cf_bm=hB18UljW7UZU691nOlL0AKbEXZ.z2MxaC2s6BKzw89I-1723578070-1.0.1.1-MsLp.JVQFNNxZNJTUoOw_wRg7MOoziK7wiidR5KuaCFJInPXjcPfVq8gqTJ.NL2ut.JWhvl8PZR5j0cQnlAlZg;
        _cfuvid=61Rc3TIrUawOwIu8uMB9YcQU3WqJXMYoSpzKaDUbIWc-1723578070221-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//bFJda9swFH33rxD3OelslyyJ37asLF0pGxRKYRlGkW8crbKkSVfrvJD/
        PvxR2w3TgxH36Hz4SKeIMZAFZAzEkZOorJqvf7vy6cP29i69Se8/pZtH/qDFzdMifv78soJZwzD7
        nyjolXUlTGUVkjS6g4VDTtioJsv0erFcxat1C1SmQNXQSkvz66vFnILbm3mcpIueeTRSoIeMfY8Y
        Y+zUfpuMusA/kLF49jqp0HteImTDIcbAGdVMgHsvPXFNMBtBYTShbmLroNQEIGNULrhSo3G3TpP9
        WBRXKt/WmNq75IvfkpD38e3jy6/N3wdRTvw66dq2gQ5Bi6GgCT7MswszxkDzquV+DWQDXTAZA+7K
        UKGmJjWcdmAdFlIQFrnghKVx9Q6yHXxEHqh+9w2dN5ortuEOd3CGN3Ln6H/7H5OSHB6C56pvr5+f
        h+tQprTO7P1Fu3CQWvpj7pD79i/Bk7Gdd+PTOkB4c5Ngnaks5WSeUTeCSbLs9GB8aSO67jEyxNWE
        lL6P+oDga09Y5QepS3TWyeERROfoHwAAAP//AwD9QEzhAwMAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8b2b2ed3a9f24892-LIS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 13 Aug 2024 19:41:30 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '219'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '50000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '49998983'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 1ms
      x-request-id:
      - req_e1be4789778383f7d65b774f65403f90
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "You are a helpful assistant."},
      {"role": "user", "content": "\nA prompt is a text paragraph that outlines the
      expected actions and instructs the large language model (LLM) to generate a
      specific output. This prompt is concatenated with the input text, and the model
      then creates the required output.\nThis describes the full template how the
      prompt is concatenated with the input to produce the output:\n\n```\n\n{prompt}\nText:
      {text}\nCategory: {predicted_category}\n```\n\nHere:\n- \"Text: {text}\" is
      input template,\n- \"{prompt}\" is the LLM prompt,\n- \"Category: {predicted_category}\"
      is the output template.\n\nModel can produce erroneous output if a prompt is
      not well defined. In our collaboration, we\u2019ll work together to refine a
      prompt. The process consists of two main steps:\n\n## Step 1\nI will provide
      you with the current prompt along with prediction examples. Each example contains
      the input text, the final prediction produced by the model, and the user feedback.
      User feedback indicates whether the model prediction is correct or not. Your
      task is to analyze the examples and user feedback, determining whether the existing
      instruction is describing the task reflected by these examples precisely, and
      suggests changes to the prompt to address the incorrect predictions.\n\n## Step
      2\nNext, you will carefully review your reasoning in step 1, integrate the insights
      to refine the prompt, and provide me with the new prompt that improves the model\u2019s
      performance."}, {"role": "assistant", "content": "Sure, I\u2019d be happy to
      help you with this prompt engineering problem. Please provide me with the current
      prompt and the examples with user feedback."}, {"role": "user", "content": "\n##
      Current prompt\nClassify input text.\n\n## Examples\n### Example #0\n\nText:
      Apple product with a sleek design.\n\nCategory: Electronics\n\nUser feedback:
      Prediction is correct.\n\n\n### Example #1\n\nText: Laptop stand for the kitchen.\n\nCategory:
      Electronics\n\nUser feedback: Prediction is incorrect. Correct answer: \"Furniture/Home
      Decor\"\n\n\n### Example #2\n\nText: Chocolate leather boots.\n\nCategory: Footwear/Clothing\n\nUser
      feedback: Prediction is correct.\n\n\n### Example #3\n\nText: Wooden cream for
      surfaces.\n\nCategory: Furniture/Home Decor\n\nUser feedback: Prediction is
      correct.\n\n\n### Example #4\n\nText: Natural finish for your lips.\n\nCategory:
      Beauty/Personal Care\n\nUser feedback: Prediction is correct.\n\n\n\nSummarize
      your analysis about incorrect predictions and suggest changes to the prompt."}],
      "model": "gpt-4-turbo", "max_tokens": 1000, "seed": 47, "temperature": 0.0}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '2676'
      content-type:
      - application/json
      cookie:
      - __cf_bm=hB18UljW7UZU691nOlL0AKbEXZ.z2MxaC2s6BKzw89I-1723578070-1.0.1.1-MsLp.JVQFNNxZNJTUoOw_wRg7MOoziK7wiidR5KuaCFJInPXjcPfVq8gqTJ.NL2ut.JWhvl8PZR5j0cQnlAlZg;
        _cfuvid=61Rc3TIrUawOwIu8uMB9YcQU3WqJXMYoSpzKaDUbIWc-1723578070221-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//pFbbahxHEH3XVxSjB4HY3UiyhLJ6M7KMDQ6YWBiSTJB6umtmOurp6vRl
        V2vjfw/Vc9mRnAhMXha2LzV1Tp061V8PAAqtiisoZCui7JxZrje++e3i90BNSh+SUQ2eXf796XOs
        m+3n02LBN6j6C2Ucb60kdc5g1GT7belRROSop5dnry4ufz5Zn+SNjhQavta4uDxfxuQrWp6dnJ0v
        T86XJ+vhdktaYiiu4I8DAICv+ZfztAofiyvIsfJKhyGIBour6RBA4cnwSiFC0CEKG4vFflOSjWhz
        6oeHh/DaCrMLOgDV8N5K8h5lhI8elZaMJ5S2tG89dRBbBHwUDDSA87TRCtUCdAThHAofILYi5mMZ
        JTRo0QtjduDQ1+S7AFs0BrQFaTi3eqdtky9IEbEhv+MsnCeVZAxQiYAKyOYT2roUIeJjXME72uIG
        /YI3PMJWBCDLRxisRNjm5SmRI053xJNP6xHoFaNbwvHxTQ8MDk+Pj6/gtsX8KSiLD8JFcsCRFdTk
        c9gHHWWLtixytAGMRgUiQFncGJTRk9Uy8IkWewQjtxPW0FIyClqxQagQLZTF2+StjsnjT++oQ3iD
        knxZrOC21QE6HcZPSZGxGP2AZgckZfIeFVQoRQoz6FCTTDMWt+TVBGqRs9OyBR0g7pyWuVgiBJKa
        5QtbHVvAPZwFeMGcc6UtSLJBK/RTEVlZj5FrmCsWsYMKeTenoO2cu8Xw6ZCaBkMMIEDpukaPNkKK
        2ui4A+Z8pGvFpWLFfupvoILrVtgGA0TKkT966lzkY7cEumOJPlWBYJ6E3GUF9mH1F85vlFxWFP/r
        XASZq1MheKy1RcWfwc61IugvfVzdOfK95Kie4HPSvWIjWoWK0Y+cDB8ChUF6Xe1ZGYTNuhUeIXD1
        B2q4CbPyOlKzlumzzAI+XcHx8Wul4LpPIQkDN32mgeX8S744x8ZQrKTkRTNXS6SpqHmVNrmBfwTa
        U4lk+XHGgUxWqoXgULKC4QF3LMfBNjrdtHGmwgq/E6IAJ3zUMhnhn8rijAm4NsIzzFsRHuBNJtgx
        eWND5x6xcaSgLK4HE5p5S1lwLzD7W05qI5qEK3g/E0NHXJ4BwwJCkm3f9VO0p27FXPXyFM55cp4B
        TTqYvGDyOh3DoI6cfKZ8TveqLBjxK0b8sTdhuBldeRBT3wiM+72VJikugIDKa6xHBwd2si2NNwZO
        dAxoapDCQpM48l4aZKGlLSukwhjRg+DBMTRCr9635CcPXkCHlgH0chXM92swL5jpaIcVThrsDfXo
        30zxCFRCzob5SjwCR5GWxVCsYUSBNCh8xsOJTTbyK240c753jdx9mp3ID3sb9IGLsJd4ZomnhyMv
        4tCL4Umv5pa8v78v7f+UxA6k8FgnbofnXvuSRJ51JBdGpjCOgOc9re3gxHN/4mnT149H/LyjdSDT
        A/+ukXsFDAJbgICjl+p9NC/4aMYMwLL7/GDRVwPjpc2TcqzfULBx0KJxM0V34mFo534u5BpMzx6m
        f3T7kfT/9vs+GW2fV1F/yYN6NX+AcUmD4EegTcYM69+mF52hxnmqwrA/rdfa6tDeeRSBLL/eQiRX
        5N1vBwB/5pdjevIYLHr8d5Ee0HLA8/W6j1fsH6yz3YvhXVlEisLsN9bn64MhxSLsQsTurta2Qe+8
        7l+StbuTl5d4cqnOsS4Ovh38AwAA//8DAEhgNhlXCwAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8b2b2ed7e9b14892-LIS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 13 Aug 2024 19:41:51 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '20971'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '2000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '1998405'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 47ms
      x-request-id:
      - req_13b2b638e76c6690cff6774b1d5a90ee
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "You are a helpful assistant."},
      {"role": "user", "content": "\nA prompt is a text paragraph that outlines the
      expected actions and instructs the large language model (LLM) to generate a
      specific output. This prompt is concatenated with the input text, and the model
      then creates the required output.\nThis describes the full template how the
      prompt is concatenated with the input to produce the output:\n\n```\n\n{prompt}\nText:
      {text}\nCategory: {predicted_category}\n```\n\nHere:\n- \"Text: {text}\" is
      input template,\n- \"{prompt}\" is the LLM prompt,\n- \"Category: {predicted_category}\"
      is the output template.\n\nModel can produce erroneous output if a prompt is
      not well defined. In our collaboration, we\u2019ll work together to refine a
      prompt. The process consists of two main steps:\n\n## Step 1\nI will provide
      you with the current prompt along with prediction examples. Each example contains
      the input text, the final prediction produced by the model, and the user feedback.
      User feedback indicates whether the model prediction is correct or not. Your
      task is to analyze the examples and user feedback, determining whether the existing
      instruction is describing the task reflected by these examples precisely, and
      suggests changes to the prompt to address the incorrect predictions.\n\n## Step
      2\nNext, you will carefully review your reasoning in step 1, integrate the insights
      to refine the prompt, and provide me with the new prompt that improves the model\u2019s
      performance."}, {"role": "assistant", "content": "Sure, I\u2019d be happy to
      help you with this prompt engineering problem. Please provide me with the current
      prompt and the examples with user feedback."}, {"role": "user", "content": "\n##
      Current prompt\nClassify input text.\n\n## Examples\n### Example #0\n\nText:
      Apple product with a sleek design.\n\nCategory: Electronics\n\nUser feedback:
      Prediction is correct.\n\n\n### Example #1\n\nText: Laptop stand for the kitchen.\n\nCategory:
      Electronics\n\nUser feedback: Prediction is incorrect. Correct answer: \"Furniture/Home
      Decor\"\n\n\n### Example #2\n\nText: Chocolate leather boots.\n\nCategory: Footwear/Clothing\n\nUser
      feedback: Prediction is correct.\n\n\n### Example #3\n\nText: Wooden cream for
      surfaces.\n\nCategory: Furniture/Home Decor\n\nUser feedback: Prediction is
      correct.\n\n\n### Example #4\n\nText: Natural finish for your lips.\n\nCategory:
      Beauty/Personal Care\n\nUser feedback: Prediction is correct.\n\n\n\nSummarize
      your analysis about incorrect predictions and suggest changes to the prompt."},
      {"role": "assistant", "content": "### Analysis of Incorrect Predictions\n\nFrom
      the examples provided, it appears that the model generally performs well in
      classifying the category of products based on the input text. However, there
      was one instance where the model''s prediction was incorrect:\n\n- **Example
      #1**: The text \"Laptop stand for the kitchen\" was classified as \"Electronics\"
      when the correct category should have been \"Furniture/Home Decor\". This misclassification
      likely occurred because the model focused on the word \"Laptop,\" which is typically
      associated with electronics, rather than considering the context of the item
      being used in the kitchen, which suggests a different utility and category.\n\n###
      Suggested Changes to the Prompt\n\nTo improve the model''s accuracy in categorizing
      products, the prompt could be refined to emphasize the importance of context
      and the intended use of the product described in the text. Here are some suggestions
      for modifying the prompt:\n\n1. **Add Contextual Emphasis**: Modify the prompt
      to encourage the model to consider the overall context and the intended use
      of the product, rather than focusing solely on specific keywords that might
      typically be associated with a particular category.\n\n2. **Clarify Task Description**:
      The current prompt \"Classify input text\" is somewhat vague. It could be more
      specific, such as \"Classify the input text into the appropriate product category
      based on its description and intended use.\"\n\n3. **Provide Examples in the
      Prompt**: Including a brief example or two in the prompt itself can guide the
      model on how to better analyze the text. For instance, mentioning that \"A laptop
      stand for the kitchen should be considered as ''Furniture/Home Decor'' due to
      its usage context\" could provide clear guidance.\n\n### Revised Prompt\n\nHere
      is a revised version of the prompt incorporating these suggestions:\n\n```\nClassify
      the input text into the appropriate product category by carefully considering
      the description and intended use of the product. Focus on the overall context
      in which the product is mentioned, rather than isolating specific keywords.
      For example, a ''laptop stand for the kitchen'' should be categorized under
      ''Furniture/Home Decor'' due to its usage context.\n```\n\nThis revised prompt
      should help the model make more accurate predictions by emphasizing the importance
      of context and usage in product categorization."}, {"role": "user", "content":
      "\nNow please carefully review your reasoning in Step 1 and help with Step 2:
      refining the prompt.\n\n## Current prompt\nClassify input text.\n\n## Follow
      this guidance to refine the prompt:\n\n1. The new prompt should should describe
      the task precisely, and address the points raised in the user feedback.\n\n2.
      The new prompt should be similar to the current prompt, and only differ in the
      parts that address the issues you identified in Step 1.\n    Example:\n    -
      Current prompt: \"Generate a summary of the input text.\"\n    - New prompt:
      \"Generate a summary of the input text. Pay attention to the original style.\"\n\n3.
      Reply only with the new prompt. Do not include input and output templates in
      the prompt.\n"}], "model": "gpt-4-turbo", "max_tokens": 1000, "seed": 47, "temperature":
      0.0}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '5877'
      content-type:
      - application/json
      cookie:
      - __cf_bm=hB18UljW7UZU691nOlL0AKbEXZ.z2MxaC2s6BKzw89I-1723578070-1.0.1.1-MsLp.JVQFNNxZNJTUoOw_wRg7MOoziK7wiidR5KuaCFJInPXjcPfVq8gqTJ.NL2ut.JWhvl8PZR5j0cQnlAlZg;
        _cfuvid=61Rc3TIrUawOwIu8uMB9YcQU3WqJXMYoSpzKaDUbIWc-1723578070221-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA1RRTU/jMBC951eMfG5QUoKy7RGuSCCQOOwKVa49SVwcj2WPUSrU/46chpa9+PA+
        Zt48fxUAwmixBaEGyWr0ttx8hp4T2elQvb3Uj/ebqbf+9e/T5i61z2KVHbQ/oOIf142i0VtkQ+5M
        q4CSMU+t2/XtXfunruuZGEmjzbbec9mUnMKeynW1bsqqKavN4h7IKIxiC/8KAICv+c05ncZJbKFa
        /SAjxih7FNuLCEAEshkRMkYTWToWqyupyDG6OfqDzYruCDwgGOcTA+PEYBzTjCkKARWDD6STYlCS
        sadwXIEiF43GYFwPe+JhlkePynRGgWEcI4zociOoQTqdBSbAvH1ioJC3oNOoIUW8+Z0wYJeizC25
        ZO2Cny4nW+p9oH1c+AveGWfisAsoI7l8XmTyYmZPBcD7XG36ry3hA42ed0wf6PLAuq7a80Bx/dIr
        vW4Wkoml/W27rYslo4jHyDjuOuN6DD6Yc9ed36m2xarVDXaiOBXfAAAA//8DACNkKCJ5AgAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8b2b2f5cab294892-LIS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 13 Aug 2024 19:41:53 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '1403'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '2000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '1997636'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 70ms
      x-request-id:
      - req_9f7265498847b2dafd7d855d4085d42b
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "Classify the input text into
      the correct product category, considering both the specific items mentioned
      and their context or intended use."}, {"role": "user", "content": "Text: Apple
      product with a sleek design."}], "model": "gpt-3.5-turbo", "max_tokens": 1000,
      "seed": 47, "temperature": 0.0, "tool_choice": {"type": "function", "function":
      {"name": "Output"}}, "tools": [{"type": "function", "function": {"name": "Output",
      "description": "Correctly extracted `Output` with all the required parameters
      with correct types", "parameters": {"properties": {"predicted_category": {"description":
      "The classification label", "enum": ["Footwear/Clothing", "Electronics", "Food/Beverages",
      "Furniture/Home Decor", "Beauty/Personal Care"], "title": "Predicted Category",
      "type": "string"}}, "required": ["predicted_category"], "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '886'
      content-type:
      - application/json
      cookie:
      - __cf_bm=hB18UljW7UZU691nOlL0AKbEXZ.z2MxaC2s6BKzw89I-1723578070-1.0.1.1-MsLp.JVQFNNxZNJTUoOw_wRg7MOoziK7wiidR5KuaCFJInPXjcPfVq8gqTJ.NL2ut.JWhvl8PZR5j0cQnlAlZg;
        _cfuvid=61Rc3TIrUawOwIu8uMB9YcQU3WqJXMYoSpzKaDUbIWc-1723578070221-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA2xSTY/aMBC951dYc4YVISB2c94eemkq9dCVShUZZxJM/VV7jKCI/14lgSSgzSGy
        5uV9+E0uCWMgK8gZiD0noZ2avx19c4wHUex/FNnHP736XheL5WH9WlfLE8xaht0dUNCd9SKsdgpJ
        WtPDwiMnbFXTzTJbb17TNOsAbStULa1xNM9e1nOKfmfni3S5vjH3VgoMkLNfCWOMXbp3m9FUeIKc
        LWb3icYQeIOQDx8xBt6qdgI8BBmIG4LZCAprCE0b20SlJgBZq0rBlRqN++cyOY9FcaVKTnTM/r6/
        HXTxNY0fGr8dz/jzFCd+vfTZdYHqaMRQ0AQf5vmTGWNguO64RSQX6YnJGHDfRI2G2tRw2YLzWElB
        WJWCEzbWn7eQb+GLQkHeGinCFq7woHJNPjv/nnTjsY6Bq1tpt/l12IKyjfN2F55KhVoaGfalRx66
        y0Eg63rv1qdzgPiwQHDeakcl2T9oWsE02/R6MP5gI3rHyBJXE9JqldwCQjgHQl3W0jTonZfD7pNr
        8h8AAP//AwC8DitW+gIAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8b2b2f6878c54892-LIS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 13 Aug 2024 19:41:53 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '211'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '50000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '49998953'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 1ms
      x-request-id:
      - req_ffa609b8586edf3f728801450090d0ee
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "Classify the input text into
      the correct product category, considering both the specific items mentioned
      and their context or intended use."}, {"role": "user", "content": "Text: Laptop
      stand for the kitchen."}], "model": "gpt-3.5-turbo", "max_tokens": 1000, "seed":
      47, "temperature": 0.0, "tool_choice": {"type": "function", "function": {"name":
      "Output"}}, "tools": [{"type": "function", "function": {"name": "Output", "description":
      "Correctly extracted `Output` with all the required parameters with correct
      types", "parameters": {"properties": {"predicted_category": {"description":
      "The classification label", "enum": ["Footwear/Clothing", "Electronics", "Food/Beverages",
      "Furniture/Home Decor", "Beauty/Personal Care"], "title": "Predicted Category",
      "type": "string"}}, "required": ["predicted_category"], "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '881'
      content-type:
      - application/json
      cookie:
      - __cf_bm=hB18UljW7UZU691nOlL0AKbEXZ.z2MxaC2s6BKzw89I-1723578070-1.0.1.1-MsLp.JVQFNNxZNJTUoOw_wRg7MOoziK7wiidR5KuaCFJInPXjcPfVq8gqTJ.NL2ut.JWhvl8PZR5j0cQnlAlZg;
        _cfuvid=61Rc3TIrUawOwIu8uMB9YcQU3WqJXMYoSpzKaDUbIWc-1723578070221-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//bFLbTttAEH33V6zmOUE4IU3xG4L2AQX1QoXaksrarMfOwnpnuzsGQpR/
        r3zBNlH9YK3m+Fz2jPeREKAzSASorWRVOjM9f/LF81+7fL1abX7c/Ty/Uvrx8vfD82pxbb7BpGbQ
        5gEVv7FOFJXOIGuyLaw8SsZaNV7O5ovlxzg+a4CSMjQ1rXA8nZ8splz5DU1P49miY25JKwyQiPtI
        CCH2zbvOaDN8gUScTt4mJYYgC4Sk/0gI8GTqCcgQdGBpGSYDqMgy2jq2rYwZAUxkUiWNGYzbZz86
        D0VJY9LVTViV+aW7vaXvL7OLX/nT3dfqsyxGfq30zjWB8sqqvqAR3s+TIzMhwMqy4X6p2FV8xBQC
        pC+qEi3XqWG/Bucx04oxS5VkLMjv1pCs4ZNBxZ6sVmENB3incoj+d/4z6sZjXgVputK6+aHfgqHC
        edqEo1Ih11aHbepRhuZyEJhc6137NA5QvVsgOE+l45TpEW0tGM8/tHow/GADuuwwJpZmRDqbR11A
        CLvAWKa5tgV653W/++gQ/QMAAP//AwAe3F8U+gIAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8b2b2f6c88884892-LIS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 13 Aug 2024 19:41:54 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '220'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '50000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '49998954'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 1ms
      x-request-id:
      - req_d8a4e873f54902949bbe0b7abd452f29
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "Classify the input text into
      the correct product category, considering both the specific items mentioned
      and their context or intended use."}, {"role": "user", "content": "Text: Chocolate
      leather boots."}], "model": "gpt-3.5-turbo", "max_tokens": 1000, "seed": 47,
      "temperature": 0.0, "tool_choice": {"type": "function", "function": {"name":
      "Output"}}, "tools": [{"type": "function", "function": {"name": "Output", "description":
      "Correctly extracted `Output` with all the required parameters with correct
      types", "parameters": {"properties": {"predicted_category": {"description":
      "The classification label", "enum": ["Footwear/Clothing", "Electronics", "Food/Beverages",
      "Furniture/Home Decor", "Beauty/Personal Care"], "title": "Predicted Category",
      "type": "string"}}, "required": ["predicted_category"], "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '876'
      content-type:
      - application/json
      cookie:
      - __cf_bm=hB18UljW7UZU691nOlL0AKbEXZ.z2MxaC2s6BKzw89I-1723578070-1.0.1.1-MsLp.JVQFNNxZNJTUoOw_wRg7MOoziK7wiidR5KuaCFJInPXjcPfVq8gqTJ.NL2ut.JWhvl8PZR5j0cQnlAlZg;
        _cfuvid=61Rc3TIrUawOwIu8uMB9YcQU3WqJXMYoSpzKaDUbIWc-1723578070221-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA2xSTWvbQBC961csc7ZTK7axo1sSaC4F00Abk7qI1Wokb7LaWXZHdY3xfy/6iKyY
        6iCW9/Q+NDunSAjQOSQC1F6yqpyZ3v3x5eEh37w9/XjK/MMjPt9l623+/vPgzTeYNArK3lDxh+pG
        UeUMsibb0cqjZGxc49XtfLlax/GiJSrK0TSy0vF0frOccu0zms7i22Wv3JNWGCARvyIhhDi176aj
        zfEvJGI2+UAqDEGWCMnwkRDgyTQIyBB0YGkZJhdSkWW0TW1bGzMimMikShpzCe6e0+h8GZQ0Jq2W
        r+vt6/far7f3L2ETZs9Ftlndv4zyOuujawsVtVXDgEb8gCdXYUKAlVWr3dTsar5SCgHSl3WFlpvW
        cNqB85hrxZinSjKW5I87SHbwlYgPKP2XR0O817bcwRk+eZ2j/51/jybksaiDNP3oevw83IWh0nnK
        wtVoodBWh33qUYb2FyEwuS67yWkToP50jeA8VY5Tpne0jWE8X3R+cFmzEdsvBDCxNCN8sYj6hhCO
        gbFKC21L9M7rYQWic/QPAAD//wMAYTObnwEDAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8b2b2f7098b24892-LIS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 13 Aug 2024 19:41:55 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '213'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '50000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '49998954'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 1ms
      x-request-id:
      - req_c8c4215b1683f7dbb189383d417fdd4c
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "Classify the input text into
      the correct product category, considering both the specific items mentioned
      and their context or intended use."}, {"role": "user", "content": "Text: Wooden
      cream for surfaces."}], "model": "gpt-3.5-turbo", "max_tokens": 1000, "seed":
      47, "temperature": 0.0, "tool_choice": {"type": "function", "function": {"name":
      "Output"}}, "tools": [{"type": "function", "function": {"name": "Output", "description":
      "Correctly extracted `Output` with all the required parameters with correct
      types", "parameters": {"properties": {"predicted_category": {"description":
      "The classification label", "enum": ["Footwear/Clothing", "Electronics", "Food/Beverages",
      "Furniture/Home Decor", "Beauty/Personal Care"], "title": "Predicted Category",
      "type": "string"}}, "required": ["predicted_category"], "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '878'
      content-type:
      - application/json
      cookie:
      - __cf_bm=hB18UljW7UZU691nOlL0AKbEXZ.z2MxaC2s6BKzw89I-1723578070-1.0.1.1-MsLp.JVQFNNxZNJTUoOw_wRg7MOoziK7wiidR5KuaCFJInPXjcPfVq8gqTJ.NL2ut.JWhvl8PZR5j0cQnlAlZg;
        _cfuvid=61Rc3TIrUawOwIu8uMB9YcQU3WqJXMYoSpzKaDUbIWc-1723578070221-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA2xSXW/TMBR9z6+w7nM7mrZhW95GASEE4wWkITpFrnOTmvlr9vVoV/W/o6RZklXz
        Q2Td4/ORYx8SxkCWkDMQW05COzW9fvL17vZO3Dy72Sd8/xOvHn/Rbfw63z7ebGDSMOzmLwp6YV0I
        q51CktacYOGREzaq6eV8kV1epWnWAtqWqBpa7Wi6uMimFP3GTmfpPOuYWysFBsjZn4Qxxg7tt8lo
        StxBzmaTl4nGEHiNkPeHGANvVTMBHoIMxA3BZACFNYSmiW2iUiOArFWF4EoNxqd1GO2HorhSxe4u
        rJ4+iOqf3eHvB/XdL7+t9FKsRn4n6b1rA1XRiL6gEd7P8zMzxsBw3XJ/RHKRzpiMAfd11GioSQ2H
        NTiPpRSEZSE4YW39fg35Gj5HbyRFj+++WI3sIwrr13CEV3LH5K39/agkj1UMXHXtdfNjfx3K1s7b
        TThrFyppZNgWHnlo/xICWXfybnxaB4ivbhKct9pRQfYBTSOYLrKTHgwvbUCvO4wscTUiLZdJFxDC
        PhDqopKmRu+87B9Bckz+AwAA//8DAGBRewUDAwAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8b2b2f7498c84892-LIS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 13 Aug 2024 19:41:55 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '253'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '50000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '49998955'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 1ms
      x-request-id:
      - req_708332a95272480c5941cf3d5d14a6b9
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "Classify the input text into
      the correct product category, considering both the specific items mentioned
      and their context or intended use."}, {"role": "user", "content": "Text: Natural
      finish for your lips."}], "model": "gpt-3.5-turbo", "max_tokens": 1000, "seed":
      47, "temperature": 0.0, "tool_choice": {"type": "function", "function": {"name":
      "Output"}}, "tools": [{"type": "function", "function": {"name": "Output", "description":
      "Correctly extracted `Output` with all the required parameters with correct
      types", "parameters": {"properties": {"predicted_category": {"description":
      "The classification label", "enum": ["Footwear/Clothing", "Electronics", "Food/Beverages",
      "Furniture/Home Decor", "Beauty/Personal Care"], "title": "Predicted Category",
      "type": "string"}}, "required": ["predicted_category"], "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '881'
      content-type:
      - application/json
      cookie:
      - __cf_bm=hB18UljW7UZU691nOlL0AKbEXZ.z2MxaC2s6BKzw89I-1723578070-1.0.1.1-MsLp.JVQFNNxZNJTUoOw_wRg7MOoziK7wiidR5KuaCFJInPXjcPfVq8gqTJ.NL2ut.JWhvl8PZR5j0cQnlAlZg;
        _cfuvid=61Rc3TIrUawOwIu8uMB9YcQU3WqJXMYoSpzKaDUbIWc-1723578070221-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//bFLJbtswEL3rK4g526ll10mtW2O0QJamToD2UhcCTY1kxhRJkMMgiuF/
        L7REUozyIBDz+BY98hgxBjKDhIHYcxKlVdPViyuq35vbe3UbP38zm/2By+8P+d3h14+NgEnNMLtn
        FPTOuhCmtApJGt3CwiEnrFXjq/liefUlji8boDQZqppWWJouLpZTCm5nprN4vuyYeyMFekjYn4gx
        xo7Nt86oM3yFhM0m75MSvecFQtIfYgycUfUEuPfSE9cEkwEURhPqOrYOSo0AMkalgis1GLfrONoP
        RXGl0sPN6+PbfOXX1dPLbH1/PX/7enfz9LAb+bXSlW0C5UGLvqAR3s+TMzPGQPOy4f4MZAOdMRkD
        7opQoqY6NRy3YB1mUhBmqeCEhXHVFpItXCMPVH3aoPNGc8XW3OEWTvBB7hT9b/93VJLDPHiuuva6
        +am/DmUK68zOn7ULudTS71OH3Dd/CZ6Mbb1rn8YBwoebBOtMaSklc0BdC8aLy1YPhpc2oKsOI0Nc
        jUifl1EXEHzlCcs0l7pAZ53sH0F0iv4BAAD//wMABQPrMwMDAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8b2b2f78d87e4892-LIS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 13 Aug 2024 19:41:56 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '243'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '50000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '49998954'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 1ms
      x-request-id:
      - req_34e5e25c850f4fdbd53002783c0ac450
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "You are a helpful assistant."},
      {"role": "user", "content": "\nA prompt is a text paragraph that outlines the
      expected actions and instructs the large language model (LLM) to generate a
      specific output. This prompt is concatenated with the input text, and the model
      then creates the required output.\nThis describes the full template how the
      prompt is concatenated with the input to produce the output:\n\n```\n\n{prompt}\nText:
      {text}\nCategory: {predicted_category}\n```\n\nHere:\n- \"Text: {text}\" is
      input template,\n- \"{prompt}\" is the LLM prompt,\n- \"Category: {predicted_category}\"
      is the output template.\n\nModel can produce erroneous output if a prompt is
      not well defined. In our collaboration, we\u2019ll work together to refine a
      prompt. The process consists of two main steps:\n\n## Step 1\nI will provide
      you with the current prompt along with prediction examples. Each example contains
      the input text, the final prediction produced by the model, and the user feedback.
      User feedback indicates whether the model prediction is correct or not. Your
      task is to analyze the examples and user feedback, determining whether the existing
      instruction is describing the task reflected by these examples precisely, and
      suggests changes to the prompt to address the incorrect predictions.\n\n## Step
      2\nNext, you will carefully review your reasoning in step 1, integrate the insights
      to refine the prompt, and provide me with the new prompt that improves the model\u2019s
      performance."}, {"role": "assistant", "content": "Sure, I\u2019d be happy to
      help you with this prompt engineering problem. Please provide me with the current
      prompt and the examples with user feedback."}, {"role": "user", "content": "\n##
      Current prompt\nClassify the input text into the correct product category, considering
      both the specific items mentioned and their context or intended use.\n\n## Examples\n###
      Example #0\n\nText: Apple product with a sleek design.\n\nCategory: Electronics\n\nUser
      feedback: Prediction is correct.\n\n\n### Example #1\n\nText: Laptop stand for
      the kitchen.\n\nCategory: Electronics\n\nUser feedback: Prediction is incorrect.
      Correct answer: \"Furniture/Home Decor\"\n\n\n### Example #2\n\nText: Chocolate
      leather boots.\n\nCategory: Footwear/Clothing\n\nUser feedback: Prediction is
      correct.\n\n\n### Example #3\n\nText: Wooden cream for surfaces.\n\nCategory:
      Furniture/Home Decor\n\nUser feedback: Prediction is correct.\n\n\n### Example
      #4\n\nText: Natural finish for your lips.\n\nCategory: Beauty/Personal Care\n\nUser
      feedback: Prediction is correct.\n\n\n\nSummarize your analysis about incorrect
      predictions and suggest changes to the prompt."}], "model": "gpt-4-turbo", "max_tokens":
      1000, "seed": 47, "temperature": 0.0}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '2795'
      content-type:
      - application/json
      cookie:
      - __cf_bm=hB18UljW7UZU691nOlL0AKbEXZ.z2MxaC2s6BKzw89I-1723578070-1.0.1.1-MsLp.JVQFNNxZNJTUoOw_wRg7MOoziK7wiidR5KuaCFJInPXjcPfVq8gqTJ.NL2ut.JWhvl8PZR5j0cQnlAlZg;
        _cfuvid=61Rc3TIrUawOwIu8uMB9YcQU3WqJXMYoSpzKaDUbIWc-1723578070221-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//rFZNb9w2EL37Vwzkgxtj1/VX6nhvrpvAQYI2bZ2iQbcwuORImpgiBQ61
        9ibIfy+GolZap+ih7WH3IA45b968+fi8B1CQKRZQ6FpF3bR2frkO1eb3D69+fn784erN9f3pm8fm
        t/Dm7Mfme3NczOSGX31EHYdbR9o3rcVI3vXHOqCKKK+eXJyePb94cXLyXTpovEEr16o2zs/nsQsr
        Pz89Pj2fH5/Pjy/z7dqTRi4W8MceAMDn9C84ncHHYgHHs+FLg8yqwmKxNQIogrfypVDMxFG5WMzG
        Q+1dRJeg7+/vw5VTdsPE4Et47bQPAXWEdwENaYmHl27p9sXy5aOSIGH/ZOnmcHh4i49xcXgIb1Ub
        fQviyEDpA8Qa4Z6irtEd9abXXQjoIlyriJUPG7n20qKOwTvSnI2y76nRqy44il3Ab298g/ADah96
        6wG3WN3WCIlYaIi1lbBLQgOxJoaIjxEUw7KYeizA0j3aDaxQq44RKELpdcdowLsUwoMPBpaFTeHN
        lgU81KRrkCc3LWll7QYUs9ckqYYHijXg6OIIbvwDrjHM0muJ9scI3yyLJxwti2fAXVUhR4ZYq5gO
        KWIjvhofEALa5CN6qIUHIzyAD1AO/MwkRIpygyS/prdeIaSQFIPKGSIHanANjDGSq2bgfCJJuUkI
        YHBNWqAw2vIoCwF+7bGigetauQpZHAnkd8E3bRQzSYjOOW/TVyDHMXQ6hThkK3rI2dr0Mbu2i33C
        yOVHB0W2wZtOR9BZHbDaCKdMBgO5ClY+1ukCt6ipJJ0YZGjQiYyFAyeKQArbXPgwktUxPskYZr37
        EsiNMIbCAHKGBM0kaYMIqzqCX2Owm15UIqktrnvciLT4K/GoMbigYo2iEuWg7ERpArQKSrK1o6cn
        MUyIy3WgVULbBq+ROWXx1oMyJiBzKpE+3Jwn7TtrRDcBS3K9irBpa8X0CfssNa0PUTmdqBlw9NKa
        AEnCxcfWkqZoN0dwgwFByQ9KfBgkLy1mIaBOjqQHWBUGNbze8XM98fN68POecXF4uHQAMIefAlXk
        lF3Asrj+t7Ka/e+iWhYZ3y+4Jkbzn+CJ6ttAPlCkT0+l8FUKfLltJRPMM8A1OqASNIaoyI2KHBtb
        zg4oMFSWmCp5AJFCWrpTSdi74NdkUBrHMB/ITbrBmJ4rYwSwdJhsKKLPxoP4lIOqk/fGavIOav8g
        MnxAqupttElfNao1ibheJdo5yWWRPS4L+Zq9zUDBgf2HUXUAXA/an8wQxXDwd1PoYKdGDyaz5WA7
        U3b6/sFTf88mHYQip4wpHlt6pvlMaH7ptO+CqhBuvCWOpOG9MxhSJOSqkebRcqfPKhmXuYATnjq/
        k7I9DeVj17RJWV6wa9uxlCisVB6N21KIgaoKQ5qTPHJ+NfEkkgvZYfTQbSGn0wFCH7kzW65WWEpy
        DWpKmskDeazRnfYoDTZbCaFrMp2yW01nFm9rZASdB5aiRvA06n5KU1IUo2OKtMZhqrlONJX2I9Fh
        rkhOncwg60CrnT4wrUCe5aUhS6tG20p9BDSdFsyTfaXv05z2kuTYOwS/YgxrNEfTDS5g2bGSLdJ1
        1ubvX7YrofVVG/yK8/n2e0mOuL4LqNg7Wf84+rZIp1/2AP5Mq2e3s00WfV3eRX+PTh58fvKif68Y
        N97x9PziLJ9GH5UdDy4vT/YyxII3HLG5K8lVGNpA/Spatnf64gKPL8w5lsXel72/AAAA//8DAKbk
        72+YCwAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8b2b2f7cf8924892-LIS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 13 Aug 2024 19:42:15 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '18474'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '2000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '1998377'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 48ms
      x-request-id:
      - req_5cdf5afb67e29a5a40d19ab53dd580a7
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "You are a helpful assistant."},
      {"role": "user", "content": "\nA prompt is a text paragraph that outlines the
      expected actions and instructs the large language model (LLM) to generate a
      specific output. This prompt is concatenated with the input text, and the model
      then creates the required output.\nThis describes the full template how the
      prompt is concatenated with the input to produce the output:\n\n```\n\n{prompt}\nText:
      {text}\nCategory: {predicted_category}\n```\n\nHere:\n- \"Text: {text}\" is
      input template,\n- \"{prompt}\" is the LLM prompt,\n- \"Category: {predicted_category}\"
      is the output template.\n\nModel can produce erroneous output if a prompt is
      not well defined. In our collaboration, we\u2019ll work together to refine a
      prompt. The process consists of two main steps:\n\n## Step 1\nI will provide
      you with the current prompt along with prediction examples. Each example contains
      the input text, the final prediction produced by the model, and the user feedback.
      User feedback indicates whether the model prediction is correct or not. Your
      task is to analyze the examples and user feedback, determining whether the existing
      instruction is describing the task reflected by these examples precisely, and
      suggests changes to the prompt to address the incorrect predictions.\n\n## Step
      2\nNext, you will carefully review your reasoning in step 1, integrate the insights
      to refine the prompt, and provide me with the new prompt that improves the model\u2019s
      performance."}, {"role": "assistant", "content": "Sure, I\u2019d be happy to
      help you with this prompt engineering problem. Please provide me with the current
      prompt and the examples with user feedback."}, {"role": "user", "content": "\n##
      Current prompt\nClassify the input text into the correct product category, considering
      both the specific items mentioned and their context or intended use.\n\n## Examples\n###
      Example #0\n\nText: Apple product with a sleek design.\n\nCategory: Electronics\n\nUser
      feedback: Prediction is correct.\n\n\n### Example #1\n\nText: Laptop stand for
      the kitchen.\n\nCategory: Electronics\n\nUser feedback: Prediction is incorrect.
      Correct answer: \"Furniture/Home Decor\"\n\n\n### Example #2\n\nText: Chocolate
      leather boots.\n\nCategory: Footwear/Clothing\n\nUser feedback: Prediction is
      correct.\n\n\n### Example #3\n\nText: Wooden cream for surfaces.\n\nCategory:
      Furniture/Home Decor\n\nUser feedback: Prediction is correct.\n\n\n### Example
      #4\n\nText: Natural finish for your lips.\n\nCategory: Beauty/Personal Care\n\nUser
      feedback: Prediction is correct.\n\n\n\nSummarize your analysis about incorrect
      predictions and suggest changes to the prompt."}, {"role": "assistant", "content":
      "### Analysis of Incorrect Predictions\n\n#### Example #1\n- **Text:** Laptop
      stand for the kitchen.\n- **Current Category:** Electronics\n- **Correct Category:**
      Furniture/Home Decor\n- **Analysis:** The model misclassified this text as \"Electronics\"
      likely because it focused on the word \"laptop,\" which is typically associated
      with electronics. However, the context (\"for the kitchen\") suggests that the
      item is more related to home decor or furniture, as it is intended to be used
      as a stand in a kitchen setting, not as an electronic device itself.\n\n###
      Suggested Changes to the Prompt\n\nThe current prompt instructs the model to
      classify the input text into the correct product category by considering both
      the specific items mentioned and their context or intended use. However, the
      example of incorrect prediction indicates that the model might overly focus
      on specific keywords associated with a category rather than fully integrating
      the context or intended use into the classification process.\n\nTo address this,
      the prompt could be refined to emphasize the importance of context and intended
      use more explicitly. Here are a few suggestions:\n\n1. **Clarify the Importance
      of Context and Intended Use:**\n   - Original: \"Classify the input text into
      the correct product category, considering both the specific items mentioned
      and their context or intended use.\"\n   - Revised: \"Classify the input text
      into the correct product category by prioritizing the context and intended use
      of the items mentioned, even if certain keywords typically suggest a different
      category.\"\n\n2. **Provide an Example in the Prompt:**\n   - Adding an example
      within the prompt can guide the model on how to weigh context more heavily.
      For instance:\n   - \"For example, a ''laptop stand for the kitchen'' should
      be classified as ''Furniture/Home Decor'' rather than ''Electronics'' because
      the context (''for the kitchen'') indicates its use as furniture.\"\n\n3. **Encourage
      Holistic Understanding:**\n   - Encourage the model to analyze the text holistically
      rather than jumping to conclusions based on specific trigger words:\n   - \"Analyze
      the entire text to understand the holistic use and context before deciding on
      the category, rather than focusing on individual keywords.\"\n\nThese changes
      aim to make the model more sensitive to the nuances of how products are described
      and their intended uses, which should help in reducing misclassifications like
      the one observed."}, {"role": "user", "content": "\nNow please carefully review
      your reasoning in Step 1 and help with Step 2: refining the prompt.\n\n## Current
      prompt\nClassify the input text into the correct product category, considering
      both the specific items mentioned and their context or intended use.\n\n## Follow
      this guidance to refine the prompt:\n\n1. The new prompt should should describe
      the task precisely, and address the points raised in the user feedback.\n\n2.
      The new prompt should be similar to the current prompt, and only differ in the
      parts that address the issues you identified in Step 1.\n    Example:\n    -
      Current prompt: \"Generate a summary of the input text.\"\n    - New prompt:
      \"Generate a summary of the input text. Pay attention to the original style.\"\n\n3.
      Reply only with the new prompt. Do not include input and output templates in
      the prompt.\n"}], "model": "gpt-4-turbo", "max_tokens": 1000, "seed": 47, "temperature":
      0.0}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '6180'
      content-type:
      - application/json
      cookie:
      - __cf_bm=hB18UljW7UZU691nOlL0AKbEXZ.z2MxaC2s6BKzw89I-1723578070-1.0.1.1-MsLp.JVQFNNxZNJTUoOw_wRg7MOoziK7wiidR5KuaCFJInPXjcPfVq8gqTJ.NL2ut.JWhvl8PZR5j0cQnlAlZg;
        _cfuvid=61Rc3TIrUawOwIu8uMB9YcQU3WqJXMYoSpzKaDUbIWc-1723578070221-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA1RSTW/bMAy951cQOsdFnCZLmtu6w4p1Q09BBwxDoEi0rVYmBYnu6hT574PsfGwX
        HUi+x8f39DEBUM6qDSjTaDFt8MXdW2we7r/+fHrYbp+3/fcn+/j47fm+/CEv7qCmGcH7FzRyRt0Y
        boNHcUxj20TUgpm1XM1vl6t1ebscGi1b9BlWBykWhXRxz8V8Nl8Us0UxuzuhG3YGk9rArwkAwMfw
        Zp1k8V1tYDY9V1pMSdeoNpchABXZ54rSKbkkmkRNr03DJEiD9C8+T1Q9SIPgKHQCgu8CjoSHmuEY
        0QiEyLYzAkYL1hx72PeAbWh0cgdH9WmWBrAmmwmQLFroEgJXI79gm6BFyi6hnQK+IYGrwGAU7Qhe
        sf/D0SZoXd0IpK6uMQlosK6qMCJd99/AZ9K+P+DAnCkjjtIb9i6JM9r7HoShI4sxe2DBSYKq8/6i
        dI8VRwSLxtl8BdN4yHmJOpl2vLjtuQ6R9zkZ6ry/1CtHLjW7iDoxZWeTcBjhxwnA7yHV7r+gVIjc
        BtkJvyJlwrL8tB4J1fU3XdvLU+ZKWLT/BzYv15OTRpX6JNjuKkc1xhDdGHMVdma1wtnKLrBSk+Pk
        LwAAAP//AwBqPefo9AIAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8b2b2ff2298d4892-LIS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 13 Aug 2024 19:42:18 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '2474'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '2000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '1997561'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 73ms
      x-request-id:
      - req_5af0f5d8ad7c6a8b0b98528d11e3f504
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "Classify the input text into
      the correct product category by emphasizing the context and intended use of
      the items mentioned, even if certain keywords might suggest a different category.
      Analyze the entire text holistically to understand its full context before deciding
      on the category."}, {"role": "user", "content": "Text: Apple product with a
      sleek design."}], "model": "gpt-3.5-turbo", "max_tokens": 1000, "seed": 47,
      "temperature": 0.0, "tool_choice": {"type": "function", "function": {"name":
      "Output"}}, "tools": [{"type": "function", "function": {"name": "Output", "description":
      "Correctly extracted `Output` with all the required parameters with correct
      types", "parameters": {"properties": {"predicted_category": {"description":
      "The classification label", "enum": ["Footwear/Clothing", "Electronics", "Food/Beverages",
      "Furniture/Home Decor", "Beauty/Personal Care"], "title": "Predicted Category",
      "type": "string"}}, "required": ["predicted_category"], "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '1034'
      content-type:
      - application/json
      cookie:
      - __cf_bm=hB18UljW7UZU691nOlL0AKbEXZ.z2MxaC2s6BKzw89I-1723578070-1.0.1.1-MsLp.JVQFNNxZNJTUoOw_wRg7MOoziK7wiidR5KuaCFJInPXjcPfVq8gqTJ.NL2ut.JWhvl8PZR5j0cQnlAlZg;
        _cfuvid=61Rc3TIrUawOwIu8uMB9YcQU3WqJXMYoSpzKaDUbIWc-1723578070221-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA2xSTYvbMBC9+1eIOSdLnJAm62O/Dg20C6UE2hSjyGNFu7KkSqNt05D/XmR7bW+o
        D0bM8/vQG18yxkBVUDAQJ06icXp+/+xPu7r28uHx2/3XZf43Gonv3uv9tto/wCwx7PERBb2w7oRt
        nEZS1nSw8MgJk2q+Wa7Wm22+2rZAYyvUiSYdzVd36zlFf7TzRb5c98yTVQIDFOxHxhhjl/adMpoK
        /0DBFrOXSYMhcIlQDB8xBt7qNAEeggrEDcFsBIU1hCbFNlHrCUDW6lJwrUfj7rlMzmNRXOty8fbz
        7hN9/+3zj/iU76XcqfDr+Tz166TPrg1URyOGgib4MC9uzBgDw5uW+yWSi7fKjAH3MjZoKKWGywGc
        x0oJwqoUnFBafz5AcYAPGgV5a5QIB7jCK5Vr9r/zz0k3HusYuO5L6+fXYQvaSuftMdyUCrUyKpxK
        jzy0l4NA1nXeyad1gPhqgeC8bRyVZJ/QJMH8zarTg/EHG9FNj5ElriekzSLrA0I4B8KmrJWR6J1X
        w+6za/YPAAD//wMAarcfA/oCAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8b2b3004296d4892-LIS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 13 Aug 2024 19:42:18 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '230'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '50000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '49998916'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 1ms
      x-request-id:
      - req_e2464c23aecea2e42c88277f0430f0ee
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "Classify the input text into
      the correct product category by emphasizing the context and intended use of
      the items mentioned, even if certain keywords might suggest a different category.
      Analyze the entire text holistically to understand its full context before deciding
      on the category."}, {"role": "user", "content": "Text: Laptop stand for the
      kitchen."}], "model": "gpt-3.5-turbo", "max_tokens": 1000, "seed": 47, "temperature":
      0.0, "tool_choice": {"type": "function", "function": {"name": "Output"}}, "tools":
      [{"type": "function", "function": {"name": "Output", "description": "Correctly
      extracted `Output` with all the required parameters with correct types", "parameters":
      {"properties": {"predicted_category": {"description": "The classification label",
      "enum": ["Footwear/Clothing", "Electronics", "Food/Beverages", "Furniture/Home
      Decor", "Beauty/Personal Care"], "title": "Predicted Category", "type": "string"}},
      "required": ["predicted_category"], "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '1029'
      content-type:
      - application/json
      cookie:
      - __cf_bm=hB18UljW7UZU691nOlL0AKbEXZ.z2MxaC2s6BKzw89I-1723578070-1.0.1.1-MsLp.JVQFNNxZNJTUoOw_wRg7MOoziK7wiidR5KuaCFJInPXjcPfVq8gqTJ.NL2ut.JWhvl8PZR5j0cQnlAlZg;
        _cfuvid=61Rc3TIrUawOwIu8uMB9YcQU3WqJXMYoSpzKaDUbIWc-1723578070221-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//bFLLattAFN3rK4a7toNl48rWriZNSgk0dRYp1EWMRlfypPPqzFWIMf73
        okckxVQLMdyj85hzdY4YA1lAykAcOQnt1Hz76o8PT3S/+vpyt9ioYn/3Td8+73cPdf4jhlnDsPkL
        Cnpn3QirnUKS1nSw8MgJG9U4Wa7WySZebVtA2wJVQ6sczVc36znVPrfzRbxc98yjlQIDpOxXxBhj
        5/bdZDQFvkHKFrP3icYQeIWQDh8xBt6qZgI8BBmIG4LZCAprCE0T29RKTQCyVmWCKzUad895ch6L
        4kplt8n65+Mm//xY7p92yVK+vt0/7/5qPfHrpE+uDVTWRgwFTfBhnl6ZMQaG65b7vSZX0xWTMeC+
        qjUaalLD+QDOYyEFYZEJTlhZfzpAeoAvCgV5a6QIB7jAB5VL9L/z70k3Hss6cNWX1s8vwxaUrZy3
        ebgqFUppZDhmHnloLweBrOu8G5/WAeoPCwTnrXaUkf2DphGMPy07PRh/sBFNeowscTUlbaM+IIRT
        INRZKU2F3nk57D66RP8AAAD//wMA/ntLq/oCAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8b2b300829154892-LIS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 13 Aug 2024 19:42:19 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '390'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '50000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '49998917'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 1ms
      x-request-id:
      - req_f95fef1f865f8e27d9455fd2f7c53364
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "Classify the input text into
      the correct product category by emphasizing the context and intended use of
      the items mentioned, even if certain keywords might suggest a different category.
      Analyze the entire text holistically to understand its full context before deciding
      on the category."}, {"role": "user", "content": "Text: Chocolate leather boots."}],
      "model": "gpt-3.5-turbo", "max_tokens": 1000, "seed": 47, "temperature": 0.0,
      "tool_choice": {"type": "function", "function": {"name": "Output"}}, "tools":
      [{"type": "function", "function": {"name": "Output", "description": "Correctly
      extracted `Output` with all the required parameters with correct types", "parameters":
      {"properties": {"predicted_category": {"description": "The classification label",
      "enum": ["Footwear/Clothing", "Electronics", "Food/Beverages", "Furniture/Home
      Decor", "Beauty/Personal Care"], "title": "Predicted Category", "type": "string"}},
      "required": ["predicted_category"], "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '1024'
      content-type:
      - application/json
      cookie:
      - __cf_bm=hB18UljW7UZU691nOlL0AKbEXZ.z2MxaC2s6BKzw89I-1723578070-1.0.1.1-MsLp.JVQFNNxZNJTUoOw_wRg7MOoziK7wiidR5KuaCFJInPXjcPfVq8gqTJ.NL2ut.JWhvl8PZR5j0cQnlAlZg;
        _cfuvid=61Rc3TIrUawOwIu8uMB9YcQU3WqJXMYoSpzKaDUbIWc-1723578070221-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA2xSTY/aMBC951dYc162JMBCc+226h4oalVV2y1VZJwh8eJ4LHtSliL+e5WQDVnU
        HCLrvbyPzPgYCQE6h1SAKiWrypnR+z++XH59vtvNHmg6+Z58fgpPOzVd3Zer5U+4aRS0eUbFr6pb
        RZUzyJrsmVYeJWPjGs+TyWy+iKfjlqgoR9PICsejye1sxLXf0GgcJ7NOWZJWGCAVvyIhhDi276aj
        zfEFUtH6tEiFIcgCIe0/EgI8mQYBGYIOLC3DzYVUZBltU9vWxgwIJjKZksZcgs/PcXC+DEoak+XJ
        ahl/+7HYL/4+2oePL1+S+/1SH/wg72x9cG2hbW1VP6AB3+PpVZgQYGXValc1u5qvlEKA9EVdoeWm
        NRzX4DzmWjHmmZKMBfnDGtI1fCLiPUr/7oMhLrUt1nCCN16n6H/n34MJedzWQZpudB1+6ndhqHCe
        NuFqtLDVVocy8yhD+4sQmNw5u8lpE6B+s0ZwnirHGdMObWMY33U7h8s1G7CvJBNLM8Dn46hrCOEQ
        GKtsq22B3nndX4HoFP0DAAD//wMAlKjCxgEDAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8b2b300f9ead4892-LIS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 13 Aug 2024 19:42:20 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '320'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '50000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '49998918'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 1ms
      x-request-id:
      - req_41bd5f7050951d5a5c35e4620a49bdc3
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "Classify the input text into
      the correct product category by emphasizing the context and intended use of
      the items mentioned, even if certain keywords might suggest a different category.
      Analyze the entire text holistically to understand its full context before deciding
      on the category."}, {"role": "user", "content": "Text: Wooden cream for surfaces."}],
      "model": "gpt-3.5-turbo", "max_tokens": 1000, "seed": 47, "temperature": 0.0,
      "tool_choice": {"type": "function", "function": {"name": "Output"}}, "tools":
      [{"type": "function", "function": {"name": "Output", "description": "Correctly
      extracted `Output` with all the required parameters with correct types", "parameters":
      {"properties": {"predicted_category": {"description": "The classification label",
      "enum": ["Footwear/Clothing", "Electronics", "Food/Beverages", "Furniture/Home
      Decor", "Beauty/Personal Care"], "title": "Predicted Category", "type": "string"}},
      "required": ["predicted_category"], "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '1026'
      content-type:
      - application/json
      cookie:
      - __cf_bm=hB18UljW7UZU691nOlL0AKbEXZ.z2MxaC2s6BKzw89I-1723578070-1.0.1.1-MsLp.JVQFNNxZNJTUoOw_wRg7MOoziK7wiidR5KuaCFJInPXjcPfVq8gqTJ.NL2ut.JWhvl8PZR5j0cQnlAlZg;
        _cfuvid=61Rc3TIrUawOwIu8uMB9YcQU3WqJXMYoSpzKaDUbIWc-1723578070221-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//bFJdb5swFH3nV1j3OelCkywNz2nFKi2bokp9WCbkmAu4M7ZrX2/Lovz3
        CkKBRvMDsu7x+eDYp4gxkDkkDETFSdRWTde/XbV9fZpVC7t2O0ofZbH5Ot+mj/fr+wVMGoY5vKCg
        d9aNMLVVSNLoCywccsJGNV7dzperu3gRt0BtclQNrbQ0nd8spxTcwUxn8e2yY1ZGCvSQsB8RY4yd
        2m+TUef4FxI2m7xPavSelwhJf4gxcEY1E+DeS09cE0wGUBhNqJvYOig1AsgYlQmu1GB8WafRfiiK
        K5U9b6s/zzuzS7/PXx/u6GWZxvG/L5unkd9F+mjbQEXQoi9ohPfz5MqMMdC8brnfAtlAV0zGgLsy
        1KipSQ2nPViHuRSEeSY4YWnccQ/JHh6C05KCw0+pqZFtUBi3hzN8kDtH/9v/HJXksAieq669bn7u
        r0OZ0jpz8FftQiG19FXmkPv2L8GTsRfvxqd1gPDhJsE6U1vKyPxC3QjGn+OLHgwvbUDXHUaGuBqR
        VrOoCwj+6AnrrJC6RGed7B9BdI7eAAAA//8DANpBokwDAwAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8b2b30141e8b4892-LIS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 13 Aug 2024 19:42:21 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '523'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '50000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '49998918'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 1ms
      x-request-id:
      - req_59a62e7f0ee1047a0dc8912be5e1abcf
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "Classify the input text into
      the correct product category by emphasizing the context and intended use of
      the items mentioned, even if certain keywords might suggest a different category.
      Analyze the entire text holistically to understand its full context before deciding
      on the category."}, {"role": "user", "content": "Text: Natural finish for your
      lips."}], "model": "gpt-3.5-turbo", "max_tokens": 1000, "seed": 47, "temperature":
      0.0, "tool_choice": {"type": "function", "function": {"name": "Output"}}, "tools":
      [{"type": "function", "function": {"name": "Output", "description": "Correctly
      extracted `Output` with all the required parameters with correct types", "parameters":
      {"properties": {"predicted_category": {"description": "The classification label",
      "enum": ["Footwear/Clothing", "Electronics", "Food/Beverages", "Furniture/Home
      Decor", "Beauty/Personal Care"], "title": "Predicted Category", "type": "string"}},
      "required": ["predicted_category"], "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '1029'
      content-type:
      - application/json
      cookie:
      - __cf_bm=hB18UljW7UZU691nOlL0AKbEXZ.z2MxaC2s6BKzw89I-1723578070-1.0.1.1-MsLp.JVQFNNxZNJTUoOw_wRg7MOoziK7wiidR5KuaCFJInPXjcPfVq8gqTJ.NL2ut.JWhvl8PZR5j0cQnlAlZg;
        _cfuvid=61Rc3TIrUawOwIu8uMB9YcQU3WqJXMYoSpzKaDUbIWc-1723578070221-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//bFLLbtswELzrK4g922nk2HGiY5yiQJC2QU9N60KgqZWshOIS5NK1a/jf
        Az0iKUZ5EIgdzkNDHiMhoMwgEaC2klVl9fR257bfgnu5//H8dPN4uP63e/hiFvf4a6kfPsOkZtDm
        BRW/sy4UVVYjl2RaWDmUjLVqvJxdLZY38TxugIoy1DWtsDy9ulhMObgNTS/j2aJjbqlU6CERvyMh
        hDg23zqjyXAPibicvE8q9F4WCEl/SAhwpOsJSO9Lz9IwTAZQkWE0dWwTtB4BTKRTJbUejNt1HO2H
        oqTW6f6nX+3uVP6X9vj8qr+6+eOqmqvVyK+VPtgmUB6M6gsa4f08OTMTAoysGu73wDbwGVMIkK4I
        FRquU8NxDdZhVirGLFWSsSB3WEOyhjuUgQ+fntB5MlKLlXS4hhN8kDtF/9v/GZXkMA9e6q69bn7q
        r0NTYR1t/Fm7kJem9NvUofTNX4Jnsq137dM4QPhwk2AdVZZTplc0tWB8PWv1YHhpA3rbYUws9Yi0
        jKMuIPiDZ6zSvDQFOuvK/hFEp+gNAAD//wMAZxokOgMDAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8b2b301998aa4892-LIS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 13 Aug 2024 19:42:22 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '270'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '50000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '49998917'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 1ms
      x-request-id:
      - req_1191f7b98fcc1d3ffa4069217c8a9c8c
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "You are a helpful assistant."},
      {"role": "user", "content": "\nA prompt is a text paragraph that outlines the
      expected actions and instructs the large language model (LLM) to generate a
      specific output. This prompt is concatenated with the input text, and the model
      then creates the required output.\nThis describes the full template how the
      prompt is concatenated with the input to produce the output:\n\n```\n\n{prompt}\nText:
      {text}\nCategory: {predicted_category}\n```\n\nHere:\n- \"Text: {text}\" is
      input template,\n- \"{prompt}\" is the LLM prompt,\n- \"Category: {predicted_category}\"
      is the output template.\n\nModel can produce erroneous output if a prompt is
      not well defined. In our collaboration, we\u2019ll work together to refine a
      prompt. The process consists of two main steps:\n\n## Step 1\nI will provide
      you with the current prompt along with prediction examples. Each example contains
      the input text, the final prediction produced by the model, and the user feedback.
      User feedback indicates whether the model prediction is correct or not. Your
      task is to analyze the examples and user feedback, determining whether the existing
      instruction is describing the task reflected by these examples precisely, and
      suggests changes to the prompt to address the incorrect predictions.\n\n## Step
      2\nNext, you will carefully review your reasoning in step 1, integrate the insights
      to refine the prompt, and provide me with the new prompt that improves the model\u2019s
      performance."}, {"role": "assistant", "content": "Sure, I\u2019d be happy to
      help you with this prompt engineering problem. Please provide me with the current
      prompt and the examples with user feedback."}, {"role": "user", "content": "\n##
      Current prompt\nClassify the input text into the correct product category by
      emphasizing the context and intended use of the items mentioned, even if certain
      keywords might suggest a different category. Analyze the entire text holistically
      to understand its full context before deciding on the category.\n\n## Examples\n###
      Example #0\n\nText: Apple product with a sleek design.\n\nCategory: Electronics\n\nUser
      feedback: Prediction is correct.\n\n\n### Example #1\n\nText: Laptop stand for
      the kitchen.\n\nCategory: Electronics\n\nUser feedback: Prediction is incorrect.
      Correct answer: \"Furniture/Home Decor\"\n\n\n### Example #2\n\nText: Chocolate
      leather boots.\n\nCategory: Footwear/Clothing\n\nUser feedback: Prediction is
      correct.\n\n\n### Example #3\n\nText: Wooden cream for surfaces.\n\nCategory:
      Furniture/Home Decor\n\nUser feedback: Prediction is correct.\n\n\n### Example
      #4\n\nText: Natural finish for your lips.\n\nCategory: Beauty/Personal Care\n\nUser
      feedback: Prediction is correct.\n\n\n\nSummarize your analysis about incorrect
      predictions and suggest changes to the prompt."}], "model": "gpt-4-turbo", "max_tokens":
      1000, "seed": 47, "temperature": 0.0}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '2943'
      content-type:
      - application/json
      cookie:
      - __cf_bm=hB18UljW7UZU691nOlL0AKbEXZ.z2MxaC2s6BKzw89I-1723578070-1.0.1.1-MsLp.JVQFNNxZNJTUoOw_wRg7MOoziK7wiidR5KuaCFJInPXjcPfVq8gqTJ.NL2ut.JWhvl8PZR5j0cQnlAlZg;
        _cfuvid=61Rc3TIrUawOwIu8uMB9YcQU3WqJXMYoSpzKaDUbIWc-1723578070221-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//rFdNb9w2EL37VwzkQ1pjvfE6mzjxLXaSBkjTGm6Kou0WBpccSawpjsCh
        vFaC/PdiKEq73gRtDr3sQeRw3rx587GfDgAKa4pzKHStom5ad/ziLtQ/r394hr+jf9a9v1j8cfax
        ulpcq1fv370rZmJB679Rx9FqrqlpHUZLfjjWAVVEeXVxdvrk6dnzxfI0HTRk0IlZ1cbj5XHswpqO
        T09Ol8cny+OTF9m6JquRi3P48wAA4FP6FZze4H1xDiez8UuDzKrC4ny6BFAEcvKlUMyWo/KxmG0P
        NfmIPkE/PDyEl165ni0DlRBrhMsuBPQRrgI1bQTlDby+VxIdr/zKf6gRdL7SDles5xg6HTnZpwAh
        Emgn7ss+fbW+7SJEvJfrkdI3TSGgTs+YTkfQKmJFoYd1D9i0tWL70foq3/XJWOBYwW/QQMc4orYR
        G4YGvaQAzQyUhDWZJ9uanOVotXKun8OH2jKotg2kdA2WoUKPQc4AyxJ1tHc4A8XAiB6sh4Y4ju4w
        MyLY76xBM4e3tME7DDM5DygPKvAU1drJdY2tIJN3MptwuJjBprbi3BsrwYtJS5IcqxyogApKCmAb
        8YISnNiL/4H5uSTkUJJ4EVDdGtp4ATim63zlj+HoaPJ3cnR0Dh9GNlbFy1Y+j+xvbKxBATvEWzDI
        tvKrAjaKxzy5fsyQ/YhGmFkVrx3qGMhbzbNVAc7eouvBdAg5x7fYbyiY0ZtcyjEzsFhWrgfFTNpK
        vQwocPvqfC+GxV4MP6o2UgsicpPISk5t1DWO8K3/tgDmq2IQBYZAAUgnmRvhorURB3EPAhOWV4VL
        viWkNWolYhyUvqPO71bFF6C+B+6qCjlKuo0tS0zFNKp/Bg0FBOVs5UdCVsWbLngbu4CP31KD8Ao1
        hfmq2GPnVNhZFZc1aXIqIjhUIkdYE0X+73S+IYobVOHxpaNYW19JcFzTRupoqoqxGDvloPMGQ2Lf
        +mo/WU8GOL8RGfQgLbFJOeIulErjtwD6StiCKVeMwFJQERmoguJ2LM+s6UcsSdhHtRxQ/aRiF5SD
        0nrLdcLVUxfA2fYbgF2g6mL/+AoDk1cOLlVI4jbYkLTDjM0/JGgPn7Qfl+IgP9Yy/DKIAw1c1spX
        yGMpDQ156MCNsh4sc4eggmXkQSdT/33EUCtvXPaZ/UmDVhFqdYfSaYJtVOih7LxOot4vQwXcoral
        1TutuYvSmLYqF95E6daDmrp07NuhzX75pqckyPHBeSrmPEi4ps4ZwHthxQrvypiALLilX2j0KlgS
        QnJPBCVVqnS/bYXXeGcZTabrfOVXxeX/NYnWlEn+grudMTTMqMhbjkZaqEx6hEvybA2GsTvmvOS2
        AGrkb492x5THGkJNmwdzUapqTFYnC8F2Fo4zI91rbFXHaeB8tQHN4bXnLqQWvlVveqLsnHswine5
        aLvQ0sOJ/GDkwhpL6WwGtR2KYcA1+ZV2NtTANSomL3dEXrkOxnE25IPF/Cq7fjNJ2BthV/BJlV/0
        UNuqdhL0sAqo+C9JHCMaI8x6XKcvKWOyWWyXHFkaOpn+QpWnCExO5l+QH/JJ1tYLt1Oip0Tm4Idc
        jQ7HbWI3Zbl9vc1Mwq+7DUWCvEbrSwp63HU85rJUE/17XQi9pi6o1Ft2NzYRbBWSLpyDVoU4bYUJ
        XhiGSayVh5J0xzmLltO0MVOY82FTtAwhV+PDCq/RtRJjQNMl3GnkctofkjvyOO1du/uSQ5UiiJSn
        ZCr/iNsGnZopg9KBmOFOhV7uZ4J5XuQ9+PO0QDuq2kBrWbZ959z0fZgLNyFJUZZljtQO5p8PAP5K
        i3r3YPcuhihvIt2ilwefLpfDe8X2/8HO6eJ5Po0UldseLE6enR5kjAX3HLG5Ka2vMLTBDpt72d7o
        szM8OTNLLIuDzwf/AAAA//8DANN7dnnHDAAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8b2b301dc8334892-LIS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 13 Aug 2024 19:42:42 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '19462'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '2000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '1998339'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 49ms
      x-request-id:
      - req_f45a8251cbdd1498371f40c4e43987de
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "You are a helpful assistant."},
      {"role": "user", "content": "\nA prompt is a text paragraph that outlines the
      expected actions and instructs the large language model (LLM) to generate a
      specific output. This prompt is concatenated with the input text, and the model
      then creates the required output.\nThis describes the full template how the
      prompt is concatenated with the input to produce the output:\n\n```\n\n{prompt}\nText:
      {text}\nCategory: {predicted_category}\n```\n\nHere:\n- \"Text: {text}\" is
      input template,\n- \"{prompt}\" is the LLM prompt,\n- \"Category: {predicted_category}\"
      is the output template.\n\nModel can produce erroneous output if a prompt is
      not well defined. In our collaboration, we\u2019ll work together to refine a
      prompt. The process consists of two main steps:\n\n## Step 1\nI will provide
      you with the current prompt along with prediction examples. Each example contains
      the input text, the final prediction produced by the model, and the user feedback.
      User feedback indicates whether the model prediction is correct or not. Your
      task is to analyze the examples and user feedback, determining whether the existing
      instruction is describing the task reflected by these examples precisely, and
      suggests changes to the prompt to address the incorrect predictions.\n\n## Step
      2\nNext, you will carefully review your reasoning in step 1, integrate the insights
      to refine the prompt, and provide me with the new prompt that improves the model\u2019s
      performance."}, {"role": "assistant", "content": "Sure, I\u2019d be happy to
      help you with this prompt engineering problem. Please provide me with the current
      prompt and the examples with user feedback."}, {"role": "user", "content": "\n##
      Current prompt\nClassify the input text into the correct product category by
      emphasizing the context and intended use of the items mentioned, even if certain
      keywords might suggest a different category. Analyze the entire text holistically
      to understand its full context before deciding on the category.\n\n## Examples\n###
      Example #0\n\nText: Apple product with a sleek design.\n\nCategory: Electronics\n\nUser
      feedback: Prediction is correct.\n\n\n### Example #1\n\nText: Laptop stand for
      the kitchen.\n\nCategory: Electronics\n\nUser feedback: Prediction is incorrect.
      Correct answer: \"Furniture/Home Decor\"\n\n\n### Example #2\n\nText: Chocolate
      leather boots.\n\nCategory: Footwear/Clothing\n\nUser feedback: Prediction is
      correct.\n\n\n### Example #3\n\nText: Wooden cream for surfaces.\n\nCategory:
      Furniture/Home Decor\n\nUser feedback: Prediction is correct.\n\n\n### Example
      #4\n\nText: Natural finish for your lips.\n\nCategory: Beauty/Personal Care\n\nUser
      feedback: Prediction is correct.\n\n\n\nSummarize your analysis about incorrect
      predictions and suggest changes to the prompt."}, {"role": "assistant", "content":
      "### Analysis of the Current Prompt and Examples\n\nThe current prompt instructs
      the model to classify the input text into the correct product category by emphasizing
      the context and intended use of the items mentioned, analyzing the text holistically.
      This approach is generally effective, as seen in most of the examples provided.
      However, there is a notable exception in Example #1, which indicates a potential
      area for improvement in the prompt.\n\n#### Breakdown of Examples:\n- **Example
      #0**: The text \"Apple product with a sleek design\" was correctly categorized
      as \"Electronics,\" likely due to the keyword \"Apple,\" which is strongly associated
      with electronics.\n- **Example #1**: The text \"Laptop stand for the kitchen\"
      was incorrectly categorized as \"Electronics.\" This error occurred despite
      the mention of \"laptop,\" because the intended use (\"for the kitchen\") suggests
      a different category, more aligned with \"Furniture/Home Decor.\"\n- **Example
      #2**: \"Chocolate leather boots\" was correctly categorized as \"Footwear/Clothing,\"
      showing effective contextual understanding.\n- **Example #3**: \"Wooden cream
      for surfaces\" was correctly categorized as \"Furniture/Home Decor,\" indicating
      a good grasp of the product''s use.\n- **Example #4**: \"Natural finish for
      your lips\" was correctly categorized as \"Beauty/Personal Care,\" demonstrating
      an understanding of the product application.\n\n### Suggested Changes to the
      Prompt\nThe main issue arises with the model''s handling of products that have
      a primary function associated with a specific category but are intended for
      use in a context typically associated with another category. The prompt should
      explicitly address this scenario to improve accuracy.\n\n#### Revised Prompt:\n\"Classify
      the input text into the correct product category by emphasizing both the primary
      function of the item and its intended context of use. Consider keywords that
      suggest a typical category but also analyze how the context or specific usage
      mentioned in the text might indicate a different category. Ensure to understand
      the full context and the primary purpose of the item holistically before deciding
      on the category.\"\n\n### Reasoning for Changes:\n- **Emphasis on Primary Function
      and Context**: By highlighting that both the primary function and the context
      should be considered, the model is guided to not solely rely on prominent keywords
      but also on the usage context provided in the text.\n- **Holistic Understanding**:
      Reinforcing the need for a holistic understanding encourages the model to integrate
      all parts of the text rather than focusing on isolated keywords.\n\nThis revised
      prompt should help in reducing errors like the one seen in Example #1, leading
      to more accurate categorizations across varying contexts."}, {"role": "user",
      "content": "\nNow please carefully review your reasoning in Step 1 and help
      with Step 2: refining the prompt.\n\n## Current prompt\nClassify the input text
      into the correct product category by emphasizing the context and intended use
      of the items mentioned, even if certain keywords might suggest a different category.
      Analyze the entire text holistically to understand its full context before deciding
      on the category.\n\n## Follow this guidance to refine the prompt:\n\n1. The
      new prompt should should describe the task precisely, and address the points
      raised in the user feedback.\n\n2. The new prompt should be similar to the current
      prompt, and only differ in the parts that address the issues you identified
      in Step 1.\n    Example:\n    - Current prompt: \"Generate a summary of the
      input text.\"\n    - New prompt: \"Generate a summary of the input text. Pay
      attention to the original style.\"\n\n3. Reply only with the new prompt. Do
      not include input and output templates in the prompt.\n"}], "model": "gpt-4-turbo",
      "max_tokens": 1000, "seed": 47, "temperature": 0.0}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '6803'
      content-type:
      - application/json
      cookie:
      - __cf_bm=hB18UljW7UZU691nOlL0AKbEXZ.z2MxaC2s6BKzw89I-1723578070-1.0.1.1-MsLp.JVQFNNxZNJTUoOw_wRg7MOoziK7wiidR5KuaCFJInPXjcPfVq8gqTJ.NL2ut.JWhvl8PZR5j0cQnlAlZg;
        _cfuvid=61Rc3TIrUawOwIu8uMB9YcQU3WqJXMYoSpzKaDUbIWc-1723578070221-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//VFLLbtswELz7KxY824afUeJb0RYFcukHFIVBkUuJDcUlyKVtJfC/F5Rk
        O7noMMMZDYfzMQMQVosDCNVKVl1wi5dTbO0em+cf5+2vPu5fdxmNq39Xp9fdRcyLgup/qPimWirq
        gkO25EdaRZSMxXVdbbb76nn9tBmIjjS6ImsCL3YLzrGmxWa12S1Wu8XqZVK3ZBUmcYA/MwCAj+Fb
        cnqNF3GA1fyGdJiSbFAc7ocARCRXECFTsomlZzF/kIo8ox+if3flhOmBWwTrQ2ZgvDBYzzRgimJE
        xRAi6awYlGRsKPZQ94BdaGWy79Y3UBO3gyBE28nYg8lelTaAzGjO2IH0GiynYo9eo4YhyoXLoZxw
        CT9P6MEaUBhZWg9v2J8p6gSdbVqGlJsGE4ME7oNV0t3zzEF66fp3hJbOU/LJOkIKqKyxCnJpCjr0
        JRnqydV6bYsPSNDWGIzoHxddwrfJuJgWZcSxo5acTVxSuB6YIHuNsZQ93tFk5+4hCnhrJuQYKCHU
        aCgiaFRWlwrJj7lvP/78ZBFNTrLMxmfnJvx634CjJkSq08TfcWO9Te0xokzky3snpiAG9joD+Dts
        LX+ZjwiRusBHpjf0xXC9edqPhuKx8QddrSeSiaX7JNtun2ZTRpH6xNgdjfUNxhDtOD4TjqqqcFXp
        HRoxu87+AwAA//8DAF4jiOCKAwAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8b2b30996a4f4892-LIS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 13 Aug 2024 19:42:45 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '2999'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '2000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '1997407'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 77ms
      x-request-id:
      - req_5b7674670c289b9f43d5c4258255bec4
    status:
      code: 200
      message: OK
version: 1
