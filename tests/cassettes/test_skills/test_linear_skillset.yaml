interactions:
- request:
    body: ''
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.5
    method: GET
    uri: https://api.openai.com/v1/models/gpt-4
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA6rmUlBQykxRslJQSi8o0TVR0gEJ5CdlpSaXgARz81NScyCCyUWpiSWpIKWGZhbm
        FhZGJoaGENXleakp8UmVIPX5Bal5iZlKXLVcAAAAAP//AwCF+4fvWgAAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 89d7dec88c347b22-DEN
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 03 Jul 2024 15:22:18 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=ssoCojKy._Fr6TWL3W8SnCoHysXf_k4IGYC991.PDTA-1720020138-1.0.1.1-5mhYpFRkb_cUY6GpVw2cpZ1LhP0qEjP_666ll54KuuneEOf4pAmx71GuRQwdS60wROGRP_7mvU68cuYapzY.rw;
        path=/; expires=Wed, 03-Jul-24 15:52:18 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=SOUhwrqmZts1CQEY4rLbped7GhNz_rY2fVfSoVZudDE-1720020138485-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Transfer-Encoding:
      - chunked
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '26'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-request-id:
      - req_d3d8f6e6cd74d9428ec8a515a525fcca
    status:
      code: 200
      message: OK
- request:
    body: ''
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.5
    method: GET
    uri: https://api.openai.com/v1/models/gpt-3.5-turbo
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA6rmUlBQykxRslJQSi8o0TXWM9UtKS1KylfSAUnkJ2WlJpeAJHPzU1JzIILJRamJ
        JakgLYZm5uZmhgZmBkYQ1eV5qSnxSZUg9fkFqXmJmUpctVwAAAAA//8DAA4WdMNiAAAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 89d7dec9f9487c26-DEN
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 03 Jul 2024 15:22:18 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=8ExYrtnMptO5jfXpkOJ7wZI4dtZ_EEyIUdgGWx2OYYs-1720020138-1.0.1.1-dkAc2IAKMeKABD6Jgc8IxPObcxTwl3k.4yO.CMbs8_BhrJ2jwxC08eV4HU2i8fyvoAOknID72w6YsLgCkoAaNQ;
        path=/; expires=Wed, 03-Jul-24 15:52:18 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=yvuY2SYzK5jMURdDseKYxMxJKJnyA._cpM10tCzhjsY-1720020138638-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Transfer-Encoding:
      - chunked
      access-control-allow-origin:
      - '*'
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '28'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15724800; includeSubDomains
      x-request-id:
      - req_e7490d686d4495d39953317f25a1ba8e
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "..."}, {"role": "user", "content":
      "Input: Macronutrients\nOutput: "}], "model": "gpt-3.5-turbo"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '142'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA3RTS2/bMAy+51cQOidBHmuz5bYOPfYyFMOAYShombaUyqJB0muzov99kJMmWYdd
        DJjU95I/v0wAXKzdFpwPaL7r0+xT+3R9u/Y5fL/5unv+Lffd582Hb+u7q1276dy0ILjakbc31Nxz
        1yeyyPmw9kJoVFiXm9VisVos1x/HRcc1pQJre5ut51czG6Ti2WK5ujoiA0dP6rbwYwIA8DI+i8dc
        07PbwmL6NulIFVty29MhACecysShalTDbG56XnrORnm0fYdeOA8mkbIpoBBYIDhPLKABDwIV15EU
        MlENMUNCaQmw46GcaliAMkm7B8w1tMJPFuZwHwqdEEGHMUP3r5hHqTjsa0EjnUIvbBSzTkeaBk3n
        cIs+ADfFl9J7jj7hXgGhjk1DQtmgJC8GS4yK64OhgArak49N9NAM2ZdvpHP4cil/Sj+aVR7EUxE+
        BisZ30jPTkcQqVK2iGk8VA0x1TG3o7JQj1HKm0XVgS6ijdDY9SzlA13eoRoLlust1lk6zlQE62H0
        PYcbTJj9SBpKWMNH+u8VRX0nUuIZxlzw/IsEU4JAmCyMgk+U0qyimNu5O3bm9VS2xG0vXJVi5iGl
        07yJOWp4EELlXIqlxv0B/joB+DmWevirp64X7np7MH6kXAhXywOdO/9G5+VycX3cGhumi8VqMzk6
        dLpXo+6hibkl6SWOHS8+J6+TPwAAAP//AwAQiJ8U4gMAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 89d7decafd0151ef-DEN
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 03 Jul 2024 15:22:20 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=xCdeqkn.ZZUz5zvT0o4JwRkaOS38OXENN7l4twsPMEg-1720020140-1.0.1.1-G_1TlEBGVkN5_tGBFYV7nyXhDJbPe5QUaO.5h4HAgwiVc63vY_8NhRgeCponOg_56gIVIwUjJM5t2zyPRbzciQ;
        path=/; expires=Wed, 03-Jul-24 15:52:20 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=_JdJrF7L4iYO0SmemYURjJ86mJ2JSMYs0ycm216x5ug-1720020140823-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Transfer-Encoding:
      - chunked
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '1984'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '5000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '4999973'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_004bec75b562af8ed69e1950a9766869
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "..."}, {"role": "user", "content":
      "Input: Vitamins\nOutput: "}], "model": "gpt-3.5-turbo"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '136'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA1RSwW4TMRC95ytGe+GyiZKUFjU3CpWAnhCIAwhVE+9k19SeMZ5x0hT135E3aQIX
        H97zm/fGfn8mAI3vmhU0bkBzMYXpdb+7+nBze/fwhLefr+zpUr/Pbz7Rlp8ed1+atipk/Yucvahm
        TmIKZF74QLtMaFSnLt4s5/PlfPF6MRJROgpV1iebXswup1byWqbzxfLyqBzEO9JmBT8mAAB/xrNm
        5I4emxXM2xckkir21KxOlwCaLKEiDap6NWRr2jPphI14jP3NG0bPCpgJSJXYPAaQ3CN7B3UhKdwp
        2IAGNhAMJSLDWro9MFGn4Bk0YgiAUQqbgglsCrv6DJCyJMphP4OvA+0hBdwDgsvFVZuasuq3mL0U
        rVN92J/U2oIWNwAqRDJcS/AaW/AxFibQvRpF0JKSZGsBuQPZUq5RBsJgw2iaadyt85sNZWID2ydS
        kA1sj7u34NmF0nnuXzB428JNC+9aeN/C7WH2XQuEboCdtwG8KciOQRM5v/HunHm8q1KyI53BR3ul
        4GNNiNVbIKJnQ8+AsMaA7KiDztPIEWupeRmwo98Frb6O4QP9G3c0SFmiGJ0W3lEI0zV57mfN8aOf
        Tw0J0qcs69omLiGc8I1nr8N9JlTh2gY1SQf58wTg59jE8l+5mmqc7N7kgbgOXB6L2Jy7fyavL46k
        iWE444vFxeQYsDl84/3Gc085ZT/2ssacPE/+AgAA//8DAKpnecCWAwAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 89d7ded8ee017b2e-DEN
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 03 Jul 2024 15:22:22 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=WNsjOlLgnpBbN7RpfbKpZuWdg6A_RbNpy4DGk2wWLz4-1720020142-1.0.1.1-hwcDArHZ63IdQAxz62_rabeWYZq1J46Me6wyZCAjfdhnC6KpYcT9K9.Q_8UJFfwUvtzA_x2MIXTjz4aNYQuLHg;
        path=/; expires=Wed, 03-Jul-24 15:52:22 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=dZbvEK5vhALUWtWfl0CXfpSz4DdO8ByFvHbaP..kg4o-1720020142485-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Transfer-Encoding:
      - chunked
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '1285'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '5000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '4999974'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_a962c6e2a0054eb9cf3b61b5c4f8d79d
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "..."}, {"role": "user", "content":
      "Input: Minerals\nOutput: "}], "model": "gpt-3.5-turbo"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '136'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA1SSTW/bMAyG7/kVhC+7OIGTrdua2zDsowWKAW1RYBiGgpZpm6tEeqKcziv63wu5
        SbNdBIGvHvIVyYcFQMFNsYXC9ZhcGPzytLt/e/Y5nN9UH+k3fj+/uPyGn9zX6y9XlzcfijITWv8i
        lw7UymkYPCVWeZZdJEyUs67fbapqU63fbGYhaEM+Y92Qlq9XJ8s0xlqX1Xpzsid7ZUdWbOHHAgDg
        YT6zR2noT7GFqjxEAplhR8X25RFAEdXnSIFmbAklFeVRdCqJZLZ9wUIRvQFGAhaNHQo7sLHOlCOD
        1GOaVTIjSYweWo2ww8g6GtTasJ+gHcXlf9sKrnuaYPA4AYKLo8tEtgMsEJAlIQtLB7rLlT30hD71
        gNLAPXm/rImlW8GVBgKnIahAOLhkcX5sCBx6x2MoIWAnZPOVo0o5p/nL4mYfRkfUoUBN0OooTbZy
        +ECr2hjY6HpAgwY5TjBEbUaXrARP2E7QRSKxEmTMsVzCiBpbwVkCNuAwaMxNhqTQ444AoUaf+5dL
        Jbwj0PZoJSnYOGQGUk+5hdMrO7ZwLjBE2pEkaKhlxySOyVbFfoaPL8P32g1R67woMnr/Em9Z2Prb
        SGgqedCWdHjGHxcAP+clG//bm2KIGoZ0m/SOJCdcnz6nK45rfRTfb/Zi0oT+H6haL/YGC5ssUbht
        WTqKQ+R55bLNxePiCQAA//8DAK+KPgVxAwAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 89d7dee2f9955342-DEN
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 03 Jul 2024 15:22:24 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=FzeCnrnXg0GLsd.ihFEjvuUxTa9PF71EIXijKNqQllE-1720020144-1.0.1.1-CJJ6d0_6Ld.i.oMA5HSsX_L3UgyfY3e3gRR3_.2BeFTzCKUAg9u0bI3H12esTUE3HOuXTcotoaCNKE64lBq5qA;
        path=/; expires=Wed, 03-Jul-24 15:52:24 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=S8cBDtpTpkMfMgBkEtDiTIPlrnpVkWOr7rNLyttttrk-1720020144032-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Transfer-Encoding:
      - chunked
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '1210'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '5000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '4999974'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_36405dfb78cdf634ff8f88d79d752b40
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "..."}, {"role": "user", "content":
      "Input: Macronutrients are the nutrients that our bodies need in large amounts
      for energy and growth. The three main macronutrients are carbohydrates, proteins,
      and fats. Each of these macronutrients plays a different role in the body and
      has specific functions. Carbohydrates are the main source of energy for the
      body, proteins are essential for building and repairing tissues, and fats are
      important for energy storage and hormone production. Balancing the intake of
      these macronutrients is important for maintaining overall health and well-being.\nOutput:
      "}], "model": "gpt-3.5-turbo"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '670'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA2RTy27bMBC8+ysWPNuGH3GK+lb0UBRBDi16KFoUwYpaS0woLrO7TCoE+feCshOn
        7UWAZjizw9XoaQbgQuv24HyP5occF++7x8ur3e32q7+8+pK2H67b3Wf+8emSv+9ydPOq4OaWvL2o
        lp6HHMkCpyPthdCouq7fbVarzWp9cTERA7cUq6zLttgudwsr0vBitd7sTsqegyd1e/g5AwB4mp41
        Y2rpt9vDav6CDKSKHbn96yEAJxwr4lA1qGEyNz+TnpNRmmJfoxdOxSRQMgUUAlKlZAEjnHHr0YCL
        QMNtIAWh+xKEICSIKB3BfcFkwSp3YAFKJN0ImFrohB+tX8K3nsB6IYIBQ4Lh/8EepeF+bAWNdA5Z
        2CgknU82BzSdA6HvQUkeQuqgpHBfCA4l+bpyrWmsp5pxXMLHt26Tf+WyhAFlBOUinoAPp6jnccco
        UnzdQL1LU0Js67waQyhjkPpmQbXQm3SQI46AUFdfo5x2oMaCHU3HepaBE4GOyXrSoEu4xpAMQ5oG
        QIMRk6cWKng35asH6d91BYU7GsEYtOTMYlXODyQYI/SE0fpp4CPFmEh16U5f//m1NpG7LNzUiqUS
        4yt+CClofyOEyqlWRI3zUf48A/g11bP81TiXhYdsN8Z3lKrherM5+rnzH3Fm329PpLFhPOOb9W52
        Suh0VKPh5hBSR5IlTG2tOWfPsz8AAAD//wMAFn5sjKwDAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 89d7deed29fe7c2e-DEN
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 03 Jul 2024 15:22:25 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=gdoX8FSCZtNfsth97IgqYrfBlLfsuAOUBzxmRtXq6L8-1720020145-1.0.1.1-SQYJp.J4mdCKmQ6EIqdCKRlurbKi2vZh6EzxluDKcuNiOWsskLtr84zVemmG7hmI_6kC01MTPdnYNdDaWiViwA;
        path=/; expires=Wed, 03-Jul-24 15:52:25 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=_XbMri1ufwvCZhh4S5f90NzqS_nQH5v4LTRHXtZHbuQ-1720020145643-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Transfer-Encoding:
      - chunked
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '1276'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '5000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '4999841'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 1ms
      x-request-id:
      - req_00a23fb4ba310a72de49e670ff7399d6
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "..."}, {"role": "user", "content":
      "Input: Vitamins are essential organic compounds that the human body needs in
      small amounts to function properly. They play a crucial role in various bodily
      functions, such as metabolism, immune system support, and overall health. There
      are different types of vitamins, including vitamin A, B, C, D, E, and K, each
      with its own specific functions and sources. It''s important to maintain a balanced
      diet to ensure an adequate intake of vitamins and promote overall well-being.\nOutput:
      "}], "model": "gpt-3.5-turbo"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '595'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA1RSy24bMQy8+yuIvfSyNvxo0sa3PgK0SC8F2h5aFAFXS3uVSKQqUnGMIP9eaO3Y
        7UWHGc1wKM3TBKDxfbOGxg1oLqYwvdruLr8s08+SHlN3dzWs+v7T9+vvq7fx5utl01aFdHfk7EU1
        cxJTIPPCB9plQqPquniznM+X88Xri5GI0lOosm2y6Wp2MbWSO5nOF8uLo3IQ70ibNfyaAAA8jWfN
        yD09NmuYty9IJFXcUrM+XQJosoSKNKjq1ZCtac+kEzbiMfYPbxg9K2AmIFVi8xhA8hbZO6gLSeFe
        wQY0sIFgKBEZOun3wES9gmfQiCEARilsCiawKezqM0DKkiiH/Qy+DbSHFHAPCC4XV8fUlFX/gNlL
        0erqw/6k1ha0uAFQIZJhJ8FrbMHHWJhA92oUQUtKkq0F5B7kgXKNMhAGG8ahmcbder/ZUCY2sH0i
        BdnAw3H3Fjy7UHrP2xcM3rXwvoUPLXxs4frgfdMCoRtg520AbwqyY9BEzm+8O2ce76qU7Ehn8Nle
        KfhYE2KdLRDRs6FnQOgwIDvqofc0csRaal4G7OlPQauvY3hP/8YdB6QsUYxOC+8ohGlHnrez5vjR
        z6eGBNmmLF1tE5cQTvjGs9fhNhOqcG2DmqSD/HkC8HtsYvmvXE0dnOzW5J64Gi7mVwe/5lz+M3u1
        OpImhuGML+fLyTFhc/jH243nLeWU/VjMmnPyPPkLAAD//wMAYGF9o5cDAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 89d7def6ba617b28-DEN
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 03 Jul 2024 15:22:27 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=3hVPmpcCoeQKNfwUASYQqbPKZQ1Pn8liP09MmFua04s-1720020147-1.0.1.1-td_vLtf2RBT_gBvyK9L9vzL6gm3QV7gfH_Wwn8gc6L2uM9mXFKoBHQ9lqgHuoBY_RwtxL1jlWsgApFHd70gtHQ;
        path=/; expires=Wed, 03-Jul-24 15:52:27 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=cAZETNwT9b91z9vVJtNxNF1sHKSkIU3VW0TLHLdbpYQ-1720020147233-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Transfer-Encoding:
      - chunked
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '1320'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '5000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '4999860'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 1ms
      x-request-id:
      - req_7c4ac95aee08d744137be2200c10263a
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "..."}, {"role": "user", "content":
      "Input: Minerals are inorganic substances that are essential for various bodily
      functions. They play a crucial role in maintaining overall health and well-being.
      Some common minerals include calcium, magnesium, iron, and zinc. These minerals
      can be found in various foods such as dairy products, leafy greens, nuts, and
      seeds. It is important to have a balanced intake of minerals to support the
      body''s functions and prevent deficiencies.\nOutput: "}], "model": "gpt-3.5-turbo"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '558'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA1RSTW/UQAy976+wcuGSXWUX+rU36AkJEAgQUhGqnImTmE7saDyzbVr1v6NJdxtx
        GY3em2e/sd/TCqDgpthD4XqMbhj9+qq7P/9yc33dd/ePX39e3T28tw/2zZ3X4dOvqiizQuu/5OJJ
        tXE6jJ4iq7zQLhBGylW3F7uq2lXbdxczMWhDPsu6Ma7fbs7WMYVa19V2d3ZU9sqOrNjD7xUAwNN8
        Zo/S0EOxh6o8IQOZYUfF/vURQBHUZ6RAM7aIEotyIZ1KJJltf2ahgN4AAwGLhg6FHViqs8qRQewx
        ziyZkURGD60GOGBgTQa1NuwnaJO4/G/bwI+eJhg9ToDgQnJZke0ACwzIEpGFpQM95M4eekIfe0Bp
        4J68X9fE0m3guw4ETodBBYaTSxbnU0Pg0DtOQwkDdkI2XzmolHOZRxY3+zBapA4FaoJWkzTZyukD
        rWpjYMn1gAYNcphgDNokF60ET9hO0AUisRIkZSy3MKLGNvAxAhvwMGrIQ4ao0OOBAKFGn+eXW0W8
        I9B2sRIVLI1ZA7GnPMLpjS0jnBuMgQ4kERpq2TGJY7JNcdzh8+vyvXZj0DoHRZL3r3jLwtbfBkJT
        yYu2qOOL/HkF8GcOWfovN8UYdBjjbdQ7klzw6vKlXLHEeiEvd0cyakS/4NvLanU0WNhkkYbblqWj
        MAaeI5dtrp5X/wAAAP//AwBdcgsKcQMAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 89d7df00ab0a1f36-DEN
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 03 Jul 2024 15:22:28 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=AfMDnaVjzK7CW0nRfsYTBfl8v.dbwq55woJbJMVzP14-1720020148-1.0.1.1-OxF615tdrojEifrztXhBIAsf7YyhIu_ZHGexWZ0.ghKYG3HNR_K6iZCwA8YngLmYe..pvds6c8qmDOw3I3kZSw;
        path=/; expires=Wed, 03-Jul-24 15:52:28 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=5bcPBLySagfAr5QHjBWjkqSMuu60SVLG_6YvqRiSEE0-1720020148989-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Transfer-Encoding:
      - chunked
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '1590'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '5000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '4999868'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 1ms
      x-request-id:
      - req_396c40b4075c3c76fa7b923d3de55e62
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "You are a helpful assistant."},
      {"role": "user", "content": "\nA prompt is a text paragraph that outlines the
      expected actions and instructs the large language model (LLM) to generate a
      specific output. This prompt is concatenated with the input text, and the model
      then creates the required output.\nThis describes the full template how the
      prompt is concatenated with the input to produce the output:\n\n```\n\n{prompt}\nInput:
      {category}\nOutput: {skill_0}\n```\n\nHere:\n- \"Input: {category}\" is input
      template,\n- \"{prompt}\" is the LLM prompt,\n- \"Output: {skill_0}\" is the
      output template.\n\nModel can produce erroneous output if a prompt is not well
      defined. In our collaboration, we\u2019ll work together to refine a prompt.
      The process consists of two main steps:\n\n## Step 1\nI will provide you with
      the current prompt along with prediction examples. Each example contains the
      input text, the final prediction produced by the model, and the user feedback.
      User feedback indicates whether the model prediction is correct or not. Your
      task is to analyze the examples and user feedback, determining whether the existing
      instruction is describing the task reflected by these examples precisely, and
      suggests changes to the prompt to address the incorrect predictions.\n\n## Step
      2\nNext, you will carefully review your reasoning in step 1, integrate the insights
      to refine the prompt, and provide me with the new prompt that improves the model\u2019s
      performance."}, {"role": "assistant", "content": "Sure, I\u2019d be happy to
      help you with this prompt engineering problem. Please provide me with the current
      prompt and the examples with user feedback."}, {"role": "user", "content": "\n##
      Current prompt\n...\n\n## Examples\n### Example #0\n\nInput: Macronutrients\n\nOutput:
      Macronutrients are the nutrients that our bodies need in large amounts for energy
      and growth. The three main macronutrients are carbohydrates, proteins, and fats.
      Each of these macronutrients plays a different role in the body and has specific
      functions. Carbohydrates are the main source of energy for the body, proteins
      are essential for building and repairing tissues, and fats are important for
      energy storage and hormone production. Balancing the intake of these macronutrients
      is important for maintaining overall health and well-being.\n\nUser feedback:
      Prediction is incorrect. Correct answer: \"Carbohydrates, Proteins, Fats\"\n\n\n###
      Example #1\n\nInput: Vitamins\n\nOutput: Vitamins are essential organic compounds
      that the human body needs in small amounts to function properly. They play a
      crucial role in various bodily functions, such as metabolism, immune system
      support, and overall health. There are different types of vitamins, including
      vitamin A, B, C, D, E, and K, each with its own specific functions and sources.
      It''s important to maintain a balanced diet to ensure an adequate intake of
      vitamins and promote overall well-being.\n\nUser feedback: Prediction is incorrect.
      Correct answer: \"Vitamin A, Vitamin C, Vitamin D\"\n\n\n### Example #2\n\nInput:
      Minerals\n\nOutput: Minerals are inorganic substances that are essential for
      various bodily functions. They play a crucial role in maintaining overall health
      and well-being. Some common minerals include calcium, magnesium, iron, and zinc.
      These minerals can be found in various foods such as dairy products, leafy greens,
      nuts, and seeds. It is important to have a balanced intake of minerals to support
      the body''s functions and prevent deficiencies.\n\nUser feedback: Prediction
      is incorrect. Correct answer: \"Calcium, Iron, Magnesium\"\n\n\n\nSummarize
      your analysis about incorrect predictions and suggest changes to the prompt."}],
      "model": "gpt-4"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '3770'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA3SU32vcOBDH3/evGJyH9sAxu0lI2H0rF2gfyjXQUDi6JcjS2J6LrPFpxrvZK/nf
        i+T9Fbi+GKPRSJ/5fkfzcwZQkCtWUNjOqO0Hf7lst7cPixi+PN/89enj/f3149f53f23j49/f6Pn
        okwZXP+DVg9ZleV+8KjEYQrbiEYxnbq4u5rPr+aLm2UO9OzQp7R20Muby/nt4nqf0TFZlGIF32cA
        AD/zN7EFhy/FCublYaVHEdNisTpuAigi+7RSGBESNUGL8hS0HBRDxr24gA/B+J2QrMNjh4AvJrEL
        yNi2KAramfRByKxAAkPkDTkKLThUQx4dOBQbaUgVC9RG0AGHnEVhGBWsUWw57ir4xFvcYCzf7hoF
        IzSIrjb2uQRSEMReTpdH/HekmBJGTQeSAL4MaBUdKEONIJS4YwmeRBMcB7/LubobUIDjqbYtaUfT
        zS1tMBz4CKWEwHpWogm735S57YwKp2IqWIdJvSFyPyS68E7BejQRMPDYdtBwPFNRGcbgMCZrHGhH
        UoKRVDcJ2DFGDOp3QAEMDN5Y7Ni7JBHH3ii8XxdVVa2LPyp47EiAgqNUwplgRxLoSSTrEaEzksur
        EQM4bCigK8GaMW94g+ewMaPX9Gug54jQYsBoPP2Xco5KbJI3MnCQ5LUoGgfc5LMcSrbsYMgEXyWt
        Li7g69Rf6ODPzoQWBSYJWzYetuR9MlUZOrPB84rwZfBkKcmTmiK1qMlXpGtJU9fU6Dm0uST+nyYs
        s/88nts8hoA2PaT4G7snjz8cngW6A4/l0Tuoscwb1sX3h+Oh6erPJPpjBQ8ejeDEmXU2FPa02bIJ
        +cB7IN0DojsST+141oUcoRmjdhj33LIuqqkdSSYdOx6wGb3fQTuSwzc+b010AgZqVMV41pS5YyYf
        jw9t//b2Phb7gfJ6nESe2yFynaZWGL0/rjcUSLqniEY4pKkjysOU/joD+JEn3vhmiBWTuk/KzxjS
        gXfXt9N5xWm4nqKL5fU+qqzGnwLLq+Vsj1jIThT7p4ZCi3GIlCdgAp29zn4BAAD//wMAHSP4OvgF
        AAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 89d7df0bb81479a2-DEN
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 03 Jul 2024 15:22:39 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=UPYC8deJnidgGnL2t51Ec6fTS69MXSa2vWIRFr16EBs-1720020159-1.0.1.1-pBSBgy7mnUckp9CnPkQM7We5F8XsNOilnYwaIsj9aepFru_DFomdJa7zNCSM393rS9TIlpg0fSOVw8vF5KWwWA;
        path=/; expires=Wed, 03-Jul-24 15:52:39 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=5Kt5i4vu7znmnaBjDqNdkue2K._Xz320KK2bo1ajGwI-1720020159632-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Transfer-Encoding:
      - chunked
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '10363'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '1000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '999098'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 54ms
      x-request-id:
      - req_7edfbe00aa082350edc5c6f25ff0d3c7
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "You are a helpful assistant."},
      {"role": "user", "content": "\nA prompt is a text paragraph that outlines the
      expected actions and instructs the large language model (LLM) to generate a
      specific output. This prompt is concatenated with the input text, and the model
      then creates the required output.\nThis describes the full template how the
      prompt is concatenated with the input to produce the output:\n\n```\n\n{prompt}\nInput:
      {category}\nOutput: {skill_0}\n```\n\nHere:\n- \"Input: {category}\" is input
      template,\n- \"{prompt}\" is the LLM prompt,\n- \"Output: {skill_0}\" is the
      output template.\n\nModel can produce erroneous output if a prompt is not well
      defined. In our collaboration, we\u2019ll work together to refine a prompt.
      The process consists of two main steps:\n\n## Step 1\nI will provide you with
      the current prompt along with prediction examples. Each example contains the
      input text, the final prediction produced by the model, and the user feedback.
      User feedback indicates whether the model prediction is correct or not. Your
      task is to analyze the examples and user feedback, determining whether the existing
      instruction is describing the task reflected by these examples precisely, and
      suggests changes to the prompt to address the incorrect predictions.\n\n## Step
      2\nNext, you will carefully review your reasoning in step 1, integrate the insights
      to refine the prompt, and provide me with the new prompt that improves the model\u2019s
      performance."}, {"role": "assistant", "content": "Sure, I\u2019d be happy to
      help you with this prompt engineering problem. Please provide me with the current
      prompt and the examples with user feedback."}, {"role": "user", "content": "\n##
      Current prompt\n...\n\n## Examples\n### Example #0\n\nInput: Macronutrients\n\nOutput:
      Macronutrients are the nutrients that our bodies need in large amounts for energy
      and growth. The three main macronutrients are carbohydrates, proteins, and fats.
      Each of these macronutrients plays a different role in the body and has specific
      functions. Carbohydrates are the main source of energy for the body, proteins
      are essential for building and repairing tissues, and fats are important for
      energy storage and hormone production. Balancing the intake of these macronutrients
      is important for maintaining overall health and well-being.\n\nUser feedback:
      Prediction is incorrect. Correct answer: \"Carbohydrates, Proteins, Fats\"\n\n\n###
      Example #1\n\nInput: Vitamins\n\nOutput: Vitamins are essential organic compounds
      that the human body needs in small amounts to function properly. They play a
      crucial role in various bodily functions, such as metabolism, immune system
      support, and overall health. There are different types of vitamins, including
      vitamin A, B, C, D, E, and K, each with its own specific functions and sources.
      It''s important to maintain a balanced diet to ensure an adequate intake of
      vitamins and promote overall well-being.\n\nUser feedback: Prediction is incorrect.
      Correct answer: \"Vitamin A, Vitamin C, Vitamin D\"\n\n\n### Example #2\n\nInput:
      Minerals\n\nOutput: Minerals are inorganic substances that are essential for
      various bodily functions. They play a crucial role in maintaining overall health
      and well-being. Some common minerals include calcium, magnesium, iron, and zinc.
      These minerals can be found in various foods such as dairy products, leafy greens,
      nuts, and seeds. It is important to have a balanced intake of minerals to support
      the body''s functions and prevent deficiencies.\n\nUser feedback: Prediction
      is incorrect. Correct answer: \"Calcium, Iron, Magnesium\"\n\n\n\nSummarize
      your analysis about incorrect predictions and suggest changes to the prompt."},
      {"role": "assistant", "content": "## Analysis\nThe examples suggest that the
      model is providing detailed descriptions based on the input category. However,
      based on the user feedback, it seems that the required output is expected to
      be simpler, listing only the types or examples within the given categories,
      not providing any detailed descriptions whatsoever. \n\nThe prompt isn''t clear
      enough for the model to understand this, as it is currently in a placeholder
      format (\"...\"). This indicates that the prompt is missing or has not been
      defined, causing the model to default to a more generalized, descriptive response
      instead of the desired listing format.\n\n## Suggested Changes \nThe goal will
      be to have the prompt explicitly request a list of items belonging to the input
      category, without providing unnecessary detailed descriptions. \n\nA suggested
      prompt could be, \n\n\"[Providing the List]: Please list the main items that
      belong to the category provided without any descriptions or further details\".\n\nThis
      will hopefully guide the model towards a better understanding of the expected
      output format."}, {"role": "user", "content": "\nNow please carefully review
      your reasoning in Step 1 and help with Step 2: refining the prompt.\n\n## Current
      prompt\n...\n\n## Follow this guidance to refine the prompt:\n\n1. The new prompt
      should should describe the task precisely, and address the points raised in
      the user feedback.\n\n2. The new prompt should be similar to the current prompt,
      and only differ in the parts that address the issues you identified in Step
      1.\n    Example:\n    - Current prompt: \"Generate a summary of the input text.\"\n    -
      New prompt: \"Generate a summary of the input text. Pay attention to the original
      style.\"\n\n3. Reply only with the new prompt. Do not include input and output
      templates in the prompt.\n"}], "model": "gpt-4"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '5627'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA1RRy27bMBC86ysWPNuGZKdp47OBADn0FqBoUxg0tZZYk1yGu4olBP73gvSrvfAw
        wxnMznxWAMq2ag3K9FqMj27+1B0ff27q449mNY7ttOLpePg+voy799fnjZplBe3+oJGramHIR4di
        KZxpk1ALZtfm67Kul3Xz5akQnlp0WdZFmT/M68dmdVH0ZA2yWsOvCgDgs7w5W2hxVGuoZ1fEI7Pu
        UK1vnwBUIpcRpZktiw6iZnfSUBAMJe6berYfGECD0YIdpWkGEw0JRPMBLIMQOMsC0iN4bQOgQ49B
        GCiBFfQM0muB1iY04ibYoaPQZV3Br7YL2BAEErDBuKFF0GGCFtkkG3NRxW8/JOkxQYuireMFvAws
        EBN92BZLBLa5WQjaIwPtC1ZSLN6Uulx4ulXjqIuJdrnGMDh3w/c2WO63CTVTyDWwUDzLTxXA7zLB
        8F+rKibyUbZCBwzZsKm/rc6G6j73nX64DKSERLt/ZM1yVV0yKp5Y0G/3NnSYYrJlk5y0OlV/AQAA
        //8DACjQ/DuKAgAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 89d7df4e2ef35388-DEN
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 03 Jul 2024 15:22:42 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=a2bJpjwsOWMlwC95eP0hTwu57a02isuifyrm_0vz2WM-1720020162-1.0.1.1-AgJJFnTQuw5DdePiueph3tieAOl4EE5JvksFnLI4KqJhgGhLGqAwePOzsebB9TH1XxMx_plcQbFdhGyyw3CofQ;
        path=/; expires=Wed, 03-Jul-24 15:52:42 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=5NZizo4v7xo7GCXaVf3y8IEEeqFoQ3B48MHHJKTr8f8-1720020162072-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Transfer-Encoding:
      - chunked
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '2121'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '1000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '998659'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 80ms
      x-request-id:
      - req_7556828597e37857f2fd70ae631cf83b
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "\"Given a category, your task
      is to list the main elements or items that directly belong to that category.
      Do not include any descriptions or further details. Just provide the simple
      names of the items.\""}, {"role": "user", "content": "Input: Macronutrients\nOutput:
      "}], "model": "gpt-3.5-turbo"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '343'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA1SQwU7DMBBE7/mKlc9JlaRqaHJFKoILHJEQqlxnm5g6XmNvBW3Vf0dOQwsXH2b8
        xjM+JQBCt6IBoXrJanAmq7uvSn3ulkV4WD32x/44r9uqXj6/PjlJIo0EbT5Q8S81UzQ4g6zJXmzl
        UTLG1OKuzPMyL6pyNAZq0USsc5zNZ4uM935DWV6Ui4nsSSsMooG3BADgNJ6xo23xWzSQp7/KgCHI
        DkVzvQQgPJmoCBmCDiwti/RmKrKMdqx9L/2G+kPrJWNI4cUTo7YhhZXkICbkfH3LUOc8bWIvuzfm
        qm+11aFfe5SBbMwNTO6CnxOA93HT/l9N4TwNjtdMO7QxsJomidsv3sx68phYmj9MnUz1RDgExmG9
        1bZD77we98WSyTn5AQAA//8DAOwwMfXeAQAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 89d7df5e89507b18-DEN
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 03 Jul 2024 15:22:42 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=GHTfqNikknbk8e9ajDE6QNNIfGPI3lKLrcB4fGbrFhQ-1720020162-1.0.1.1-O1Lb41VQ.4MOla8NG2U4OMrb0ShdBInp2MsrXAXw1.qkcFilku2nPSPTYkQNvmdYV7DBAj_feHM6LM4m6iqG0Q;
        path=/; expires=Wed, 03-Jul-24 15:52:42 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=rQCJ1L5vKp7tM4FWVs0030rpFcapzmtkoVLutgWFUVg-1720020162737-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Transfer-Encoding:
      - chunked
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '216'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '5000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '4999923'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_e63892185ccf81df5af205ce42ef5203
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "\"Given a category, your task
      is to list the main elements or items that directly belong to that category.
      Do not include any descriptions or further details. Just provide the simple
      names of the items.\""}, {"role": "user", "content": "Input: Vitamins\nOutput:
      "}], "model": "gpt-3.5-turbo"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '337'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA1RQy27CMBC85ytWPhMUgkIhN1qo1HLj0EMfioxjEreO17I3aivEv1cOgaQXSzPj
        2Z2dUwTAVMlyYKLmJBqr41X1vRDb9S5bbMRxWT7N3d6mrq5f9+3zI5sEBx4+paCrayqwsVqSQnOR
        hZOcZJg6u0uTJE1mi7QTGiylDrbKUjyfZjG17oBxMkuz3lmjEtKzHN4iAIBT94aMppQ/LIdkcmUa
        6T2vJMtvnwCYQx0Yxr1XnrghNhlEgYak6WLH8KKIN8rA+t0M4H4MHsZgMwbbMdixfsP5Fk1jZR0e
        whmm1frGH5VRvi6c5B5NiOEJ7cV+jgA+ugraf1cx67CxVBB+SRMGZqvLODaUPojpvBcJieuBX6ZR
        n4/5X0+yKY7KVNJZp7o+QsroHP0BAAD//wMAX2Pa+A4CAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 89d7df6188a15381-DEN
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 03 Jul 2024 15:22:43 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=OKGQ8_foQhF9xt_nF3lnyzm5V3YB8eHTQ29_7AXKqZg-1720020163-1.0.1.1-gpq5.XRe2tH6pOPHPEO1eKpPTxhATS9tSdlbQWC_o3Pp_9dRTAJwTk.iMAEXOG1LkR8VTZLUL61BJ8IrlPkBSg;
        path=/; expires=Wed, 03-Jul-24 15:52:43 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=ukQCkmcVEcwc3lyXh8tgxJZSo9vG9I_DkN9yLCJKe6s-1720020163436-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Transfer-Encoding:
      - chunked
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '452'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '5000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '4999925'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_e3008250b547b9158754fa30f23ff28f
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "\"Given a category, your task
      is to list the main elements or items that directly belong to that category.
      Do not include any descriptions or further details. Just provide the simple
      names of the items.\""}, {"role": "user", "content": "Input: Minerals\nOutput:
      "}], "model": "gpt-3.5-turbo"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '337'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA1SQMW/CMBCF9/yKk2cHJSBCm5mqA0PVoi6tKuQkl8Tg+CzbaQuI/145BKIuHt67
        9+47nyMAJiuWAytb4cvOqPix+cmq074tVuvNvlnZarN6qY/mqc4+Du+MhwQVeyz9LTUrqTMKvSR9
        tUuLwmNoTVfzJJknabYYjI4qVCHWGB8vZsvY97agOEnnyzHZkizRsRw+IwCA8/AGRl3hL8sh4Tel
        Q+dEgyy/DwEwSyooTDgnnRfaMz6ZJWmPesB+JlVx2Er1jZbDWoqOdMXhrS+OHLbCmFZa5PDaC+tP
        bKy43HcraoylInDqXqm7XkstXbuzKBzpsMd5Mtf4JQL4Gm7s/2EzY6kzfufpgDoULh+udWz61clM
        09H05IWa9OwxGvmYOzqP3a6WukFrrBwODpTRJfoDAAD//wMAj75p1u8BAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 89d7df65c9627b27-DEN
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 03 Jul 2024 15:22:44 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=MQUE.3w2Cbz2WIHoCw2HNtnE48vlWyyRKaCU5KANIMs-1720020164-1.0.1.1-twv_L7XQ7rJhADJnM29u46nzg516NQYfOJ3gGgXhPDxofIou64QZBLvN5LyQ7y8H5n66mOrsvHwN6KI0okF_Uw;
        path=/; expires=Wed, 03-Jul-24 15:52:44 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=AkGcCSjqkowLiFZR4L4ZeX2GVKs1cnaEZKJ5r2gV_HU-1720020164053-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Transfer-Encoding:
      - chunked
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '358'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '5000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '4999924'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_241c785b0f93d24fa75351f280ab29bd
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "..."}, {"role": "user", "content":
      "Input: Carbohydrates, Proteins, Fats\nOutput: "}], "model": "gpt-3.5-turbo"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '157'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA1RSy27bQAy8+ysIXXqxDdt5NPWxL6BFgaI5tIeiCKhdStp2RW6X3KRGkH8vVnJs
        5CJAMzvkcMjHBUATfLOHxg1obkxx9aZ/uCbsPt986tL3cPnxFm8vv2274cfXL+8fmmVVSPubnD2r
        1k7GFMmC8Ey7TGhUq25f7zab3WZ7fTkRo3iKVdYnW12sr1ZWciurzXZ3dVQOEhxps4efCwCAx+lb
        PbKnf80eNstnZCRV7KnZnx4BNFliRRpUDWrI1izPpBM24sn2W1TyIAw2EAROxSBluQ+e/HLCpFgF
        nZTooSXIFOtIYAI+qCuqgftZPSbJhuwIpIMWI7I7ckpgQyaCEV0WLpYDsSkEBoSBMNpwAB/I1vAO
        cyvDwWc00mcvQEy5Pyzrv1FgBcwETK6Ong/QSYa2hOhrP2QPmRKGPHUPqoV0OcEd2iwlVWILGCfp
        PeYgRaEVH+IBusKu7lDX8AHd8NI0pIgHBYTC4W8hqEHXOUYMbBi49pR7yhjjcbK5dbBXeorIanxO
        WMtYk6FxSiKlLCkHNAIcpdSATEBLqiJAeKAYV1kKe/JzWs1xp0+nY4jSpyxtPRwuMZ7wLnDQ4S4T
        qnBdvJqkWf60APg1HV15cUdNyjImuzP5Q1wL7l7P5ZrzmZ/Jm4sjaWIYz/h2u1kcDTZ6UKPxrgvc
        U045TCdYbS6eFv8BAAD//wMALRJ39oEDAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 89d7df69aff51f41-DEN
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 03 Jul 2024 15:22:45 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=XyaqMETocwpuoSM92X4P.iiFmNgyZ4PqI7q0aSmoDxY-1720020165-1.0.1.1-ISgtolJJ9hinT.9acpWtiQLclEGXbm2pCrKAQ5r_n27sCOsr7TkMMefsP7H2MM1vmWCT0b8dOSq9BnOnGMPxBQ;
        path=/; expires=Wed, 03-Jul-24 15:52:45 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=Sr6jq.YPECEpXWT2.JmNVCz7rPhJJluEdGv9tOZ2veM-1720020165324-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Transfer-Encoding:
      - chunked
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '980'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '5000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '4999969'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_eadfe9b7c6548f7db4ab1e3c958105e3
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "..."}, {"role": "user", "content":
      "Input: - Vitamin A\n- Vitamin B\n- Vitamin C\n- Vitamin D\n- Vitamin E\n- Vitamin
      K\nOutput: "}], "model": "gpt-3.5-turbo"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '204'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA4RUTW/jRgy9+1cQOtuG42wS1LdkN0W3i16KoijQFAE1oiRuZsjBDGVHWOS/FyN/
        xAa23YsAkSL5+B71vs0AKm6qDVSuR3Mh+sVP3e62Rfo1h/Hh84P77aX98vi4blbbvz5c31XzUqH1
        V3J2rFo6DdGTsco+7RKhUel6dbderdarq9ubKRG0IV/KumiL6+XNwoZU62J1tb45VPbKjnK1gb9n
        AADfpmfBKA29VhtYzY+RQDljR9Xm9BFAldSXSIU5czYUq+bvSadiJBPsXygRYCLIGgheaISoLJYB
        ax0MCF0P2oL1BJ6zUQNbNgwsefMkT7KAP/evcL+Bx5xJjNFDqwm2nFllDhzCIAR5zEYB2kGcTXGU
        BhLFpM0wRZbwsw7SAAu0qk0Gzy9l6JbSHBympJb3VXlHZBDV0JTy8hzFwwbuoUs6xIJ6h0ZpkdUP
        tacTcLAeDaLHEXAKeihslcEklLoR3kHNIZBhrZ5z2A8XSls6rfF90IHQ5tBy7ufQIKdxX+oJ2xG6
        RCSXqD9u4N5nhRfRnQBmwOw01ewAHTdzsJ7zET5wBg5RUxF1Ivq/CHbqPXYkF+sUHCjG+spNadBQ
        S5LpbA/HloYMbRq4EF6T9xApRkr5B2t82sDHNLjjAdQqBD2ht/7/r8ChdzwEwDprinta/+gJam1G
        cHhc4KQgfIJdTwL0GjVTA6aQB/Hc9Tb1YyskYWG0/Y46LZqNkzrT160m45ap2Ut1ZOtytcdyV1F3
        lNrBXxA4HVNPPuZSaeQMHHlfCNQADQbsztmVoZCaiZoDm1vqyoV5AmV/OfTLBj5fKF171QacVzOW
        bio/I/lsyplE7wOKmEmdU8+H/0jHmnAS8Ul+p0ChplTYDMhiyAIINXoUV8hhMkjsepjiW0xMNpa/
        TAZLTMUzTIEkD4lAo3FAf0A2TduR94uaWLpldbCit5OHee1i0rr4nQzen+ItC+f+ORFmleJX2TTu
        y99mAP9MXjlc2F8Vk4Zoz6YvJKXhh6t9u+rdnd+T6+ubQ9bU0J8l7m5nB4TV/mqfW5aOUkw8WWfB
        OXub/QsAAP//AwAsGBvAOQYAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 89d7df719c917c34-DEN
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 03 Jul 2024 15:22:49 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=o9aLlAmb2ANC2eG40VEWYboPsIFChQNBSuSl5G9em1Y-1720020169-1.0.1.1-OLOELtl3BTJ0iGVJ1cibOQSIJiezhl_6USWyIRSJyda8rrLt3ygYmdof4Ds.pIyDwiO.ZxQhvrn9MxfMsVyHcw;
        path=/; expires=Wed, 03-Jul-24 15:52:49 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=VE7YnrNqbhvjHYKoiJm7YMxailfMJJlgnjW5bmDJSH8-1720020169247-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Transfer-Encoding:
      - chunked
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '3661'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '5000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '4999959'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_8c2d527df479e4d13dbfbcc63c80d614
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "..."}, {"role": "user", "content":
      "Input: Gold, Silver, Diamond, Ruby, Sapphire, Quartz\nOutput: "}], "model":
      "gpt-3.5-turbo"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '173'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA1SQzW7CMBCE73mKlc8QJaFQwRmph6qHllubCplkCQZn17I3pRTx7pXDX3vxYWZn
        /O0eEwBlajUDVW20VK2zw2mzn2x3uM+f57v3bOfaNXYvC8n9ZE9TNYgJXm2xkmsqrbh1FsUwne3K
        oxaMrfljkWVFlk+mvdFyjTbGGifDUToeSudXPMzyYnxJbthUGNQMPhIAgGP/Rkaq8VvNIBtclRZD
        0A2q2W0IQHm2UVE6BBNEk6jB3ayYBKnHzlN4YluXVKSwMPYLfUmjFOZGt0x1SQ8pvHWrQ0njFBba
        uY3xWNIkhddOe/lRl9LTjcZy4zyvIjl11t70tSETNkuPOjDFn4OwO8dPCcBnv3X3bxHlPLdOlsI7
        pFhYTM916n7nP+boYgqLtnd9XCQXPhUOQbBdrg016J03/QkiZXJKfgEAAP//AwCmoWxJAQIAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 89d7df8a3b4051e9-DEN
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 03 Jul 2024 15:22:49 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=35YfiP4RCBgd_7ZvS1Q.jiHkB7JoQGtFKzESTdR1WPU-1720020169-1.0.1.1-T7seRuvLAzdcsTbYgMEIYk7f.YXdkFRZfmK39d02907y5PBzRVvM2aDq6Zy6XFJXWumVoCTwpOdc3vektkaJMg;
        path=/; expires=Wed, 03-Jul-24 15:52:49 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=TBG646nPM12c90sW1QW3qeeu4RG1lLXbct6zEYa7YkU-1720020169894-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Transfer-Encoding:
      - chunked
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '405'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '5000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '4999966'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_1539c2e2e4f4b7a2c8535c7b7275c1bd
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "You are a helpful assistant."},
      {"role": "user", "content": "\nA prompt is a text paragraph that outlines the
      expected actions and instructs the large language model (LLM) to generate a
      specific output. This prompt is concatenated with the input text, and the model
      then creates the required output.\nThis describes the full template how the
      prompt is concatenated with the input to produce the output:\n\n```\n\n{prompt}\nInput:
      {category}\nOutput: {skill_0}\n```\n\nHere:\n- \"Input: {category}\" is input
      template,\n- \"{prompt}\" is the LLM prompt,\n- \"Output: {skill_0}\" is the
      output template.\n\nModel can produce erroneous output if a prompt is not well
      defined. In our collaboration, we\u2019ll work together to refine a prompt.
      The process consists of two main steps:\n\n## Step 1\nI will provide you with
      the current prompt along with prediction examples. Each example contains the
      input text, the final prediction produced by the model, and the user feedback.
      User feedback indicates whether the model prediction is correct or not. Your
      task is to analyze the examples and user feedback, determining whether the existing
      instruction is describing the task reflected by these examples precisely, and
      suggests changes to the prompt to address the incorrect predictions.\n\n## Step
      2\nNext, you will carefully review your reasoning in step 1, integrate the insights
      to refine the prompt, and provide me with the new prompt that improves the model\u2019s
      performance."}, {"role": "assistant", "content": "Sure, I\u2019d be happy to
      help you with this prompt engineering problem. Please provide me with the current
      prompt and the examples with user feedback."}, {"role": "user", "content": "\n##
      Current prompt\n\"Given a category, your task is to list the main elements or
      items that directly belong to that category. Do not include any descriptions
      or further details. Just provide the simple names of the items.\"\n\n## Examples\n###
      Example #0\n\nInput: Macronutrients\n\nOutput: Carbohydrates, Proteins, Fats\n\nUser
      feedback: Prediction is correct.\n\n\n### Example #1\n\nInput: Vitamins\n\nOutput:
      - Vitamin A\n- Vitamin B\n- Vitamin C\n- Vitamin D\n- Vitamin E\n- Vitamin K\n\nUser
      feedback: Prediction is incorrect. Correct answer: \"Vitamin A, Vitamin C, Vitamin
      D\"\n\n\n### Example #2\n\nInput: Minerals\n\nOutput: Gold, Silver, Diamond,
      Ruby, Sapphire, Quartz\n\nUser feedback: Prediction is incorrect. Correct answer:
      \"Calcium, Iron, Magnesium\"\n\n\n\nSummarize your analysis about incorrect
      predictions and suggest changes to the prompt."}], "model": "gpt-4"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '2630'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA5RWTW/cRgy9+1cQ2sNe5K3tpE7jW+A2bYAGcNsgadEtAu6IKzE7mhGG1K43gf97
        wZG0H0hboBevMSNy+B4f38yXC4CCq+IOCtegurbzly/r3e3m/S9//I6v/IcHenyQ2/jw+d3tdz87
        97koLSKuPpHTKWrhYtt5Uo5h2HaJUMmyXr+4ubq6ubp+cZU32liRt7C608vnl1e318/GiCayIynu
        4M8LAIAv+a/VFip6LO4gx+eVlkSwpuLu8BFAkaK3lQJFWBSDFuVx08WgFHK5s9lsBr/1bYtpD3EN
        rwL6vbAsw7uGoEux7dR+tlyRgPOECTiIpt4ZPNAInkVBG4IWOQB5aimofMNKrcCOtYm9AoY9VCQu
        cWdxAjHBuk/aUIKKFNnLAn6KO9pSKodsRg0IWRaNYEfWtaecETgopS6Rcqjz1w6V6pj2VmtHye9L
        8Lwhv4eqJ4u3jzy6jYHM+B/VapCOHK/ZYa5qAW8C/PCI1j2B2TVgqGB2UwIHF1MiZ0BkR0lgR4km
        YqrpEGxXXPese+CQT9zFVMF8y4otB5nnfPOWAyX0Ml/AMizD8UiYXQ/YWaQn8EwyJcpszOUIPBds
        YJbF+zH9sljAh4Y9AatA7LXrNXdHYIueK5jqKIE1kyE598SB1a1xApW36BGdHuLyUi+UgB47ckrV
        1whuTrt3qJYqWBZvR9zLwlAh1NRGH2t26A8tMW0RVgYMIfSa2HCihxiohF3DrgEWkL6uSSztylpO
        W469WLVD5xJ5mzdD8xZdijmRqTI3YOJrYbWbzI/d7RJV7AaFilIL6xTbDGiLdU+BRKy0E8UxyQLu
        D/9n1cH8/aHjMcF8Aj4HhwFWdMYLB6h4vaZEQWGHe4EVOewlN2APmAhWKWJ1mTDUJneD4GLvK2gJ
        T4O14VALrFCogjjoZuR16NM47BN1D8N03zcYarKJj4BVlQyjNiSjDKWENxPfOeVoCmw0b1kGmifR
        ZIegrzziIIkSUDaGgtXWXQzCFaXxA1FwsW1N2Al0351JY9fYyJ0N+26gATcEQkEI+uCt/FHRRoM5
        zI6FFvCqqkYxmTuwQst1o9aOhny37v0pjjam42AchaUNKiTqEokxjrDL1Vtr6MRZBt8bR/eEijvr
        wrL4kbdkAzDhKGEf+wSKsjFa/9VTjZXBVnMdFZtm/R5W5KP5YBzWp7QLuP8f9K5jOif3v7j8PkKI
        Nq3O9xVldz+6+bnLj+4OuLJ7YBSWgVjA6zgIBYOjEnh9fj4LzNepZ52X8KmXwcpM3acNyeOGXeep
        hBUGDFjmAYlDS6brZyhqNd4WnMA1mNApJRZlZ8b/D6efe8e8HCqY32NaxWZfJVSy1flDikqHaX+N
        atb+K7XUruw22xB1pjfhbJFWnmhCU986ph2marEsivF6fjrc6z7WXYorewOE3vvD+poDS/MxEUoM
        doeLxm4If7oA+Cu/H/qzJ0ExzOxHjRsKlvDbm5dDvuL4VDnuPnvxfNzVqOiPGy+vnl2MJRayN4P8
        uOZQm5dxfk9YoRdPF38DAAD//wMAjN1jDEYJAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 89d7df8e6e9d516d-DEN
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 03 Jul 2024 15:23:07 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=xQBYAX6X8cnJBBUc8sOjMvwQDH2na_iewtPhJJF9z.Q-1720020187-1.0.1.1-y5oFhmuZOyt8kywn6.hGvuIzylr.swPORnD0mhuO2wYJ4iYzaMpjYKcMDiO4yCnrCh.Tgffi_pOk.h0FAtUwFg;
        path=/; expires=Wed, 03-Jul-24 15:53:07 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=sgzeTQecTFOWnj1As3Ka7bafR7iJwXCNcQA8ntP9JrE-1720020187533-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Transfer-Encoding:
      - chunked
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '17390'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '1000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '999384'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 36ms
      x-request-id:
      - req_e067cf254c759e0b19a3e13be92be3a7
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "You are a helpful assistant."},
      {"role": "user", "content": "\nA prompt is a text paragraph that outlines the
      expected actions and instructs the large language model (LLM) to generate a
      specific output. This prompt is concatenated with the input text, and the model
      then creates the required output.\nThis describes the full template how the
      prompt is concatenated with the input to produce the output:\n\n```\n\n{prompt}\nInput:
      {category}\nOutput: {skill_0}\n```\n\nHere:\n- \"Input: {category}\" is input
      template,\n- \"{prompt}\" is the LLM prompt,\n- \"Output: {skill_0}\" is the
      output template.\n\nModel can produce erroneous output if a prompt is not well
      defined. In our collaboration, we\u2019ll work together to refine a prompt.
      The process consists of two main steps:\n\n## Step 1\nI will provide you with
      the current prompt along with prediction examples. Each example contains the
      input text, the final prediction produced by the model, and the user feedback.
      User feedback indicates whether the model prediction is correct or not. Your
      task is to analyze the examples and user feedback, determining whether the existing
      instruction is describing the task reflected by these examples precisely, and
      suggests changes to the prompt to address the incorrect predictions.\n\n## Step
      2\nNext, you will carefully review your reasoning in step 1, integrate the insights
      to refine the prompt, and provide me with the new prompt that improves the model\u2019s
      performance."}, {"role": "assistant", "content": "Sure, I\u2019d be happy to
      help you with this prompt engineering problem. Please provide me with the current
      prompt and the examples with user feedback."}, {"role": "user", "content": "\n##
      Current prompt\n\"Given a category, your task is to list the main elements or
      items that directly belong to that category. Do not include any descriptions
      or further details. Just provide the simple names of the items.\"\n\n## Examples\n###
      Example #0\n\nInput: Macronutrients\n\nOutput: Carbohydrates, Proteins, Fats\n\nUser
      feedback: Prediction is correct.\n\n\n### Example #1\n\nInput: Vitamins\n\nOutput:
      - Vitamin A\n- Vitamin B\n- Vitamin C\n- Vitamin D\n- Vitamin E\n- Vitamin K\n\nUser
      feedback: Prediction is incorrect. Correct answer: \"Vitamin A, Vitamin C, Vitamin
      D\"\n\n\n### Example #2\n\nInput: Minerals\n\nOutput: Gold, Silver, Diamond,
      Ruby, Sapphire, Quartz\n\nUser feedback: Prediction is incorrect. Correct answer:
      \"Calcium, Iron, Magnesium\"\n\n\n\nSummarize your analysis about incorrect
      predictions and suggest changes to the prompt."}, {"role": "assistant", "content":
      "#### Summary of Analysis\nThe prompt provides clear instruction to list the
      main elements/items without any descriptions or further details. However, the
      model seems to struggle with interpreting the category properly, likely due
      to the lack of context or specifications. In Examples #1 and #2, incorrect answers
      were provided due to ambiguity in the word ''vitamins'' and ''minerals''. \n\nIn
      Example #1, the issue lies in the model''s interpretation of \"Vitamins\". While
      its output lists valid vitamins, it lacks the specificity to provide the exact
      vitamins the user expected. \n\nIn Example #2, the model interpreted \"Minerals\"
      in a gemological context instead of a nutritional one, which is suggested by
      previous examples related to Macronutrients and Vitamins.\n\nThe incorrect predictions
      stem from the vagueness of the categories. Categories like ''Vitamins'' or ''Minerals''
      can be interpreted in different ways because they are broad-ranging and could
      mean different things based on the context. \n\n#### Suggested Prompt Changes\nTo
      address these issues, I suggest the prompt is revised to provide clearer instruction
      to the model, asking it to consider the most common or typical context where
      the category would make sense unless specified otherwise. Additionally, it might
      be helpful to provide more specific examples that represent a wider range of
      contexts within the instruction:\n\n\"Given a category, your task is to list
      the main elements or items that directly belong to that category. Consider the
      most common or typical context for the category unless specified otherwise.
      Do not include any further descriptions or details about these items. For instance,
      if the category is ''fruit'', just list basic examples like apple, banana, and
      orange without describing their characteristics. If the category is ''Macronutrients'',
      list ''Carbohydrates'', ''Proteins'' or ''Fats''. Remember, keep it simple and
      straightforward.\""}, {"role": "user", "content": "\nNow please carefully review
      your reasoning in Step 1 and help with Step 2: refining the prompt.\n\n## Current
      prompt\n\"Given a category, your task is to list the main elements or items
      that directly belong to that category. Do not include any descriptions or further
      details. Just provide the simple names of the items.\"\n\n## Follow this guidance
      to refine the prompt:\n\n1. The new prompt should should describe the task precisely,
      and address the points raised in the user feedback.\n\n2. The new prompt should
      be similar to the current prompt, and only differ in the parts that address
      the issues you identified in Step 1.\n    Example:\n    - Current prompt: \"Generate
      a summary of the input text.\"\n    - New prompt: \"Generate a summary of the
      input text. Pay attention to the original style.\"\n\n3. Reply only with the
      new prompt. Do not include input and output templates in the prompt.\n"}], "model":
      "gpt-4"}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '5534'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA1RTTW/bMAy951cQuuTiBkk2tE3OQzesG7AdumFbh0KVGJurRBkindYo+t8HKV/t
        xYD5+J4fyefnCYAhb9ZgXGfVxT6crdrHi8Wn1c3VTfu41XGz9Oe/l4tf1z+/f/kWTVMY6f4fOj2w
        Zi7FPqBS4h3sMlrForq4WM7ny/ni8qICMXkMhdb2evb+bH6+eLdndIkcilnDnwkAwHN9Fm/s8cms
        Yd4cKhFFbItmfWwCMDmFUjFWhEQtq2lOoEusyNXurflIW2Sw4Kxim/LYwJiGDGrlAUhAEwQSBe0Q
        oiUGDBiRVSBlIMUooJ1V8JTRaRjhHkPitvBq/SA7gw8JXGIhj3mnlkTBpRgTFy0de3I2QDX3pEAM
        jx25rvYeVIqjQQYbwggZN5gzetDUwMABRSBph/mRBIHYU2H5+mFOCn1OW/IIlkew3lM5jw3gUVym
        vrzVmTyqpSAz+DyIgqhVrBaEyk2BbUSBtKm1Ov8MrsoquKzZYQPTH6Q2EssUWmTMJ7N1m55QbR5h
        u+9qypgBYfqVarNMjxP2mNUSv6HFfdcMrhF7KpvuUPCwtsEG4KEYkbLBSOyb0wF39+ozOhIMI1j2
        IINzxOV0s1tj9iF5OaYrpLbP6b4kkYcQjvUNMUl3l9FK4pIk0dTv6C8TgL81xcObYJo+p9jrnaYH
        5CK4mK/Od4Lm9Me8hpd7VJPa8ApYrC4ne5NGRlGMdxviFnOfqea6WJ28TP4DAAD//wMAn2GPWM4D
        AAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 89d7dffc8ac07b04-DEN
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 03 Jul 2024 15:23:12 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=NCNekcn60Jto_a5IjuYgmp0wxdPrjvwPFiV7b4BDz88-1720020192-1.0.1.1-LQ3vcQtSwAa8FxdKWIG1d3zpCpRWAt.uTr4LCSTU4O0lg13g4bowxqtOPho_Zm33NwkIPPCiL1A0_aT9h1bVsw;
        path=/; expires=Wed, 03-Jul-24 15:53:12 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=auIwHdcSswRHtt2gTubpwEKWayVfEWjDJu0YHfoljkM-1720020192606-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Transfer-Encoding:
      - chunked
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '4753'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=31536000; includeSubDomains
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '1000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '998685'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 78ms
      x-request-id:
      - req_0b7ee3f6111ca2779a9a71fd7a0b0787
    status:
      code: 200
      message: OK
version: 1
