interactions:
- request:
    body: '{"messages": [{"role": "user", "content": "Hey, how''s it going?"}], "model":
      "gpt-4", "max_tokens": 10}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '103'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//VJBRS8MwFIXf+ysu98WXTtatKOvbRGQTBIWBMJGRpXdpNM2tzZ04xv67
        pOs2fcnDOTkn38k+AUBbYgGoKyW6btxgwrt7s5jNl0+v+eJFHu6ynam+nh+Xy9lCYxoTvP4gLafU
        tea6cSSW/dHWLSmh2JrdjrLJOJ9ko86ouSQXY6aRQT4Y3mTjPlGx1RSwgLcEAGDfnZHNl/SDBQzT
        k1JTCMoQFudLANiyiwqqEGwQ5QXTi6nZC/kOdxpAeZjOU5hDyf5KoFLfBBsiZ70JKfapw/k5x6Zp
        eR3R/Na5s76x3oZq1ZIK7GO1I2+kOhYcEoD3btj2Hys2LdeNrIQ/ycfKLD8W4uUL/5j9aBQW5S76
        KE96Qgy7IFSvNtYbapvWdisjZ3JIfgEAAP//AwAiLXNH3AEAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8a8e7a309c3194e8-LIS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Thu, 25 Jul 2024 19:15:13 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=0eu0BBz711fZCOXhxTDxESJNG29g.uAbkhAA7CsmbJE-1721934913-1.0.1.1-.jY4avCpWhV75BtigNk1YZ8rPbVJCZFuqEqfDC1IUS6kockRrQ9WamOU9yzMd78nBCSg6.eq55FeppPNAsxqqQ;
        path=/; expires=Thu, 25-Jul-24 19:45:13 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=gQityNIU1uJ0DeTuEMImrNr2QeTc4gMhNl2e4XArkAM-1721934913284-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '981'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '1000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '999984'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_5a0cf5fdb66482ede03bfc5bacb369e5
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "user", "content": "Hey, how''s it going?"}], "model":
      "gpt-3.5-turbo", "max_tokens": 10}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '111'
      content-type:
      - application/json
      cookie:
      - __cf_bm=0eu0BBz711fZCOXhxTDxESJNG29g.uAbkhAA7CsmbJE-1721934913-1.0.1.1-.jY4avCpWhV75BtigNk1YZ8rPbVJCZFuqEqfDC1IUS6kockRrQ9WamOU9yzMd78nBCSg6.eq55FeppPNAsxqqQ;
        _cfuvid=gQityNIU1uJ0DeTuEMImrNr2QeTc4gMhNl2e4XArkAM-1721934913284-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA1SQP0/DMBTE93yKhxeWtGr6RyjZKhhasSHEUIQq131NXGw/Y78AVdXvjpyGFhYP
        d77z73zMAITeigqEaiQr682gpMNDo8rnVVzp5ulL3c8f5y+NWXzEpf0UeUrQZo+Kf1NDRdYbZE3u
        bKuAkjG1FnfjopxMy2LSGZa2aFKs9jyYDGcDbsOGBqNiPOuTDWmFUVTwmgEAHLszMbotfosKRvmv
        YjFGWaOoLpcARCCTFCFj1JGlY5FfTUWO0XXYCzSGbmB5a2HfRgYJaUPLGMAHqoO0OUQSffZ0edRQ
        7QNtEqBrjbnoO+10bNYBZSSXHjDoam7OBacM4K2b1/4jFj6Q9bxmekeXKovpuVBcP/SP2U8XTCzN
        VR9Ps55QxENktOuddjUGH3S3NXFmp+wHAAD//wMAHzgaVuoBAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8a8e7a385a5094e8-LIS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Thu, 25 Jul 2024 19:15:13 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '188'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '50000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '49999983'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_397edca3f962356c528879100a40f957
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "..."}, {"role": "user", "content":
      "Input: Macronutrients"}], "model": "gpt-3.5-turbo", "max_tokens": 1000, "temperature":
      0.0, "tool_choice": {"type": "function", "function": {"name": "Output"}}, "tools":
      [{"type": "function", "function": {"name": "Output", "description": "Correctly
      extracted `Output` with all the required parameters with correct types", "parameters":
      {"properties": {"skill_0": {"description": "Output:", "title": "Skill 0", "type":
      "string"}}, "required": ["skill_0"], "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '557'
      content-type:
      - application/json
      cookie:
      - __cf_bm=0eu0BBz711fZCOXhxTDxESJNG29g.uAbkhAA7CsmbJE-1721934913-1.0.1.1-.jY4avCpWhV75BtigNk1YZ8rPbVJCZFuqEqfDC1IUS6kockRrQ9WamOU9yzMd78nBCSg6.eq55FeppPNAsxqqQ;
        _cfuvid=gQityNIU1uJ0DeTuEMImrNr2QeTc4gMhNl2e4XArkAM-1721934913284-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA2xSTW/bMAy9+1cQOidBnKTL4uuKfhyWXgasXVMYiszYamVRk+iiRpD/PshO4zSY
        DgLFx/f4QHGfAAhdiAyEqiSr2pnxitpr/Xd+L29TenhcPrnq9fbux7WRH/z7SYwig7avqPiTNVFU
        O4Osyfaw8igZo2q6nKWr+WKVLjqgpgJNpJWOx/PJ1Zgbv6XxNJ1dHZkVaYVBZPCcAADsuzt6tAV+
        iAymo89MjSHIEkV2KgIQnkzMCBmCDiwti9EAKrKMNtq2jTFnABOZXEljhsb92Z/Fw6CkMTktp4+h
        mbn3m3S5rrbf1lTX9+s/i7N+vXTrOkO7xqrTgM7wUz67aAYgrKw77kPDruELJoCQvmxqtBxdi/1G
        hDdtTD7diGwjfkrlyTbsdSwA6RGGF1eSwXl61wWCkoa8xgDkAS36sp3ArwrbnoNYYAHagpG+RJA1
        NZ2ejUllmk7Ab6lqCy8ZwyjqMmobRl3RTnKYbMRBfDF/SP4Xvxyjw+mPDZXO0zZcfJnYaatDlXuU
        oRudCEyubxHlXrpdar6sh3Ceasc50xvaKLj83suJYXsHcD4/gkwszZBP0zQ5GhShDYx1vtO2RO+8
        Pm1Wckj+AQAA//8DAEilP5xYAwAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8a8e7a3b6eba94e8-LIS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Thu, 25 Jul 2024 19:15:14 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '436'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '50000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '49998992'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 1ms
      x-request-id:
      - req_044bd7f8dcbaa4d7389f6269da6f6eee
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "..."}, {"role": "user", "content":
      "Input: Vitamins"}], "model": "gpt-3.5-turbo", "max_tokens": 1000, "temperature":
      0.0, "tool_choice": {"type": "function", "function": {"name": "Output"}}, "tools":
      [{"type": "function", "function": {"name": "Output", "description": "Correctly
      extracted `Output` with all the required parameters with correct types", "parameters":
      {"properties": {"skill_0": {"description": "Output:", "title": "Skill 0", "type":
      "string"}}, "required": ["skill_0"], "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '551'
      content-type:
      - application/json
      cookie:
      - __cf_bm=0eu0BBz711fZCOXhxTDxESJNG29g.uAbkhAA7CsmbJE-1721934913-1.0.1.1-.jY4avCpWhV75BtigNk1YZ8rPbVJCZFuqEqfDC1IUS6kockRrQ9WamOU9yzMd78nBCSg6.eq55FeppPNAsxqqQ;
        _cfuvid=gQityNIU1uJ0DeTuEMImrNr2QeTc4gMhNl2e4XArkAM-1721934913284-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//bFNNb9swDL3nVxA6bYAT1GnaILmtHztsRVf0c8BSBLJM20xlSZPotkaQ
        /z7YTuK0mA828R7fI0GT6wGAoFTMQahCsiqdHs5sfUGTk7fbcXVz93BzJ+vx91A//K3vVpNrETUK
        m6xQ8U41UrZ0Gpms6WjlUTI2rvF0HM+OJ7N40hKlTVE3stzx8Hh0MuTKJ3Z4FI9PtsrCksIg5vBn
        AACwbt9NjybFdzGHo2iHlBiCzFHM90kAwlvdIEKGQIGlYRH1pLKG0TRtm0rrA4Kt1Uslte4Ld8/6
        IO4HJbVerh7p/ZKuivz07ffk/Nb8WF1fPT3dVAf1OuvatQ1llVH7AR3we3z+qRiAMLJstb8qdhV/
        UgII6fOqRMNN12K9EOGFtF4eLcR8IR6JZUkmgPQIGAIaJqnBVOypkQAXkqG2lYfEpjUYxDQAGQil
        1Bpkaas2y8Kb9S/gvHXodT2C+wI9tq7x8YHx67ZeBGSUrlIy+R6DbxGcR3ARwWUEPyOQJgUuEM76
        jC9cUBNhBJ4Sm2n5SiYCQ1I1XycNWy7QkAKpKI0gIcsNc3YawVk87kwzqyXj1xFcSlXszKGQAYJD
        RRkp2M07tIIEDWbEATLru2EUKDUXo4XYiA/j3gz+Fz9vo81+K7XNnbdJ+LRkIiNDoVh6lKH92SKw
        dV2Jxu653f7qw0IL523peMn2BU1jOJ12dqK/t56cbS9DsGWpezw+nQ62DYpQB8ZymZHJ0TtP+1sY
        bAb/AAAA//8DACzQWgIKBAAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8a8e7a409eaa94e8-LIS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Thu, 25 Jul 2024 19:15:16 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '1217'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '50000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '49998992'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 1ms
      x-request-id:
      - req_c92445ceaa4992238764fc52318c040e
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "..."}, {"role": "user", "content":
      "Input: Minerals"}], "model": "gpt-3.5-turbo", "max_tokens": 1000, "temperature":
      0.0, "tool_choice": {"type": "function", "function": {"name": "Output"}}, "tools":
      [{"type": "function", "function": {"name": "Output", "description": "Correctly
      extracted `Output` with all the required parameters with correct types", "parameters":
      {"properties": {"skill_0": {"description": "Output:", "title": "Skill 0", "type":
      "string"}}, "required": ["skill_0"], "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '551'
      content-type:
      - application/json
      cookie:
      - __cf_bm=0eu0BBz711fZCOXhxTDxESJNG29g.uAbkhAA7CsmbJE-1721934913-1.0.1.1-.jY4avCpWhV75BtigNk1YZ8rPbVJCZFuqEqfDC1IUS6kockRrQ9WamOU9yzMd78nBCSg6.eq55FeppPNAsxqqQ;
        _cfuvid=gQityNIU1uJ0DeTuEMImrNr2QeTc4gMhNl2e4XArkAM-1721934913284-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//bFJNb9swDL37VxA8J0E+1rTxbUDRQ7tkGzpgK5bCUGTGViNLmkRl9YL8
        98FOGqdBdRAIPr7HB5K7BABVjimgLAXLyun+zNa3m7+rOX33+b9vT3f14st8cr9VtuTXn9hrGHb1
        QpLfWANpK6eJlTUHWHoSTI3q6Ho8mk0+zUbTFqhsTrqhFY77k8FVn6Nf2f5wNL46MkurJAVM4XcC
        ALBr/8ajyekVUxj23jIVhSAKwvRUBIDe6iaDIgQVWBjGXgdKa5hMY9tErc8AtlZnUmjdNT683Vnc
        DUponT26Yvz0cHe7Fb9+PMjqfvE4/by42f4563eQrl1raB2NPA3oDD/l04tmAGhE1XK/RnaRL5gA
        KHwRKzLcuMbdEsNGaZ0Nl5guca4MeaEDCE9gBEcvtK7BShm9V6aAEFfNgCQF4FJwWxesVjkIk0Mp
        tgQCpK8DC62VIQjso+ToabDEPb7zsk8+ip+P0f60Mm0L5+0qXGwA18qoUGaeRGgngYGtO7Ro5J7b
        04jvto3O28pxxnZDphG8nh7ksDvGDhyPjyBbFrrLz26Soz8MdWCqsrUyBXnn1elOkn3yHwAA//8D
        AIxfUrcmAwAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8a8e7a4a2e4194e8-LIS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Thu, 25 Jul 2024 19:15:16 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '308'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '50000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '49998992'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 1ms
      x-request-id:
      - req_ecbb04138a0c0e2dd0b1cdd49702ec09
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "..."}, {"role": "user", "content":
      "Input: Macronutrients are nutrients that provide calories or energy. They are
      needed in large amounts and include carbohydrates, proteins, and fats."}], "model":
      "gpt-3.5-turbo", "max_tokens": 1000, "temperature": 0.0, "tool_choice": {"type":
      "function", "function": {"name": "Output"}}, "tools": [{"type": "function",
      "function": {"name": "Output", "description": "Correctly extracted `Output`
      with all the required parameters with correct types", "parameters": {"properties":
      {"skill_1": {"description": "Output:", "title": "Skill 1", "type": "string"}},
      "required": ["skill_1"], "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '684'
      content-type:
      - application/json
      cookie:
      - __cf_bm=0eu0BBz711fZCOXhxTDxESJNG29g.uAbkhAA7CsmbJE-1721934913-1.0.1.1-.jY4avCpWhV75BtigNk1YZ8rPbVJCZFuqEqfDC1IUS6kockRrQ9WamOU9yzMd78nBCSg6.eq55FeppPNAsxqqQ;
        _cfuvid=gQityNIU1uJ0DeTuEMImrNr2QeTc4gMhNl2e4XArkAM-1721934913284-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA2xSwW7bMAy95ysInZPAbpJm8TUd0A3bigIdMmApDFmmbTWy6Er0Ni/Ivw9y0jgN
        poNA8PG9R1HcjwCEzkUCQlWSVd2YyYq6O/Nx+eH+dr75Xi6+RT+yjf+0aNfZ4997MQ4Myl5Q8Rtr
        qqhuDLIme4SVQ8kYVOPlTbyazVfxsgdqytEEWtnwZDZdTLh1GU2i+GZxYlakFXqRwM8RAMC+v0OP
        Nsc/IoFo/Jap0XtZokjORQDCkQkZIb3XnqVlMR5ARZbRhrZta8wFwEQmVdKYwfh49hfxMChpTLqO
        HyL20cuXxzXOs7vN7x19xt3T8sLvKN01fUNFa9V5QBf4OZ9cmQEIK+ue+9By0/IVE0BIV7Y1Wg5d
        i/1W+J02Jo23ItmKr1I5si07HQpAOgT0Hi1raWDIcyUZGke/dI6gpCGn0QM5QIuu7KbwVGHXsx2+
        ttphDtqC16XVhVbSMry20rLmQJM2B0U2TB6oACVdRlWXO8nox8GFUVs/7usKyX66FQfx7lGH0f/i
        51N0OP+9obJxlPmrrxSFttpXqUPp+5EKz9QcLYLcc79j7bu1EY2juuGUaYc2CMZRfNQTw1oP6Gxx
        AplYmgvW7HZ06lD4zjPWaaFtia5x+rxyo8PoHwAAAP//AwCSHolscQMAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8a8e7a4e1d3c94e8-LIS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Thu, 25 Jul 2024 19:15:17 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '543'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '50000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '49998959'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 1ms
      x-request-id:
      - req_300e654badbda2344548a2a3fe40dfe6
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "..."}, {"role": "user", "content":
      "Input: Vitamins are essential nutrients that your body needs in small amounts
      to work properly. There are 13 essential vitamins, including vitamins A, C,
      D, E, K, and the B vitamins (thiamine, riboflavin, niacin, pantothenic acid,
      biotin, B6, B12, and folate). Each vitamin has specific functions and benefits
      for your health."}], "model": "gpt-3.5-turbo", "max_tokens": 1000, "temperature":
      0.0, "tool_choice": {"type": "function", "function": {"name": "Output"}}, "tools":
      [{"type": "function", "function": {"name": "Output", "description": "Correctly
      extracted `Output` with all the required parameters with correct types", "parameters":
      {"properties": {"skill_1": {"description": "Output:", "title": "Skill 1", "type":
      "string"}}, "required": ["skill_1"], "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '862'
      content-type:
      - application/json
      cookie:
      - __cf_bm=0eu0BBz711fZCOXhxTDxESJNG29g.uAbkhAA7CsmbJE-1721934913-1.0.1.1-.jY4avCpWhV75BtigNk1YZ8rPbVJCZFuqEqfDC1IUS6kockRrQ9WamOU9yzMd78nBCSg6.eq55FeppPNAsxqqQ;
        _cfuvid=gQityNIU1uJ0DeTuEMImrNr2QeTc4gMhNl2e4XArkAM-1721934913284-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//bFNdb9swDHzPryD0tAFOUCf9St7WJQ22Dhu6bsWKpQhkmY7VyKIg0W2N
        IP99sJ3EaTE/2MQd70jQ5KYHIHQqJiBULlkVzvTHVE1NMU+/zlL9ZZ69Xpsy4xs1Cg9P11MR1QpK
        nlDxXjVQVDiDrMm2tPIoGWvX+GIYj0en4/iiIQpK0dSyleP+aHDW59In1D+Jh2c7ZU5aYRAT+NsD
        ANg077pHm+KrmMBJtEcKDEGuUEwOSQDCk6kRIUPQgaVlEXWkIsto67ZtacwRwURmqaQxXeH22RzF
        3aCkMUv7cv6Tvq/v1rd/vt3lZTW/Hz/MXn/fHtVrrSvXNJSVVh0GdMQf8Mm7YgDCyqLR/ijZlfxO
        CSCkX5UFWq67FpuFCGttzDJeiMlC3GuWhbYBpEfAENCylgZsyV7XEuBcMlRUekgorcAipgG0hVBI
        Y0AWVDZZBC/k1+A8OfSmGsCvHD02rvHoyPh5Vy8CbZUpU21XBww+RfA5gmkEswhuIpA2Bc4RrrqM
        D5zrOsIIvE4oM/JZ2wislqr+OmmZOEerFUil0wgSTVwzV+cRXMXD1jQjIxk/DmAmVb43h1wGCA6V
        zrSC/bxDI0jQYqY5QEa+HUaO0nA+WIiteDPube9/8eMu2h620tDKeUrCuyUTmbY65EuPMjQ/WwQm
        15ao7R6b7S/fLLRwngrHS6Y12towPrts/UR3cB073p2GYGJpOnx4etnbdShCFRiLZabtCr3z+nAM
        vW3vHwAAAP//AwA51TUmCwQAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8a8e7a53be1d94e8-LIS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Thu, 25 Jul 2024 19:15:19 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '1021'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '50000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '49998914'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 1ms
      x-request-id:
      - req_e64c95e6593ea7c0b39954c2ad9758ac
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "..."}, {"role": "user", "content":
      "Input: Minerals are naturally occurring substances that are solid and have
      a crystalline structure."}], "model": "gpt-3.5-turbo", "max_tokens": 1000, "temperature":
      0.0, "tool_choice": {"type": "function", "function": {"name": "Output"}}, "tools":
      [{"type": "function", "function": {"name": "Output", "description": "Correctly
      extracted `Output` with all the required parameters with correct types", "parameters":
      {"properties": {"skill_1": {"description": "Output:", "title": "Skill 1", "type":
      "string"}}, "required": ["skill_1"], "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '635'
      content-type:
      - application/json
      cookie:
      - __cf_bm=0eu0BBz711fZCOXhxTDxESJNG29g.uAbkhAA7CsmbJE-1721934913-1.0.1.1-.jY4avCpWhV75BtigNk1YZ8rPbVJCZFuqEqfDC1IUS6kockRrQ9WamOU9yzMd78nBCSg6.eq55FeppPNAsxqqQ;
        _cfuvid=gQityNIU1uJ0DeTuEMImrNr2QeTc4gMhNl2e4XArkAM-1721934913284-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//bFLBbtpAEL37K0ZzBoQJpLLPNOFAlVZNW7UlshZ7MBvWO+7uOApF/Htk
        G7CD4oM1muc373nmHQIA1BnGgOlWSVqUZhjxfm4nY7n9s3xZf+VZ/riXn26+vL3/vmAc1AxeP1Mq
        Z9Yo5aI0JJptC6eOlFA9Nfw0CaObaRRGDVBwRqam5aUMb0azoVRuzcNxOJmdmFvWKXmM4W8AAHBo
        3rVHm9ErxjAenDsFea9ywvjyEQA6NnUHlffai7KCgw5M2QrZ2ratjOkBwmySVBnTCbfPoVd3i1LG
        JM+/X3883P+6+/xtN18sF9E009P/4SP39NrR+7IxtKlsellQD7/04ysxALSqaLgPlZSVXDEBULm8
        KshK7RoPK/Q7bUwSrjBe4RdtySnjQTkC8p6saGXAVuJ0TQHZKmlAR/8q7SiDDTt4UU5z5WHNmTZ7
        OLvzoxUe8Z3+MfiofjpVx8uZDOel47W/2jputNV+mzhSvvl79MJlK1GPe2riUL27MJaOi1IS4R3Z
        emB0SgN2AezANnLNdUWZXn8cBSeD6PdeqEg22ubkSqcv4QiOwRsAAAD//wMAnOEwohsDAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8a8e7a5c2a3294e8-LIS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Thu, 25 Jul 2024 19:15:19 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '330'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '50000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '49998971'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 1ms
      x-request-id:
      - req_c4b2d0417228bc67ff3f91e32266351a
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "You are a helpful assistant."},
      {"role": "user", "content": "\nA prompt is a text paragraph that outlines the
      expected actions and instructs the large language model (LLM) to generate a
      specific output. This prompt is concatenated with the input text, and the model
      then creates the required output.\nThis describes the full template how the
      prompt is concatenated with the input to produce the output:\n\n```\n\n{prompt}\nInput:
      {category}\nOutput: {skill_0}\n```\n\nHere:\n- \"Input: {category}\" is input
      template,\n- \"{prompt}\" is the LLM prompt,\n- \"Output: {skill_0}\" is the
      output template.\n\nModel can produce erroneous output if a prompt is not well
      defined. In our collaboration, we\u2019ll work together to refine a prompt.
      The process consists of two main steps:\n\n## Step 1\nI will provide you with
      the current prompt along with prediction examples. Each example contains the
      input text, the final prediction produced by the model, and the user feedback.
      User feedback indicates whether the model prediction is correct or not. Your
      task is to analyze the examples and user feedback, determining whether the existing
      instruction is describing the task reflected by these examples precisely, and
      suggests changes to the prompt to address the incorrect predictions.\n\n## Step
      2\nNext, you will carefully review your reasoning in step 1, integrate the insights
      to refine the prompt, and provide me with the new prompt that improves the model\u2019s
      performance."}, {"role": "assistant", "content": "Sure, I\u2019d be happy to
      help you with this prompt engineering problem. Please provide me with the current
      prompt and the examples with user feedback."}, {"role": "user", "content": "\n##
      Current prompt\n...\n\n## Examples\n### Example #0\n\nInput: Macronutrients\n\nOutput:
      Macronutrients are nutrients that provide calories or energy. They are needed
      in large amounts and include carbohydrates, proteins, and fats.\n\nUser feedback:
      Prediction is incorrect. Correct answer: \"Carbohydrates, Proteins, Fats\"\n\n\n###
      Example #1\n\nInput: Vitamins\n\nOutput: Vitamins are essential nutrients that
      your body needs in small amounts to work properly. There are 13 essential vitamins,
      including vitamins A, C, D, E, K, and the B vitamins (thiamine, riboflavin,
      niacin, pantothenic acid, biotin, B6, B12, and folate). Each vitamin has specific
      functions and benefits for your health.\n\nUser feedback: Prediction is incorrect.
      Correct answer: \"Vitamin A, Vitamin C, Vitamin D\"\n\n\n### Example #2\n\nInput:
      Minerals\n\nOutput: Minerals are naturally occurring substances that are solid
      and have a crystalline structure.\n\nUser feedback: Prediction is incorrect.
      Correct answer: \"Calcium, Iron, Magnesium\"\n\n\n\nSummarize your analysis
      about incorrect predictions and suggest changes to the prompt."}], "model":
      "gpt-4", "max_tokens": 1000, "temperature": 0.0}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '2923'
      content-type:
      - application/json
      cookie:
      - __cf_bm=0eu0BBz711fZCOXhxTDxESJNG29g.uAbkhAA7CsmbJE-1721934913-1.0.1.1-.jY4avCpWhV75BtigNk1YZ8rPbVJCZFuqEqfDC1IUS6kockRrQ9WamOU9yzMd78nBCSg6.eq55FeppPNAsxqqQ;
        _cfuvid=gQityNIU1uJ0DeTuEMImrNr2QeTc4gMhNl2e4XArkAM-1721934913284-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//lFRNb9w2EL3vrxhwr/LCXid1vLc2iVMgadEiuWULYySOJMYUR+WMdr0I
        /N8LUlrJLhAUvQgS5+u9x6f5vgIwzpodmKpFrbreX9zy6R3fuE/vr8pPsT70j8f27uPfv3/8cHP8
        5U9TpAouv1Gl56pNxV3vSR2HMVxFQqXU9epme3V7/ep2e5kDHVvyqazp9eLVxeVPV9dTRcuuIjE7
        +LoCAPienwlbsPRodpDr80lHItiQ2c1JACayTycGRZwoBjXFEqw4KIUMd72GnwP6kzjZhy8tQTXE
        SEGhj9z1CkLUCShDSeCCaBwqdaEBbQky+BTrIx+cJUCwpOg8WaDH3mPAJAFwBEu1C278qnOxC/2g
        UKFSw/G0gV/5SAeKBZQoZIFDzhqEItREtsTqoQCngH1PGAW0RZ1TBDBSmkkjOgTvRNMopxl/Sq7R
        exiCpZjrGnegMAMoILD+gMAG9mEf7jgCPWK62AJcgPfjO6wviwXqCIEs7M1bjCW3JxtRSQr4I7KS
        C1LAHarsDaDkMh40CVFzfCbL3vyGVeQwaHQUUnoB5aDPVJ8ktz/UvIZjIt296JNk2kC6ZsGOoEdV
        igGcAJdC8UA2McuwtKWZrySwR/J+k4RYr+Hz0DQkiefbFkNDk3fOnml58DY5pmPrakc2meTsnpfW
        yfc0j5m88e+riZjRaIthIj5e8n+7bSQ7TgtENls5eyD9FHY0hpshL0b+v/5ZPJJ4YqhodMUkSXVW
        pMp6ZUGEO9I2MfHugXawNx9yS3zGPMNIiYtGGUtJntNfyKCtk2co3nE28pnIooRA9u+skxTwbRAd
        J2TnJaabvYEvqeMxA+7wIQWg8oRxnHZWM7vLyeL4s3Gynzdm2jZP85ry3PSRy7TSwuD9fJ4ASnsf
        CYVDWkmi3I/lTyuAv/I6HF5sODOqeq/8QCE1fP1mO/Yzy+Zdotvt9RRVVvRL4M3l69UE0chJlLr7
        2oWGYh9dXo8J6Opp9Q8AAAD//wMArtUtnxUGAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8a8e7a60585494e8-LIS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Thu, 25 Jul 2024 19:15:33 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '13314'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '1000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '998336'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 99ms
      x-request-id:
      - req_5f943c09dafad7037bacb5010e411114
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "You are a helpful assistant."},
      {"role": "user", "content": "\nA prompt is a text paragraph that outlines the
      expected actions and instructs the large language model (LLM) to generate a
      specific output. This prompt is concatenated with the input text, and the model
      then creates the required output.\nThis describes the full template how the
      prompt is concatenated with the input to produce the output:\n\n```\n\n{prompt}\nInput:
      {category}\nOutput: {skill_0}\n```\n\nHere:\n- \"Input: {category}\" is input
      template,\n- \"{prompt}\" is the LLM prompt,\n- \"Output: {skill_0}\" is the
      output template.\n\nModel can produce erroneous output if a prompt is not well
      defined. In our collaboration, we\u2019ll work together to refine a prompt.
      The process consists of two main steps:\n\n## Step 1\nI will provide you with
      the current prompt along with prediction examples. Each example contains the
      input text, the final prediction produced by the model, and the user feedback.
      User feedback indicates whether the model prediction is correct or not. Your
      task is to analyze the examples and user feedback, determining whether the existing
      instruction is describing the task reflected by these examples precisely, and
      suggests changes to the prompt to address the incorrect predictions.\n\n## Step
      2\nNext, you will carefully review your reasoning in step 1, integrate the insights
      to refine the prompt, and provide me with the new prompt that improves the model\u2019s
      performance."}, {"role": "assistant", "content": "Sure, I\u2019d be happy to
      help you with this prompt engineering problem. Please provide me with the current
      prompt and the examples with user feedback."}, {"role": "user", "content": "\n##
      Current prompt\n...\n\n## Examples\n### Example #0\n\nInput: Macronutrients\n\nOutput:
      Macronutrients are nutrients that provide calories or energy. They are needed
      in large amounts and include carbohydrates, proteins, and fats.\n\nUser feedback:
      Prediction is incorrect. Correct answer: \"Carbohydrates, Proteins, Fats\"\n\n\n###
      Example #1\n\nInput: Vitamins\n\nOutput: Vitamins are essential nutrients that
      your body needs in small amounts to work properly. There are 13 essential vitamins,
      including vitamins A, C, D, E, K, and the B vitamins (thiamine, riboflavin,
      niacin, pantothenic acid, biotin, B6, B12, and folate). Each vitamin has specific
      functions and benefits for your health.\n\nUser feedback: Prediction is incorrect.
      Correct answer: \"Vitamin A, Vitamin C, Vitamin D\"\n\n\n### Example #2\n\nInput:
      Minerals\n\nOutput: Minerals are naturally occurring substances that are solid
      and have a crystalline structure.\n\nUser feedback: Prediction is incorrect.
      Correct answer: \"Calcium, Iron, Magnesium\"\n\n\n\nSummarize your analysis
      about incorrect predictions and suggest changes to the prompt."}, {"role": "assistant",
      "content": "## Analysis\nThe current prompt seems to be instructing the model
      to provide a detailed explanation or definition of the input category. However,
      based on the user feedback, it appears that the users are expecting a list of
      items that fall under the given category, not a detailed explanation. \n\nFor
      example, in Example #0, the user expected \"Carbohydrates, Proteins, Fats\"
      as the output for the input \"Macronutrients\", but the model provided a detailed
      explanation of what macronutrients are. The same pattern is observed in the
      other examples as well.\n\n## Suggested Changes\nThe prompt should be modified
      to instruct the model to list examples of the given category, rather than providing
      a detailed explanation or definition. The model needs to understand that it
      should provide a list of items that fall under the given category. \n\nFor instance,
      the prompt could be changed to something like: \"Given a category, list some
      examples that belong to this category. Do not provide definitions or explanations,
      just list the items.\" This would make it clear to the model what is expected
      in the output."}, {"role": "user", "content": "\nNow please carefully review
      your reasoning in Step 1 and help with Step 2: refining the prompt.\n\n## Current
      prompt\n...\n\n## Follow this guidance to refine the prompt:\n\n1. The new prompt
      should should describe the task precisely, and address the points raised in
      the user feedback.\n\n2. The new prompt should be similar to the current prompt,
      and only differ in the parts that address the issues you identified in Step
      1.\n    Example:\n    - Current prompt: \"Generate a summary of the input text.\"\n    -
      New prompt: \"Generate a summary of the input text. Pay attention to the original
      style.\"\n\n3. Reply only with the new prompt. Do not include input and output
      templates in the prompt.\n"}], "model": "gpt-4", "max_tokens": 1000, "temperature":
      0.0}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '4809'
      content-type:
      - application/json
      cookie:
      - __cf_bm=0eu0BBz711fZCOXhxTDxESJNG29g.uAbkhAA7CsmbJE-1721934913-1.0.1.1-.jY4avCpWhV75BtigNk1YZ8rPbVJCZFuqEqfDC1IUS6kockRrQ9WamOU9yzMd78nBCSg6.eq55FeppPNAsxqqQ;
        _cfuvid=gQityNIU1uJ0DeTuEMImrNr2QeTc4gMhNl2e4XArkAM-1721934913284-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//VJHBTsMwEETv+YqVz2nVNFCaHFGBD0AgJIoq19kmBsdr7C1qqfrvyElI
        4WLJO36j2fEpARC6EiUI1UhWrTOTgo532cv9d6aq+fPjatY81Hp5+9w82c/Fh0gjQdt3VPxLTRW1
        ziBrsr2sPErG6JrdzLMivyryvBNaqtBErHY8uZrMFlk+EA1phUGU8JoAAJy6M2azFR5ECbP0d9Ji
        CLJGUY6PAIQnEydChqADS8sivYiKLKPt4q7Fg/5CCxKUZKzJH1Nwnr50hSDB6MBAO9CMbQBuJMMW
        DdkamIAbHUZqCisCSzzCFe601bGCAOQBD85IK7t7Cu/7wL05N9i7T9dCDAnP42qGaudpG2uwe2PG
        ebQOzcajDGTjGoHJ9fg5AXjrKtz/a0U4T63jDdMH2mhYXBe9n7j81kWdLweRiaX5Qy1vkiGhCMfA
        2G522tbondddozFnck5+AAAA//8DAEevzcVIAgAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8a8e7ab5d89c94e8-LIS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Thu, 25 Jul 2024 19:15:35 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '2151'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '1000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '997889'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 126ms
      x-request-id:
      - req_bbea3ce6800d4fd13572eeb04b61ec69
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "\"Given a category, provide
      a list of items that belong to this category. Do not provide definitions or
      explanations, just list the items.\""}, {"role": "user", "content": "Input:
      Macronutrients"}], "model": "gpt-3.5-turbo", "max_tokens": 1000, "temperature":
      0.0, "tool_choice": {"type": "function", "function": {"name": "Output"}}, "tools":
      [{"type": "function", "function": {"name": "Output", "description": "Correctly
      extracted `Output` with all the required parameters with correct types", "parameters":
      {"properties": {"skill_0": {"description": "Output:", "title": "Skill 0", "type":
      "string"}}, "required": ["skill_0"], "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '694'
      content-type:
      - application/json
      cookie:
      - __cf_bm=0eu0BBz711fZCOXhxTDxESJNG29g.uAbkhAA7CsmbJE-1721934913-1.0.1.1-.jY4avCpWhV75BtigNk1YZ8rPbVJCZFuqEqfDC1IUS6kockRrQ9WamOU9yzMd78nBCSg6.eq55FeppPNAsxqqQ;
        _cfuvid=gQityNIU1uJ0DeTuEMImrNr2QeTc4gMhNl2e4XArkAM-1721934913284-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA2xS3W+bMBB/56+w7plUkI9u4S3Kumhrpy3TXtamQgYc8Gp8rn2sTaP875MhITQa
        D9bpfv59+I59wBjIAhIGecUpr40azXF3M31+aV7Xq/j+7nc0W/zKFp/ct9i+6BsIPQOzPyKnE+sq
        x9ooQRJ1B+dWcBJeNf4wjueT6Xxy3QI1FkJ5WmloNLmajaixGY6ieDw7MiuUuXCQsIeAMcb27ekz
        6kK8QsKi8NSphXO8FJD0lxgDi8p3gDsnHXFNEJ7BHDUJ7WPrRqkBQIgqzblSZ+Pu2w/q86C4Uql+
        K24XX6fryXqpVkta/oy+fKz/VquBXye9M22gbaPzfkADvO8nF2aMgeZ1y/3ekGnogskYcFs2tdDk
        U8N+A+5JKpVGG0g2sOQ2w2pXWE7CheyHRRJSu5B95uQ2cIB3Yofgf/XjsTr0M1dYGouZuxghbKWW
        rkqt4K59CjhC01l4ucd2t827dYGxWBtKCZ+E9oJxNOv04Pw7DdATSEhcDfrjKDgmBLdzJOp0K3Up
        rLGyX3VwCP4BAAD//wMAqrlGVukCAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8a8e7ac5e96e94e8-LIS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Thu, 25 Jul 2024 19:15:36 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '348'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '50000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '49998957'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 1ms
      x-request-id:
      - req_cfcd05f755ce0a054d04c8cf98da6992
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "\"Given a category, provide
      a list of items that belong to this category. Do not provide definitions or
      explanations, just list the items.\""}, {"role": "user", "content": "Input:
      Vitamins"}], "model": "gpt-3.5-turbo", "max_tokens": 1000, "temperature": 0.0,
      "tool_choice": {"type": "function", "function": {"name": "Output"}}, "tools":
      [{"type": "function", "function": {"name": "Output", "description": "Correctly
      extracted `Output` with all the required parameters with correct types", "parameters":
      {"properties": {"skill_0": {"description": "Output:", "title": "Skill 0", "type":
      "string"}}, "required": ["skill_0"], "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '688'
      content-type:
      - application/json
      cookie:
      - __cf_bm=0eu0BBz711fZCOXhxTDxESJNG29g.uAbkhAA7CsmbJE-1721934913-1.0.1.1-.jY4avCpWhV75BtigNk1YZ8rPbVJCZFuqEqfDC1IUS6kockRrQ9WamOU9yzMd78nBCSg6.eq55FeppPNAsxqqQ;
        _cfuvid=gQityNIU1uJ0DeTuEMImrNr2QeTc4gMhNl2e4XArkAM-1721934913284-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//bFJNT+MwEL3nV1hzblGafkBzKyziwKFa0BZWWxS5rpt68Rf2RCJU/e8r
        J20cqvUheprn995kxoeEEBBbyAmwPUWmrBzOTX0/WS2eVk/8c3L3UH4tPq6ff6W/1fJ1NoNBUJjN
        X87wrLpiRlnJURjd0sxxijy4jq6z0Xw8mY9nDaHMlssgKy0Ox1fTIVZuY4bpKJuelHsjGPeQkz8J
        IYQcmm/oUW/5J+QkHZwrintPSw55d4kQcEaGClDvhUeqEQaRZEYj16FtXUnZI9AYWTAqZQxuz6GH
        46ColIVZbl9wenO7fx3/fK7rbCGd0JuPVS+vta5t09Cu0qwbUI/v6vlFGCGgqWq0ywpthRdKQoC6
        slJcY+gaDmvw70LKIl1DvoaVQKqEJosBOcPbCO8i/BHhfYSPazjCt7xj8j/8dkLHbi3SlNaZjb+Y
        MuyEFn5fOE5987fg0dg2Iti9Neuvvm0UrDPKYoHmnetgOEonrR/EFxfZ7EyiQSp7quwmOXUIvvbI
        VbETuuTOOtG9huSY/AMAAP//AwBkIc6YDAMAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8a8e7aca289594e8-LIS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Thu, 25 Jul 2024 19:15:37 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '336'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '50000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '49998958'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 1ms
      x-request-id:
      - req_abbac1e5c2fac6382702214bf4ac6a67
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "\"Given a category, provide
      a list of items that belong to this category. Do not provide definitions or
      explanations, just list the items.\""}, {"role": "user", "content": "Input:
      Minerals"}], "model": "gpt-3.5-turbo", "max_tokens": 1000, "temperature": 0.0,
      "tool_choice": {"type": "function", "function": {"name": "Output"}}, "tools":
      [{"type": "function", "function": {"name": "Output", "description": "Correctly
      extracted `Output` with all the required parameters with correct types", "parameters":
      {"properties": {"skill_0": {"description": "Output:", "title": "Skill 0", "type":
      "string"}}, "required": ["skill_0"], "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '688'
      content-type:
      - application/json
      cookie:
      - __cf_bm=0eu0BBz711fZCOXhxTDxESJNG29g.uAbkhAA7CsmbJE-1721934913-1.0.1.1-.jY4avCpWhV75BtigNk1YZ8rPbVJCZFuqEqfDC1IUS6kockRrQ9WamOU9yzMd78nBCSg6.eq55FeppPNAsxqqQ;
        _cfuvid=gQityNIU1uJ0DeTuEMImrNr2QeTc4gMhNl2e4XArkAM-1721934913284-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//bFLbjtowEH3PV4z8si8QJVw3eSu0qlZly156kVqvIhNMcHE8XntScRH/
        XiWwwKL6ITqa43POZDy7AICpOUuB5UtBeWl1O8HNp/63D+Pxw9xOkmH08xWfn7aj9bQYPxasVStw
        9kfm9KYKcyytlqTQHOjcSUGydo2HnTjp9pLusCFKnEtdywpL7W7Yb1PlZtiO4k7/qFyiyqVnKfwO
        AAB2zbfu0czlmqUQtd4qpfReFJKlp0sAzKGuK0x4rzwJQ6x1JnM0JE3dtqm0viAIUWe50PocfDi7
        C3welNA6e7izq9Hoy497l3Ret1Mz/D65XY+eqou8g/XGNg0tKpOfBnTBn+rpVRgAM6JstNOKbEVX
        SgAmXFGV0lDdNdtx5ldK6yziLOVsojwBLkCRLD3QUhDMpEZTACHQUkIuSBboNnBzr4x0QvublHMT
        h/BYCUdbzk0nhI9KlGjmnJtuCJ9R16gXwrPSf6Xj3PRDGKO1DR6EcOfQcG6GIfxSJufc3IYwkaJW
        JSF8VflK6jokCmEkqrUiydmevfuvffA//HJE+9Pzayysw5m/ek22UEb5Zeak8M1UmSe0h4ja7qVZ
        s+rd5jDrsLSUEa6kqQ3jqHvwY+fNPrOD+EgSktAXqkEvOHbI/MaTLLOFMoV01qnT1gX74B8AAAD/
        /wMAtONQi3QDAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8a8e7acebfa194e8-LIS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Thu, 25 Jul 2024 19:15:38 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '883'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '50000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '49998958'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 1ms
      x-request-id:
      - req_7a54b92a1606047f635e72d36a71afa8
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "..."}, {"role": "user", "content":
      "Input: Carbohydrates, Proteins, Fats"}], "model": "gpt-3.5-turbo", "max_tokens":
      1000, "temperature": 0.0, "tool_choice": {"type": "function", "function": {"name":
      "Output"}}, "tools": [{"type": "function", "function": {"name": "Output", "description":
      "Correctly extracted `Output` with all the required parameters with correct
      types", "parameters": {"properties": {"skill_1": {"description": "Output:",
      "title": "Skill 1", "type": "string"}}, "required": ["skill_1"], "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '572'
      content-type:
      - application/json
      cookie:
      - __cf_bm=0eu0BBz711fZCOXhxTDxESJNG29g.uAbkhAA7CsmbJE-1721934913-1.0.1.1-.jY4avCpWhV75BtigNk1YZ8rPbVJCZFuqEqfDC1IUS6kockRrQ9WamOU9yzMd78nBCSg6.eq55FeppPNAsxqqQ;
        _cfuvid=gQityNIU1uJ0DeTuEMImrNr2QeTc4gMhNl2e4XArkAM-1721934913284-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA2xSS4+bMBC+8yusOZPVQpJm4dZWrdSqr2gPq26zQo4x4I3xuPZYTRrlv1dAFrJR
        OVij+fw9PMMxYgxUCTkD0XASrdWzDA8f3qzS+7+h/bJvPu3Dn3Ipqyx9KD+vnyHuGLh9loJeWDcC
        W6slKTQDLJzkJDvVZJUm2XyRze96oMVS6o5WW5rNb5YzCm6Ls9skXZ6ZDSohPeTsV8QYY8f+7DKa
        Uu4hZ7fxS6eV3vNaQj5eYgwc6q4D3HvliRuCeAIFGpKmi22C1hcAIepCcK0n4+E7XtTToLjWxer3
        w9dv63QRHh9DpXZv34n6nq9/Hi78BumD7QNVwYhxQBf42M+vzBgDw9ue+z2QDXTFZAy4q0MrDXWp
        4bgBv1NaF8kG8g28526LzaF0nKSP2Q+HJJXxMfvIyW/gBK/ETtH/6qdzdRpnrrG2Drf+aoRQKaN8
        UzjJff8U8IR2sOjknvrdhlfrAuuwtVQQ7qTpBO8WgxxMf9MEJsszSEhcT/0si875wB88ybaolKml
        s06Ni45O0T8AAAD//wMAwDoLhOcCAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8a8e7ad65cb794e8-LIS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Thu, 25 Jul 2024 19:15:39 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '251'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '50000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '49998988'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 1ms
      x-request-id:
      - req_e5a9aa73de9a4ec70a99199122c2f027
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "..."}, {"role": "user", "content":
      "Input: Vitamin A, Vitamin B, Vitamin C, Vitamin D, Vitamin E, Vitamin K"}],
      "model": "gpt-3.5-turbo", "max_tokens": 1000, "temperature": 0.0, "tool_choice":
      {"type": "function", "function": {"name": "Output"}}, "tools": [{"type": "function",
      "function": {"name": "Output", "description": "Correctly extracted `Output`
      with all the required parameters with correct types", "parameters": {"properties":
      {"skill_1": {"description": "Output:", "title": "Skill 1", "type": "string"}},
      "required": ["skill_1"], "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '607'
      content-type:
      - application/json
      cookie:
      - __cf_bm=0eu0BBz711fZCOXhxTDxESJNG29g.uAbkhAA7CsmbJE-1721934913-1.0.1.1-.jY4avCpWhV75BtigNk1YZ8rPbVJCZFuqEqfDC1IUS6kockRrQ9WamOU9yzMd78nBCSg6.eq55FeppPNAsxqqQ;
        _cfuvid=gQityNIU1uJ0DeTuEMImrNr2QeTc4gMhNl2e4XArkAM-1721934913284-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA2xS32/aMBB+z19xuueAGmjLyFtpkVg7aZOmttNGFZnkCB4X27MvWxHif58SKKGo
        frBO9/n7ofNtIwDUBaaA+UpJXjnuje1mOgpm9unz/cDT488f32fePM42k3B9/w3jhmEXvymXN1Y/
        t5VjEm3NHs49KaFGNRkNkvHwcjwct0BlC+KGVjrpDftXPan9wvYuksHVgbmyOqeAKfyKAAC27d1k
        NAW9YgoX8VunohBUSZgeHwGgt9x0UIWggygjGHdgbo2QaWKbmvkEEGs5yxVzZ7w/25O6G5Rizm7K
        iX+Yrqlgdzn58np9J6PC/3l+PvHbS29cG2hZm/w4oBP82E/PzADQqKrlfq3F1XLGBEDly7oiI01q
        3M4xrDVzlswxneOTFlVpE+AmhkkMtzHcxTCNQZkCHkB5AgqBjGjFsLQeKqWNKG20KcH+Ja+YYUWK
        ZdVS/hFzb0HalP057vBdkl30Uf1yqHbHD2NbOm8X4Wz+uNRGh1XmSYV2DhjEur1FI/fSLkb97q/R
        eVs5ycSuyTSC48FeDrtV7MBhcgDFiuKunwyG0SEghk0QqrKlNiV55/VxTaJd9B8AAP//AwCLfPQh
        JQMAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8a8e7ada3a7694e8-LIS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Thu, 25 Jul 2024 19:15:40 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '547'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '50000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '49998979'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 1ms
      x-request-id:
      - req_3cd8da4cf88cc16b95ee1296c20f89b5
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "..."}, {"role": "user", "content":
      "Input: List of items that belong to the category ''Minerals'':\n1. Quartz\n2.
      Diamond\n3. Gold\n4. Silver\n5. Copper\n6. Iron\n7. Zinc\n8. Lead\n9. Nickel\n10.
      Bauxite"}], "model": "gpt-3.5-turbo", "max_tokens": 1000, "temperature": 0.0,
      "tool_choice": {"type": "function", "function": {"name": "Output"}}, "tools":
      [{"type": "function", "function": {"name": "Output", "description": "Correctly
      extracted `Output` with all the required parameters with correct types", "parameters":
      {"properties": {"skill_1": {"description": "Output:", "title": "Skill 1", "type":
      "string"}}, "required": ["skill_1"], "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '701'
      content-type:
      - application/json
      cookie:
      - __cf_bm=0eu0BBz711fZCOXhxTDxESJNG29g.uAbkhAA7CsmbJE-1721934913-1.0.1.1-.jY4avCpWhV75BtigNk1YZ8rPbVJCZFuqEqfDC1IUS6kockRrQ9WamOU9yzMd78nBCSg6.eq55FeppPNAsxqqQ;
        _cfuvid=gQityNIU1uJ0DeTuEMImrNr2QeTc4gMhNl2e4XArkAM-1721934913284-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA2xSS4/aMBC+8ytGcw4rwmO75NbSqtpqBa16a1lFxhmCi+Nx7ckWFvHfqwQaWNQc
        nNF8+R4Zz6EHgKbADFBvlOjK2/6U958eZLEYz8Z/3Mtcbx9fZ6ndil8tSotJw+DVL9Lyj3WnufKW
        xLA7wTqQEmpU03fDdDoaT8eDFqi4INvQSi/90d2kL3VYcX+QDidn5oaNpogZ/OwBABzas8noCtph
        Bq1O26koRlUSZt1HABjYNh1UMZooygkmF1CzE3JNbFdbewUIs821svZifHoOV/VlUMrafOTv38eF
        4t3+69N8QL/tl82IeEBXfifpvW8DrWunuwFd4V0/uzEDQKeqlruoxddywwRAFcq6IidNajwsMW6N
        tXm6xGyJ32oV5DWBj0ZV7IoEPrMtEvhu7AuFBGbsffN+DOwS+GGcTuCJVJHA3Ogt2QQ+qHpnhJZ4
        xDe+x97/6udzdeyux3LpA6/izbRxbZyJmzyQiu1fYxT2J4tG7rldg/rNzaIPXHnJhbfkGsF0+HDS
        w8vmXdAOFBZlr1iT+945IcZ9FKrytXElBR9MtxW9Y+8vAAAA//8DALhD3v8UAwAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8a8e7adfec3a94e8-LIS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Thu, 25 Jul 2024 19:15:40 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '398'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '50000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '49998957'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 1ms
      x-request-id:
      - req_0b9dba8032a6f28c8954b073c2a78f79
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "You are a helpful assistant."},
      {"role": "user", "content": "\nA prompt is a text paragraph that outlines the
      expected actions and instructs the large language model (LLM) to generate a
      specific output. This prompt is concatenated with the input text, and the model
      then creates the required output.\nThis describes the full template how the
      prompt is concatenated with the input to produce the output:\n\n```\n\n{prompt}\nInput:
      {category}\nOutput: {skill_0}\n```\n\nHere:\n- \"Input: {category}\" is input
      template,\n- \"{prompt}\" is the LLM prompt,\n- \"Output: {skill_0}\" is the
      output template.\n\nModel can produce erroneous output if a prompt is not well
      defined. In our collaboration, we\u2019ll work together to refine a prompt.
      The process consists of two main steps:\n\n## Step 1\nI will provide you with
      the current prompt along with prediction examples. Each example contains the
      input text, the final prediction produced by the model, and the user feedback.
      User feedback indicates whether the model prediction is correct or not. Your
      task is to analyze the examples and user feedback, determining whether the existing
      instruction is describing the task reflected by these examples precisely, and
      suggests changes to the prompt to address the incorrect predictions.\n\n## Step
      2\nNext, you will carefully review your reasoning in step 1, integrate the insights
      to refine the prompt, and provide me with the new prompt that improves the model\u2019s
      performance."}, {"role": "assistant", "content": "Sure, I\u2019d be happy to
      help you with this prompt engineering problem. Please provide me with the current
      prompt and the examples with user feedback."}, {"role": "user", "content": "\n##
      Current prompt\n\"Given a category, provide a list of items that belong to this
      category. Do not provide definitions or explanations, just list the items.\"\n\n##
      Examples\n### Example #0\n\nInput: Macronutrients\n\nOutput: Carbohydrates,
      Proteins, Fats\n\nUser feedback: Prediction is correct.\n\n\n### Example #1\n\nInput:
      Vitamins\n\nOutput: Vitamin A, Vitamin B, Vitamin C, Vitamin D, Vitamin E, Vitamin
      K\n\nUser feedback: Prediction is incorrect. Correct answer: \"Vitamin A, Vitamin
      C, Vitamin D\"\n\n\n### Example #2\n\nInput: Minerals\n\nOutput: List of items
      that belong to the category ''Minerals'':\n1. Quartz\n2. Diamond\n3. Gold\n4.
      Silver\n5. Copper\n6. Iron\n7. Zinc\n8. Lead\n9. Nickel\n10. Bauxite\n\nUser
      feedback: Prediction is incorrect. Correct answer: \"Calcium, Iron, Magnesium\"\n\n\n\nSummarize
      your analysis about incorrect predictions and suggest changes to the prompt."}],
      "model": "gpt-4", "max_tokens": 1000, "temperature": 0.0}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '2707'
      content-type:
      - application/json
      cookie:
      - __cf_bm=0eu0BBz711fZCOXhxTDxESJNG29g.uAbkhAA7CsmbJE-1721934913-1.0.1.1-.jY4avCpWhV75BtigNk1YZ8rPbVJCZFuqEqfDC1IUS6kockRrQ9WamOU9yzMd78nBCSg6.eq55FeppPNAsxqqQ;
        _cfuvid=gQityNIU1uJ0DeTuEMImrNr2QeTc4gMhNl2e4XArkAM-1721934913284-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA4xUTW/bRhC961cMqEMvshD5I651C1q3apAgh+SUuDBWyxF3reUOsTMULQT+78Es
        KYoOgqIXQeRw3nvz5uP7DKDwZbGGwjojtm7CxR0d7+8+vL82m83906fbzearq5/ff/3S7m4+fCwW
        mkHbJ7RyylpaqpuA4in2YZvQCCrq6vZydXd1fXe9yoGaSgyaVjVycX3x5u3qashw5C1ysYZvMwCA
        7/lXtcUSn4s1vFmc3tTIbCos1uNHAEWioG8Kw+xZTJRicQ5aioIxy53P4V004cieH+JD/OIQbJsS
        RoEmUd0IeAYb0CTwEbww+MiSWqvFgRAEzwJesGYQZwS2GChWGjFQ+QNGsEawonRcwoY6PGBagDiE
        XDow5kyCLYLiVlXwsYLOi8tfZanPArTrH3ssj7yEvygBPht1eqHi7vv/MF9NCSylhFbCMSvFEg5e
        TO0jw7YV8NGGtsQSakqoBUTotArNbxmVoEErWC7hnwnD5ZRhwK19xGSCGvSz8gopUHVcQOd8wDN4
        Z3gg0Jr/AyC2krw6vtQmzefwua0qzLR/OBMrHJs3NM1SG0r1tDYl9sVxg9bvvFWzq9aXOClBqDOp
        5IE2G3ai733Wppto1eifGwEmISQMOuCKPWrtPXolqNdwzJMyGQftNrUC+0idOjGt3kcw5WHglt8Y
        rDMhYKx8P2W12eOU6FWt2a530BCz3wYEptDmwR390Tnl/bklQgp08CfXJjLEoVcnmlaW8CuvbW5F
        NoGpRnEqMfg9ruGh+Dvvghm3AUws8z4NDIuR1/Q7Rbtfr5U43chxp/4kiCRjcok7H7P9DHk/mmCi
        yc8LeGpZenCtN6MvH4p+dDxDZ46LsxOvO9Y5FKf+ODxCZ6L8j3lXAZNp2J33Vf3zDOwyh8PQTIYx
        dzSbb6xtkxF1GkufTw4vi+GOvYwHMFDVJNrqsYxtCON7dYLdY0LDFPXYsVDTp7/MAP7Nh7Z9dTuL
        vqePQnuMCnhzc9XjFeebfo5eXp2iQmLCOXD7+9vZILHgIwvWjzsfK0xN8vnwqtDZy+wHAAAA//8D
        AOueVz1vBgAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8a8e7ae49b5f94e8-LIS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Thu, 25 Jul 2024 19:15:54 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '13790'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '1000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '998393'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 96ms
      x-request-id:
      - req_d61d0183882bf18d26919741e0447fa5
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "You are a helpful assistant."},
      {"role": "user", "content": "\nA prompt is a text paragraph that outlines the
      expected actions and instructs the large language model (LLM) to generate a
      specific output. This prompt is concatenated with the input text, and the model
      then creates the required output.\nThis describes the full template how the
      prompt is concatenated with the input to produce the output:\n\n```\n\n{prompt}\nInput:
      {category}\nOutput: {skill_0}\n```\n\nHere:\n- \"Input: {category}\" is input
      template,\n- \"{prompt}\" is the LLM prompt,\n- \"Output: {skill_0}\" is the
      output template.\n\nModel can produce erroneous output if a prompt is not well
      defined. In our collaboration, we\u2019ll work together to refine a prompt.
      The process consists of two main steps:\n\n## Step 1\nI will provide you with
      the current prompt along with prediction examples. Each example contains the
      input text, the final prediction produced by the model, and the user feedback.
      User feedback indicates whether the model prediction is correct or not. Your
      task is to analyze the examples and user feedback, determining whether the existing
      instruction is describing the task reflected by these examples precisely, and
      suggests changes to the prompt to address the incorrect predictions.\n\n## Step
      2\nNext, you will carefully review your reasoning in step 1, integrate the insights
      to refine the prompt, and provide me with the new prompt that improves the model\u2019s
      performance."}, {"role": "assistant", "content": "Sure, I\u2019d be happy to
      help you with this prompt engineering problem. Please provide me with the current
      prompt and the examples with user feedback."}, {"role": "user", "content": "\n##
      Current prompt\n\"Given a category, provide a list of items that belong to this
      category. Do not provide definitions or explanations, just list the items.\"\n\n##
      Examples\n### Example #0\n\nInput: Macronutrients\n\nOutput: Carbohydrates,
      Proteins, Fats\n\nUser feedback: Prediction is correct.\n\n\n### Example #1\n\nInput:
      Vitamins\n\nOutput: Vitamin A, Vitamin B, Vitamin C, Vitamin D, Vitamin E, Vitamin
      K\n\nUser feedback: Prediction is incorrect. Correct answer: \"Vitamin A, Vitamin
      C, Vitamin D\"\n\n\n### Example #2\n\nInput: Minerals\n\nOutput: List of items
      that belong to the category ''Minerals'':\n1. Quartz\n2. Diamond\n3. Gold\n4.
      Silver\n5. Copper\n6. Iron\n7. Zinc\n8. Lead\n9. Nickel\n10. Bauxite\n\nUser
      feedback: Prediction is incorrect. Correct answer: \"Calcium, Iron, Magnesium\"\n\n\n\nSummarize
      your analysis about incorrect predictions and suggest changes to the prompt."},
      {"role": "assistant", "content": "## Analysis\n\nThe current prompt is clear
      in its instruction to list items that belong to a given category. However, the
      model seems to be struggling with the context of the categories. For example,
      in Example #1, the model correctly listed vitamins but included more than what
      the user expected. In Example #2, the model listed minerals in the context of
      geology, while the user was expecting minerals in the context of nutrition.\n\n##
      Suggested Changes\n\nThe prompt could be made more specific to guide the model
      towards the correct context. For instance, if the categories are related to
      nutrition, the prompt could specify that. However, without knowing the context
      in advance, it''s challenging to make the prompt more specific.\n\nA possible
      solution could be to ask the user to provide more context in their input. The
      prompt could be changed to something like: \"Given a category and its context,
      provide a list of items that belong to this category. Do not provide definitions
      or explanations, just list the items.\"\n\nThis way, the user could specify
      whether they want minerals in the context of geology or nutrition, for example.
      This should help the model make more accurate predictions."}, {"role": "user",
      "content": "\nNow please carefully review your reasoning in Step 1 and help
      with Step 2: refining the prompt.\n\n## Current prompt\n\"Given a category,
      provide a list of items that belong to this category. Do not provide definitions
      or explanations, just list the items.\"\n\n## Follow this guidance to refine
      the prompt:\n\n1. The new prompt should should describe the task precisely,
      and address the points raised in the user feedback.\n\n2. The new prompt should
      be similar to the current prompt, and only differ in the parts that address
      the issues you identified in Step 1.\n    Example:\n    - Current prompt: \"Generate
      a summary of the input text.\"\n    - New prompt: \"Generate a summary of the
      input text. Pay attention to the original style.\"\n\n3. Reply only with the
      new prompt. Do not include input and output templates in the prompt.\n"}], "model":
      "gpt-4", "max_tokens": 1000, "temperature": 0.0}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '4820'
      content-type:
      - application/json
      cookie:
      - __cf_bm=0eu0BBz711fZCOXhxTDxESJNG29g.uAbkhAA7CsmbJE-1721934913-1.0.1.1-.jY4avCpWhV75BtigNk1YZ8rPbVJCZFuqEqfDC1IUS6kockRrQ9WamOU9yzMd78nBCSg6.eq55FeppPNAsxqqQ;
        _cfuvid=gQityNIU1uJ0DeTuEMImrNr2QeTc4gMhNl2e4XArkAM-1721934913284-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA1RRwY7aMBS85ytGPgcEC+wKbpXY7p7aQ3uo1K2QcR6JqePn2o9t0Ip/r5xAUC+W
        PPNmPJ73UQDKVmoDZRotpg1usubz85et255f98/H+PLa/TCfPi++rf50X7tGlVnB+yMZuammhtvg
        SCz7gTaRtFB2nT89zNeL5Xq16omWK3JZVgeZLCezx/niqmjYGkpqg58FAHz0Z87mK+rUBrPyhrSU
        kq5JbcYhQEV2GVE6JZtEe1HlnTTshXwf90292Hfy0DBaqOZ4hvYVrCT0U52UCJHfbUXQcDYJ+AAr
        1CZIowV7cuxrCEMam0aXKb43dLPAX+scGnIB1qMmT1GL9TU0Wo4EbcwpaqHef4otw7OMz1Z0sN7m
        MhM4grrgtNf9vcTxlGSIJQ0NuaZvSl3/ehlLclyHyPtcqD85N+LZOjW7SDqxz4Uk4TDILwXwq1/G
        6b9+VYjcBtkJ/yafDdePT4Ofuu/9zi4frqSwaHfH57PZurhGVOmchNrdwfqaYoi2X04OWlyKfwAA
        AP//AwBkrw1tkwIAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8a8e7b3c489794e8-LIS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Thu, 25 Jul 2024 19:15:57 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '2629'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '1000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '997889'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 126ms
      x-request-id:
      - req_ab9dbab7910133dcc76990b5060ec2e5
    status:
      code: 200
      message: OK
version: 1
