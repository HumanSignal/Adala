interactions:
- request:
    body: '{"messages": [{"role": "user", "content": "Hey, how''s it going?"}], "model":
      "gpt-4", "max_tokens": 10}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '103'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA1SQQU8CMRCF7/srxl64gNldiMheMQYuxhg1GmNI6c7uFrvTpR0SDOG/m5YV9NLD
        e31vvplDAiB0KQoQqpGs2s6MZtvt/fzu7bl+fdkslinR44Ov9k/TfO7fSQxDwq43qPg3da1s2xlk
        bXtbOZSMoTWb5vn4Np1laTRaW6IJsbrj0WSU3mTjPtFYrdCLAj4SAIBDfAMblbgXBcR8VFr0XtYo
        ivMnAOGsCYqQ3mvPklgML6ayxEgRd4HG2CtYDlqQBNKxrrTS0oAmRmN0jaQQJJVQWhqw6EuO5+nG
        1p2z60BKO2POeqVJ+2blUHpLYZJBqrk5FRwTgM+45+4fuuicbTtesf1CCpXZ5FQoLhf9Y/Y3EGxZ
        moueT5KeUPhvz9iuKk01us7puHTgTI7JDwAAAP//AwA341Xd6wEAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8ab902d21df7873b-ORD
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 30 Jul 2024 23:08:31 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=Ak_IlKcLi2XLOhncnn2FSFXMQ0m52aFPhmS.ATiCxDI-1722380911-1.0.1.1-JzC2eOjXKtTIfLSVC5aF1xbgCsWrRVqO.y_3jKaC7MVq.iiU.K6MbFv69V2EVOqVeGWrKOE6cxjyC_AQ92DPCQ;
        path=/; expires=Tue, 30-Jul-24 23:38:31 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=3k4lHZfeYRLuPmhZjt3kGZw3ZYtMj3lvxz1ICdBd7_o-1722380911385-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '679'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '1000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '999984'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_5d7d094fc2a436d620b807c14d379188
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "user", "content": "Hey, how''s it going?"}], "model":
      "gpt-3.5-turbo", "max_tokens": 10}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '111'
      content-type:
      - application/json
      cookie:
      - __cf_bm=Ak_IlKcLi2XLOhncnn2FSFXMQ0m52aFPhmS.ATiCxDI-1722380911-1.0.1.1-JzC2eOjXKtTIfLSVC5aF1xbgCsWrRVqO.y_3jKaC7MVq.iiU.K6MbFv69V2EVOqVeGWrKOE6cxjyC_AQ92DPCQ;
        _cfuvid=3k4lHZfeYRLuPmhZjt3kGZw3ZYtMj3lvxz1ICdBd7_o-1722380911385-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA1SQzU7DMBCE73mKxRcuSdUkraA5ogqBhFQJBBeEKjfdJi6217U3UFT13ZHTP7j4
        MOMZf+NdAiDUUlQg6lZybZzOJpvN/bRr1Nf27Xs6e1WYF0+lKWfh2d+9iDQmaLHGmk+pQU3GaWRF
        9mDXHiVjbM1viqK8HU7yvDcMLVHHWOM4KwfjjDu/oGyYF+NjsiVVYxAVvCcAALv+jIx2iVtRwTA9
        KQZDkA2K6nwJQHjSUREyBBVYWhbpxazJMtoe+wG1pit4vDaw7gKDhLihY/TgPDVemhQCiWN2f35U
        U+M8LSKg7bQ+6ytlVWjnHmUgGx/QaBtuDwX7BOCjn9f9IxbOk3E8Z/pEGyvz0aFQXD70j3mcLphY
        6otejJIjoQg/gdHMV8o26J1X/dbImeyTXwAAAP//AwBJY2ij6gEAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8ab902d89809873b-ORD
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 30 Jul 2024 23:08:31 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '155'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '50000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '49999983'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 0s
      x-request-id:
      - req_d29e58cf458b71cfa43c63beadf06338
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "..."}, {"role": "user", "content":
      "Input: Macronutrients"}], "model": "gpt-3.5-turbo", "max_tokens": 1000, "seed":
      47, "temperature": 0.0, "tool_choice": {"type": "function", "function": {"name":
      "Output"}}, "tools": [{"type": "function", "function": {"name": "Output", "description":
      "Correctly extracted `Output` with all the required parameters with correct
      types", "parameters": {"properties": {"skill_0": {"description": "Output:",
      "title": "Skill 0", "type": "string"}}, "required": ["skill_0"], "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '569'
      content-type:
      - application/json
      cookie:
      - __cf_bm=Ak_IlKcLi2XLOhncnn2FSFXMQ0m52aFPhmS.ATiCxDI-1722380911-1.0.1.1-JzC2eOjXKtTIfLSVC5aF1xbgCsWrRVqO.y_3jKaC7MVq.iiU.K6MbFv69V2EVOqVeGWrKOE6cxjyC_AQ92DPCQ;
        _cfuvid=3k4lHZfeYRLuPmhZjt3kGZw3ZYtMj3lvxz1ICdBd7_o-1722380911385-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//bFJNj9owEL3nV4x8BkRC0bI5Viqlq1ZdrfZQqawi4wyJF39hj9tFiP9e
        OWEJi+qDNZ43783TeI4ZAJM1K4GJlpPQTo3v9/vll0fzfbVc6cKrb2b5+utp0cbl3s09GyWG3byi
        oHfWRFjtFJK0poeFR06YVPO7opgtpvd50QHa1qgSrXE0nk3mY4p+Y8fTvJifma2VAgMr4XcGAHDs
        7uTR1PjGSpiO3jMaQ+ANsvJSBMC8VSnDeAgyEDfERgMorCE0ybaJSl0BZK2qBFdqaNyf41U8DIor
        VW0e49dPDwH/6vapePgs8nq3Mvu356t+vfTBdYa20YjLgK7wS768aQbADNcd92ckF+mGCcC4b6JG
        Q8k1O65Z2EmlqumalWv2gwtvTSQvUwFwjzC8qOUEzts/skYQXFkvMYD1gAZ9c5jAc4uHnoNYYw3S
        gOK+QeDaxk7PpKRQsRPwG9seas8JwyjpEkoTRl3RllOYrNmJfTB/yv4Xv5yj0+WPlW2ct5tw82Vs
        K40MbeWRh250LJB1fYsk99LtUvywHsx5qx1VZHdokuDdopdjw/YO4Gx2BskSV0M+z/PsbJCFQyDU
        1VaaBr3z8rJZ2Sn7BwAA//8DAOfQdPtYAwAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8ab902dc0cc5873b-ORD
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 30 Jul 2024 23:08:32 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '434'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '50000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '49998992'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 1ms
      x-request-id:
      - req_d87aee2e701cab5ab95a44cad93a9b88
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "..."}, {"role": "user", "content":
      "Input: Vitamins"}], "model": "gpt-3.5-turbo", "max_tokens": 1000, "seed": 47,
      "temperature": 0.0, "tool_choice": {"type": "function", "function": {"name":
      "Output"}}, "tools": [{"type": "function", "function": {"name": "Output", "description":
      "Correctly extracted `Output` with all the required parameters with correct
      types", "parameters": {"properties": {"skill_0": {"description": "Output:",
      "title": "Skill 0", "type": "string"}}, "required": ["skill_0"], "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '563'
      content-type:
      - application/json
      cookie:
      - __cf_bm=Ak_IlKcLi2XLOhncnn2FSFXMQ0m52aFPhmS.ATiCxDI-1722380911-1.0.1.1-JzC2eOjXKtTIfLSVC5aF1xbgCsWrRVqO.y_3jKaC7MVq.iiU.K6MbFv69V2EVOqVeGWrKOE6cxjyC_AQ92DPCQ;
        _cfuvid=3k4lHZfeYRLuPmhZjt3kGZw3ZYtMj3lvxz1ICdBd7_o-1722380911385-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA2xTUWvbQAx+z68Q97SBE+KENGvemjVj0MFgjI5tKUE5y/G159P1Tm6bhvz3YTuJ
        0zI/2OL79H0SsrTrASiTqRkoXaDo0tv+5ePjl8V1+vtiituivLrK72++/rr1mz/P29dbldQKXt+T
        lqNqoLn0lsSwa2kdCIVq13Q6Go0/DS/TUUOUnJGtZRsv/fFg0pcqrLk/TEeTg7JgoymqGfztAQDs
        mnfdo8voRc1gmByRkmLEDanZKQlABbY1ojBGEwWdqKQjNTshV7ftKmvPCGG2K43WdoXbZ3cWd4NC
        a1eTdMGvTziv7scvOuKr+5EPJ4v47axea731TUN55fRpQGf8CZ+9KwagHJaN9nslvpJ3SgCFYVOV
        5KTuWu2WKj4Ya1fDpZot1a0RLI2LgIGAYiQnBi24SoKpJSAFCmy5CrDmbAuOKItgHMQSrQUsuWqy
        GJ45PIAP7CnY7QB+FhSocU3HZ8ZPh3oJGKdtlRm3OWFwlcDnBK4TWCRwkwC6DKQgmHcZH6QwdUQJ
        BLPm3OKTcQk4g7r+enTCUpAzGlCbLIG1YamZ+UUC83TUmuZsUejjABaoi6M5FBghetImNxqO846N
        YE2OciMRcg7tMApCK8Vgqfbqzbj3vf/Fd4dof9pKyxsfeB3fLZnKjTOxWAXC2PxsFYV9W6K2u2u2
        v3qz0MoHLr2shB/I1YbTaWununvryMvDZShhQdvh6cW0d2hQxW0UKle5cRsKPpjTLfT2vX8AAAD/
        /wMAL03j4AoEAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8ab902e0abf1873b-ORD
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 30 Jul 2024 23:08:34 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '1090'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '50000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '49998992'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 1ms
      x-request-id:
      - req_8b6705b2e147bd7c54f491cac296eb1a
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "..."}, {"role": "user", "content":
      "Input: Minerals"}], "model": "gpt-3.5-turbo", "max_tokens": 1000, "seed": 47,
      "temperature": 0.0, "tool_choice": {"type": "function", "function": {"name":
      "Output"}}, "tools": [{"type": "function", "function": {"name": "Output", "description":
      "Correctly extracted `Output` with all the required parameters with correct
      types", "parameters": {"properties": {"skill_0": {"description": "Output:",
      "title": "Skill 0", "type": "string"}}, "required": ["skill_0"], "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '563'
      content-type:
      - application/json
      cookie:
      - __cf_bm=Ak_IlKcLi2XLOhncnn2FSFXMQ0m52aFPhmS.ATiCxDI-1722380911-1.0.1.1-JzC2eOjXKtTIfLSVC5aF1xbgCsWrRVqO.y_3jKaC7MVq.iiU.K6MbFv69V2EVOqVeGWrKOE6cxjyC_AQ92DPCQ;
        _cfuvid=3k4lHZfeYRLuPmhZjt3kGZw3ZYtMj3lvxz1ICdBd7_o-1722380911385-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA2xSwW4aQQy971dYPgOCBZqwx1RqmkoVFceWaDXMmmXC7Mxm7GkDiH+vdiEsQZnD
        yPLze36yfUgA0BSYAeqNEl3Vtj97ff32yOPF4uX702/1z8+3PJ9O9l8f3n4UJfYahl+9kJZ31kD7
        qrYkxrsTrAMpoUZ1dJem4/vhbDRpgcoXZBtaWUt/PJj2JYaV7w9H6fTM3HijiTGDPwkAwKH9G4+u
        oDfMYNh7z1TErErC7FIEgMHbJoOK2bAoJ9jrQO2dkGtsu2jtFSDe21wra7vGp3e4irtBKWvz/TjO
        fi3MPo2Pe0pDPXuY7MKYn676naR3dWtoHZ2+DOgKv+Szm2YA6FTVcudR6ig3TABUoYwVOWlc42GJ
        vDXW5sMlZkv8aRwFZRlUIHBKYlDW7sBrHUMwrgSOq2ZAmhhko6StY29NAcoVsFF/CRTosGNR1hpH
        wBKilhhosMQjfvByTD6Ln8/R8bIy68s6+BXfbADXxhne5IEUt5NAFl+fWjRyz+1pxA/bxjr4qpZc
        /JZcI3j35SSH3TF2YJqeQfGibJef3Sdnf8g7FqrytXElhTqYy50kx+Q/AAAA//8DAEFeS0ImAwAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8ab902eadb47873b-ORD
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 30 Jul 2024 23:08:34 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '340'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '50000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '49998992'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 1ms
      x-request-id:
      - req_1deb575f94a2d65b54c42dca8057fa49
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "..."}, {"role": "user", "content":
      "Input: Macronutrients are nutrients that provide calories or energy. They are
      needed in large amounts and include carbohydrates, proteins, and fats."}], "model":
      "gpt-3.5-turbo", "max_tokens": 1000, "seed": 47, "temperature": 0.0, "tool_choice":
      {"type": "function", "function": {"name": "Output"}}, "tools": [{"type": "function",
      "function": {"name": "Output", "description": "Correctly extracted `Output`
      with all the required parameters with correct types", "parameters": {"properties":
      {"skill_1": {"description": "Output:", "title": "Skill 1", "type": "string"}},
      "required": ["skill_1"], "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '696'
      content-type:
      - application/json
      cookie:
      - __cf_bm=Ak_IlKcLi2XLOhncnn2FSFXMQ0m52aFPhmS.ATiCxDI-1722380911-1.0.1.1-JzC2eOjXKtTIfLSVC5aF1xbgCsWrRVqO.y_3jKaC7MVq.iiU.K6MbFv69V2EVOqVeGWrKOE6cxjyC_AQ92DPCQ;
        _cfuvid=3k4lHZfeYRLuPmhZjt3kGZw3ZYtMj3lvxz1ICdBd7_o-1722380911385-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA2xSwY7aMBC95ytGcwZECOmW3LZqEVqp20OrXsoqMs6QeNexjT1ulyL+vUpgCYvq
        gzWa5/fmeWYOCQCqCgtA2QiWrdPjxW63XNFqmdFO5tnDZ7NYhOfNzyU9itcHHHUMu3kmyW+sibSt
        08TKmhMsPQmmTjW9m82yj9NFmvdAayvSHa12PM4m+Zij39jxNJ3lZ2ZjlaSABfxKAAAO/d15NBW9
        YgHT0VumpRBETVhcHgGgt7rLoAhBBRaGcTSA0hom09k2UesrgK3VpRRaD4VP53AVD40SWpef7u/b
        D9/945d5qP6slvO8+bvgOx+v6p2k9643tI1GXhp0hV/yxU0xADSi7bnfIrvIN0wAFL6OLRnuXONh
        jeFFaV2mayzW+FVIb01kr7oHIDwBhUCGldAw5LkRDM7b36oikEJbryiA9UCGfL0HYaqe62kXlacK
        lAEtfE2wi8KwYkVhAj8a2oMyUsdexW9ss6+8YAqjTpxJmTDqtbaCw2SNR3z3l2Pyv/jpHB0vI9e2
        dt5uws0EcauMCk3pSYS+kxjYulOJTu6pX634blvQeds6Ltm+kOkE02l60sNhmwc0m59Btiz0FSvL
        k7NDDPvA1JZbZWryzqvLpiXH5B8AAAD//wMAxokwV2gDAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8ab902f00bb8873b-ORD
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 30 Jul 2024 23:08:35 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '395'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '50000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '49998959'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 1ms
      x-request-id:
      - req_f8b99507cff1e51e7282772d39ab8703
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "..."}, {"role": "user", "content":
      "Input: Vitamins are essential nutrients that your body needs in small amounts
      to work properly. There are 13 essential vitamins, including vitamins A, C,
      D, E, K, and the B vitamins (thiamine, riboflavin, niacin, pantothenic acid,
      biotin, B6, B12, and folate). Each vitamin has specific functions and benefits
      for your health."}], "model": "gpt-3.5-turbo", "max_tokens": 1000, "seed": 47,
      "temperature": 0.0, "tool_choice": {"type": "function", "function": {"name":
      "Output"}}, "tools": [{"type": "function", "function": {"name": "Output", "description":
      "Correctly extracted `Output` with all the required parameters with correct
      types", "parameters": {"properties": {"skill_1": {"description": "Output:",
      "title": "Skill 1", "type": "string"}}, "required": ["skill_1"], "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '874'
      content-type:
      - application/json
      cookie:
      - __cf_bm=Ak_IlKcLi2XLOhncnn2FSFXMQ0m52aFPhmS.ATiCxDI-1722380911-1.0.1.1-JzC2eOjXKtTIfLSVC5aF1xbgCsWrRVqO.y_3jKaC7MVq.iiU.K6MbFv69V2EVOqVeGWrKOE6cxjyC_AQ92DPCQ;
        _cfuvid=3k4lHZfeYRLuPmhZjt3kGZw3ZYtMj3lvxz1ICdBd7_o-1722380911385-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//bFNNb9swDL3nVxA6bYASxOlncmu6FC2Gdlu3roelCGSZttTKkirRbbMg
        /32wncRpMR9s4j2+R4ImVz0ApjM2ASaVIFl60x8/P19cXU7v70I4ubwd52+3SvmzC3ke/36/YbxW
        uPQRJW1VA+lKb5C0sy0tAwrC2jU5GY0OTofj5LghSpehqWWFp/7B4KhPVUhdf5iMjjZK5bTEyCbw
        pwcAsGredY82wzc2gSHfIiXGKApkk10SAAvO1AgTMepIwhLjHSmdJbR127YyZo8g58xCCmO6wu2z
        2ou7QQljFrNr+fPmcnj4+jy7omu6u0fzoziPj3v1WuulbxrKKyt3A9rjd/jkQzEAZkXZaL9V5Cv6
        oARgIhRViZbqrtlqzuKTNmaRzNlkzn5rEqW2EURAwBjRkhYGbEVB1xIgJQiWrgqQumwJFjGLoC3E
        UhgDonRVk+Xg1YUn8MF5DGY5gF8KAzauycGe8cumHgdtpakybYsdBmcczjl84TDj8JWDsBmQQph2
        GZ9I6TpCDkGnLjfiRVsOVgtZf72w5Eih1RKE1BmHVDuqmekxh2kyak1zZwTh5wHMhFRbc1AiQvQo
        da4lbOcdG0GKFnNNEXIX2mEoFIbUYM7W7N24173/xQ+baL3bSuMKH1waPywZy7XVUS0Citj8bBbJ
        +bZEbffQbH/1bqGZD670tCD3hLY2TI5OWz/WHVzHjjenwciRMB0+OjztbTpkcRkJy0WubYHBB707
        ht669w8AAP//AwDowC21CwQAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8ab902f50b7a873b-ORD
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 30 Jul 2024 23:08:37 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '852'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '50000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '49998914'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 1ms
      x-request-id:
      - req_99ac99d0ddbb6d75fde04353ab695bf2
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "..."}, {"role": "user", "content":
      "Input: Minerals are naturally occurring substances that are solid and have
      a crystalline structure."}], "model": "gpt-3.5-turbo", "max_tokens": 1000, "seed":
      47, "temperature": 0.0, "tool_choice": {"type": "function", "function": {"name":
      "Output"}}, "tools": [{"type": "function", "function": {"name": "Output", "description":
      "Correctly extracted `Output` with all the required parameters with correct
      types", "parameters": {"properties": {"skill_1": {"description": "Output:",
      "title": "Skill 1", "type": "string"}}, "required": ["skill_1"], "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '647'
      content-type:
      - application/json
      cookie:
      - __cf_bm=Ak_IlKcLi2XLOhncnn2FSFXMQ0m52aFPhmS.ATiCxDI-1722380911-1.0.1.1-JzC2eOjXKtTIfLSVC5aF1xbgCsWrRVqO.y_3jKaC7MVq.iiU.K6MbFv69V2EVOqVeGWrKOE6cxjyC_AQ92DPCQ;
        _cfuvid=3k4lHZfeYRLuPmhZjt3kGZw3ZYtMj3lvxz1ICdBd7_o-1722380911385-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA2xSy07DMBC85yusPbeoD6qmOVYIEBUqHDhRFLnuNjX4VXuDgKr/jpymSajwwVrt
        eHZHMz4kjIHcQMZA7DgJ7VR/tt/fPnwubtLBhPz79OVe3JmNXlgsysJBLzLs+h0FnVlXwmqnkKQ1
        J1h45IRx6nA6Go3TwWw4rQBtN6girXDUH19N+lT6te0PhqNJzdxZKTBAxl4Txhg7VHfUaDb4BRkb
        9M4djSHwAiFrHjEG3qrYAR6CDMQNQa8FhTWEJso2pVIdgKxVueBKtYtP59CpW6O4UvlYze+vb80T
        x0X6PBrP9c9yOd/frTv7TqO/XSVoWxrRGNTBm352sYwxMFxX3GVJrqQLJmPAfVFqNBRVw2EF4UMq
        lQ9XkK3gURr0XIUVHOEP75j8V7/V1bGxV9nCebsOF27BVhoZdrlHHirVEMi604o47q2KsfyTDDhv
        taOc7AeaOHBWpwjtx2nBtMbIElcdTprU8iB8B0Kdb6Up0Dsvm0iTY/ILAAD//wMA3GF5atECAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8ab902fccf0f873b-ORD
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 30 Jul 2024 23:08:37 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '182'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '50000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '49998971'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 1ms
      x-request-id:
      - req_ad82a6d4b3a479ccd918d8a53ddd5179
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "You are a helpful assistant."},
      {"role": "user", "content": "\nA prompt is a text paragraph that outlines the
      expected actions and instructs the large language model (LLM) to generate a
      specific output. This prompt is concatenated with the input text, and the model
      then creates the required output.\nThis describes the full template how the
      prompt is concatenated with the input to produce the output:\n\n```\n\n{prompt}\nInput:
      {category}\nOutput: {skill_0}\n```\n\nHere:\n- \"Input: {category}\" is input
      template,\n- \"{prompt}\" is the LLM prompt,\n- \"Output: {skill_0}\" is the
      output template.\n\nModel can produce erroneous output if a prompt is not well
      defined. In our collaboration, we\u2019ll work together to refine a prompt.
      The process consists of two main steps:\n\n## Step 1\nI will provide you with
      the current prompt along with prediction examples. Each example contains the
      input text, the final prediction produced by the model, and the user feedback.
      User feedback indicates whether the model prediction is correct or not. Your
      task is to analyze the examples and user feedback, determining whether the existing
      instruction is describing the task reflected by these examples precisely, and
      suggests changes to the prompt to address the incorrect predictions.\n\n## Step
      2\nNext, you will carefully review your reasoning in step 1, integrate the insights
      to refine the prompt, and provide me with the new prompt that improves the model\u2019s
      performance."}, {"role": "assistant", "content": "Sure, I\u2019d be happy to
      help you with this prompt engineering problem. Please provide me with the current
      prompt and the examples with user feedback."}, {"role": "user", "content": "\n##
      Current prompt\n...\n\n## Examples\n### Example #0\n\nInput: Macronutrients\n\nOutput:
      Macronutrients are nutrients that provide calories or energy. They are needed
      in large amounts and include carbohydrates, proteins, and fats.\n\nUser feedback:
      Prediction is incorrect. Correct answer: \"Carbohydrates, Proteins, Fats\"\n\n\n###
      Example #1\n\nInput: Vitamins\n\nOutput: Vitamins are essential nutrients that
      your body needs in small amounts to work properly. There are 13 essential vitamins,
      including vitamins A, C, D, E, K, and the B vitamins (thiamine, riboflavin,
      niacin, pantothenic acid, biotin, B6, B12, and folate). Each vitamin has specific
      functions and benefits for your health.\n\nUser feedback: Prediction is incorrect.
      Correct answer: \"Vitamin A, Vitamin C, Vitamin D\"\n\n\n### Example #2\n\nInput:
      Minerals\n\nOutput: Minerals are naturally occurring substances that are solid
      and have a crystalline structure.\n\nUser feedback: Prediction is incorrect.
      Correct answer: \"Calcium, Iron, Magnesium\"\n\n\n\nSummarize your analysis
      about incorrect predictions and suggest changes to the prompt."}], "model":
      "gpt-4", "max_tokens": 1000, "seed": 47, "temperature": 0.0}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '2935'
      content-type:
      - application/json
      cookie:
      - __cf_bm=Ak_IlKcLi2XLOhncnn2FSFXMQ0m52aFPhmS.ATiCxDI-1722380911-1.0.1.1-JzC2eOjXKtTIfLSVC5aF1xbgCsWrRVqO.y_3jKaC7MVq.iiU.K6MbFv69V2EVOqVeGWrKOE6cxjyC_AQ92DPCQ;
        _cfuvid=3k4lHZfeYRLuPmhZjt3kGZw3ZYtMj3lvxz1ICdBd7_o-1722380911385-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA3xUS0/bQBC+51eMNoe2komSQAnkVlGhtiqnItqqqdDGHtvTrGfNzhhIEf+9Wjtx
        EhVx8WHn8T1mPE8DAEOZmYNJS6tpVbuj87u7yy+TG/cz/1if6PiT1svvn1ens2byo/hrkljhl38w
        1W3VKPVV7VDJcxdOA1rF2HUym06Pz8bnk1kbqHyGLpYVtR6dHI1PJ8ebitJTimLm8GsAAPDUfiM3
        zvDRzGGcbF8qFLEFmnmfBGCCd/HFWBEStawm2QVTz4rc0h0O4QNbtxaSBV8GX4GWCPhoowCBOvh7
        yjBLgBQEsRLQ0mqb1HIH2iYRF5ChWnKYQYaSBqqjAwI+b/OJ60YhtYqFD4QCb69sGjw3GghZJYEb
        UlsRSwJXxBisk3cQrJYYIiqDI9EI09PzOZBGUg+kJTFo6QX3IEZwXSI0ggFyxGxp0xUQZxQzdkrW
        8IAhiq4xbfvbFil275F6gL79OgH2CnZf61bqNgVIBV0+WvCCh0P41hQFimIGF6XlAmXBkV8dfFUr
        MGImoB6W0duOkKOUFIiBWDQ0Hb2d+eo7pi/RLOgeuWcygosmBGR166QNb0BJWhW7OS8bhaUVzMDz
        DumNQECpPQvK/i60ZIkVQx2wJ6dWVmD3FyO6lBNTZ1J4ybOD9ViPIHq2546UvnFZhAt4T5Gfekgd
        2uDWvTuH1mxEvbYu/8Ne+tC2s5zigVPpFl98hbG8AEcrnMPCfI0z0DLgS1jtluXWuVeGszBwXZLA
        Q4tRNJH1gZQC4/+g3WuGQiEOqNG60ZHZ/NjP/UVwvqiDX8brwY1z/XucgJS3Aa14jn+/qK+78ucB
        wO/28jQHx8R06m/Vr5Bjw/dn066f2R25XXRytrlLRr1atwvMTqeDDUUja1GsbnPiIu4NtZcoEh08
        D/4BAAD//wMATp63zYAFAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8ab903001c0c873b-ORD
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 30 Jul 2024 23:08:46 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '8244'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '1000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '998336'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 99ms
      x-request-id:
      - req_b422315bb7606dfc8fe726697bae47d8
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "You are a helpful assistant."},
      {"role": "user", "content": "\nA prompt is a text paragraph that outlines the
      expected actions and instructs the large language model (LLM) to generate a
      specific output. This prompt is concatenated with the input text, and the model
      then creates the required output.\nThis describes the full template how the
      prompt is concatenated with the input to produce the output:\n\n```\n\n{prompt}\nInput:
      {category}\nOutput: {skill_0}\n```\n\nHere:\n- \"Input: {category}\" is input
      template,\n- \"{prompt}\" is the LLM prompt,\n- \"Output: {skill_0}\" is the
      output template.\n\nModel can produce erroneous output if a prompt is not well
      defined. In our collaboration, we\u2019ll work together to refine a prompt.
      The process consists of two main steps:\n\n## Step 1\nI will provide you with
      the current prompt along with prediction examples. Each example contains the
      input text, the final prediction produced by the model, and the user feedback.
      User feedback indicates whether the model prediction is correct or not. Your
      task is to analyze the examples and user feedback, determining whether the existing
      instruction is describing the task reflected by these examples precisely, and
      suggests changes to the prompt to address the incorrect predictions.\n\n## Step
      2\nNext, you will carefully review your reasoning in step 1, integrate the insights
      to refine the prompt, and provide me with the new prompt that improves the model\u2019s
      performance."}, {"role": "assistant", "content": "Sure, I\u2019d be happy to
      help you with this prompt engineering problem. Please provide me with the current
      prompt and the examples with user feedback."}, {"role": "user", "content": "\n##
      Current prompt\n...\n\n## Examples\n### Example #0\n\nInput: Macronutrients\n\nOutput:
      Macronutrients are nutrients that provide calories or energy. They are needed
      in large amounts and include carbohydrates, proteins, and fats.\n\nUser feedback:
      Prediction is incorrect. Correct answer: \"Carbohydrates, Proteins, Fats\"\n\n\n###
      Example #1\n\nInput: Vitamins\n\nOutput: Vitamins are essential nutrients that
      your body needs in small amounts to work properly. There are 13 essential vitamins,
      including vitamins A, C, D, E, K, and the B vitamins (thiamine, riboflavin,
      niacin, pantothenic acid, biotin, B6, B12, and folate). Each vitamin has specific
      functions and benefits for your health.\n\nUser feedback: Prediction is incorrect.
      Correct answer: \"Vitamin A, Vitamin C, Vitamin D\"\n\n\n### Example #2\n\nInput:
      Minerals\n\nOutput: Minerals are naturally occurring substances that are solid
      and have a crystalline structure.\n\nUser feedback: Prediction is incorrect.
      Correct answer: \"Calcium, Iron, Magnesium\"\n\n\n\nSummarize your analysis
      about incorrect predictions and suggest changes to the prompt."}, {"role": "assistant",
      "content": "## Analysis\nFrom the examples provided, it seems that the model
      is providing detailed descriptions of the input categories (Macronutrients,
      Vitamins, Minerals) rather than listing examples of items within those categories.
      The user feedback indicates that they were expecting a list of examples within
      the category, not a description of the category itself.\n\n## Suggested Changes\nThe
      prompt needs to be more explicit in instructing the model to list examples within
      the given category. Currently, the prompt is not provided, but based on the
      model''s responses, it seems to be interpreting the task as providing a definition
      or description of the input category. \n\nThe prompt should be revised to clearly
      instruct the model to provide examples of items within the input category. For
      instance, the prompt could be something like: \"List three examples of items
      that fall within the given category.\" This would guide the model to generate
      the desired output."}, {"role": "user", "content": "\nNow please carefully review
      your reasoning in Step 1 and help with Step 2: refining the prompt.\n\n## Current
      prompt\n...\n\n## Follow this guidance to refine the prompt:\n\n1. The new prompt
      should should describe the task precisely, and address the points raised in
      the user feedback.\n\n2. The new prompt should be similar to the current prompt,
      and only differ in the parts that address the issues you identified in Step
      1.\n    Example:\n    - Current prompt: \"Generate a summary of the input text.\"\n    -
      New prompt: \"Generate a summary of the input text. Pay attention to the original
      style.\"\n\n3. Reply only with the new prompt. Do not include input and output
      templates in the prompt.\n"}], "model": "gpt-4", "max_tokens": 1000, "seed":
      47, "temperature": 0.0}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '4672'
      content-type:
      - application/json
      cookie:
      - __cf_bm=Ak_IlKcLi2XLOhncnn2FSFXMQ0m52aFPhmS.ATiCxDI-1722380911-1.0.1.1-JzC2eOjXKtTIfLSVC5aF1xbgCsWrRVqO.y_3jKaC7MVq.iiU.K6MbFv69V2EVOqVeGWrKOE6cxjyC_AQ92DPCQ;
        _cfuvid=3k4lHZfeYRLuPmhZjt3kGZw3ZYtMj3lvxz1ICdBd7_o-1722380911385-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA1SQQU8CMRSE7/srXnpeyC4QlL1pol7QGI0XxZBSHttCt+22D4QQ/rvpsix66WGm
        32TmHRMAppasACYkJ1E53ZvU9eP79G70vHt4fVO+Xr9MP+T9RtFnvShZGgm7WKOgC9UXtnIaSVlz
        toVHThhT85vBYHibTQbjxqjsEnXESke9US8b58OWkFYJDKyArwQA4Ni8sZtZ4p4VkKUXpcIQeIms
        6D4BMG91VBgPQQXihlh6NYU1hKapO2NPaocGOAhOWFp/SEGrQEDSIwLueVwSgCQnWHGt4UeRVAZI
        qtAx/Rljbfyp66Vt6bxdxA1mq3Wnr5RRQc498mBN7BDIujN+SgC+m/3bf5OY87ZyNCe7QRMDJ/n4
        nMeup766+ag1yRLXf6hhlrQNWTgEwmq+UqZE77xqzhF7JqfkFwAA//8DAPPR32QFAgAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8ab903353fc3873b-ORD
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 30 Jul 2024 23:08:47 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '953'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '1000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '997925'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 124ms
      x-request-id:
      - req_2593efbf72388e6c6e91701a10ffc6ac
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "\"Given a category, list three
      examples that fall within this category.\""}, {"role": "user", "content": "Input:
      Macronutrients"}], "model": "gpt-3.5-turbo", "max_tokens": 1000, "seed": 47,
      "temperature": 0.0, "tool_choice": {"type": "function", "function": {"name":
      "Output"}}, "tools": [{"type": "function", "function": {"name": "Output", "description":
      "Correctly extracted `Output` with all the required parameters with correct
      types", "parameters": {"properties": {"skill_0": {"description": "Output:",
      "title": "Skill 0", "type": "string"}}, "required": ["skill_0"], "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '639'
      content-type:
      - application/json
      cookie:
      - __cf_bm=Ak_IlKcLi2XLOhncnn2FSFXMQ0m52aFPhmS.ATiCxDI-1722380911-1.0.1.1-JzC2eOjXKtTIfLSVC5aF1xbgCsWrRVqO.y_3jKaC7MVq.iiU.K6MbFv69V2EVOqVeGWrKOE6cxjyC_AQ92DPCQ;
        _cfuvid=3k4lHZfeYRLuPmhZjt3kGZw3ZYtMj3lvxz1ICdBd7_o-1722380911385-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA2xS32/aMBB+z19h3XOoQlBHyds6QdeHiVZi2sqoIuMcwatju/ZFK0P875MTmqRo
        ebBO9/n74bscI8ZAFpAxEHtOorJqNHt9XaxW5c9HvV7fL24xWf54usH7t+93pawhDgyz/Y2C3llX
        wlRWIUmjW1g45IRBdTxN08lNMkunDVCZAlWglZZGk6vrEdVua0bJOL0+M/dGCvSQsV8RY4wdmzNk
        1AW+QcaS+L1Tofe8RMi6S4yBMyp0gHsvPXFNEPegMJpQh9i6VmoAkDEqF1yp3rj9joO6HxRXKp+v
        lnfrP0+Pmn9O57eTr/Zv8VDOvx0Gfq30wTaBdrUW3YAGeNfPLswYA82rhrusydZ0wWQMuCvrCjWF
        1HDcgH+RSuXJBrINPDhDKLWP2RfutmZ/KBwn9DFbcPIbOMEHsVP0v/r5XJ26mStTWme2/mKEsJNa
        +n3ukPvmKeDJ2NYiyD03u60/rAusM5WlnMwL6iA4G7dy0P9NPTj+dAbJEFeDfjKNzgHBHzxhle+k
        LtFZJ7tNR6foHwAAAP//AwC5l91o6AIAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8ab9033d7d5b873b-ORD
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 30 Jul 2024 23:08:48 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '227'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '50000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '49998975'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 1ms
      x-request-id:
      - req_7c31021d0c93a3d879fc4a6d0b64b769
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "\"Given a category, list three
      examples that fall within this category.\""}, {"role": "user", "content": "Input:
      Vitamins"}], "model": "gpt-3.5-turbo", "max_tokens": 1000, "seed": 47, "temperature":
      0.0, "tool_choice": {"type": "function", "function": {"name": "Output"}}, "tools":
      [{"type": "function", "function": {"name": "Output", "description": "Correctly
      extracted `Output` with all the required parameters with correct types", "parameters":
      {"properties": {"skill_0": {"description": "Output:", "title": "Skill 0", "type":
      "string"}}, "required": ["skill_0"], "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '633'
      content-type:
      - application/json
      cookie:
      - __cf_bm=Ak_IlKcLi2XLOhncnn2FSFXMQ0m52aFPhmS.ATiCxDI-1722380911-1.0.1.1-JzC2eOjXKtTIfLSVC5aF1xbgCsWrRVqO.y_3jKaC7MVq.iiU.K6MbFv69V2EVOqVeGWrKOE6cxjyC_AQ92DPCQ;
        _cfuvid=3k4lHZfeYRLuPmhZjt3kGZw3ZYtMj3lvxz1ICdBd7_o-1722380911385-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA2xSW0/CMBR+369ozjOQMUTdHgnqA0aNiQYjZimlbJXeaM+8hPDfTccck9iH5uR8
        /S45p7uIEBAryAiwkiJTVvbT7fb6aV6ez24SvB5ebERx+4lnEyGuklkMvcAwy3fO8Jc1YEZZyVEY
        fYCZ4xR5UB1eJMnoMk6TyxpQZsVloBUW+6PBuI+VW5p+PEzGDbM0gnEPGXmNCCFkV98ho17xL8hI
        3PvtKO49LThk7SNCwBkZOkC9Fx6pRugdQWY0ch1i60rKDoDGyJxRKY/Gh7Pr1MdBUSlzXHl99bJN
        P17sdDO/exTrcjr5fJh3/A7S37YOtK40awfUwdt+dmJGCGiqau59hbbCEyYhQF1RKa4xpIbdAvxG
        SJnHC8gW8CyQKqH9Avbwh7eP/qvfmmrfjleawjqz9CfTgrXQwpe549TXqcGjsQeLIPdWr7H6sxmw
        ziiLOZoN10EwbbYIx4/TARsMDVLZaadREw/8t0eu8rXQBXfWiXal0T76AQAA//8DABSiz1vRAgAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8ab903409a32873b-ORD
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 30 Jul 2024 23:08:48 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '173'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '50000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '49998976'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 1ms
      x-request-id:
      - req_5877e909781cec2d5ddc70b24a6341cf
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "\"Given a category, list three
      examples that fall within this category.\""}, {"role": "user", "content": "Input:
      Minerals"}], "model": "gpt-3.5-turbo", "max_tokens": 1000, "seed": 47, "temperature":
      0.0, "tool_choice": {"type": "function", "function": {"name": "Output"}}, "tools":
      [{"type": "function", "function": {"name": "Output", "description": "Correctly
      extracted `Output` with all the required parameters with correct types", "parameters":
      {"properties": {"skill_0": {"description": "Output:", "title": "Skill 0", "type":
      "string"}}, "required": ["skill_0"], "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '633'
      content-type:
      - application/json
      cookie:
      - __cf_bm=Ak_IlKcLi2XLOhncnn2FSFXMQ0m52aFPhmS.ATiCxDI-1722380911-1.0.1.1-JzC2eOjXKtTIfLSVC5aF1xbgCsWrRVqO.y_3jKaC7MVq.iiU.K6MbFv69V2EVOqVeGWrKOE6cxjyC_AQ92DPCQ;
        _cfuvid=3k4lHZfeYRLuPmhZjt3kGZw3ZYtMj3lvxz1ICdBd7_o-1722380911385-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA2xSy27bMBC86ysWe5YNSW5iW/cWQYHWQdJHgDoQKIqW2fBlPoA4hv+9oORIilEd
        iMUOZ3a4o1MCgLzBEpDuiafSiNn6cPjy8+H3W5Btu6mfJD1+vbv/dpT5w239iGlk6Povo/6dNada
        GsE816qHqWXEs6iaL4tiscrWxaoDpG6YiLTW+NlifjPzwdZ6luXFzYW515wyhyX8SQAATt0ZPaqG
        vWIJWfrekcw50jIsh0sAaLWIHSTOceeJ8piOINXKMxVtqyDEBPBai4oSIcbB/Xea1OOiiBDVkrpP
        8vtds9jfPzJTrALJf2x+2Xwyr5c+ms7QLig6LGiCD/3yahgAKiI77iZ4E/wVEwCJbYNkykfXeNqi
        e+FCVNkWyy1+fiUxEwd6B5IrZolwQCyDQyDWv6XQcCK1alIgqoFWi2a+xTN+GHFO/lc/X6rzkITQ
        rbG6dleLxR1X3O0ry4jrHojOa9OPiHLPXeLhQ4horJbGV16/MBUFV+teDsd/bATz5QX02hMx6We3
        ycUguqPzTFY7rlpmjeVD/sk5+QcAAP//AwD+Ybaa/gIAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8ab90343af37873b-ORD
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 30 Jul 2024 23:08:49 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '238'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '50000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '49998976'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 1ms
      x-request-id:
      - req_84bceb99690067edc8a87c2cb1d9e6bd
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "..."}, {"role": "user", "content":
      "Input: Proteins, Carbohydrates, Fats"}], "model": "gpt-3.5-turbo", "max_tokens":
      1000, "seed": 47, "temperature": 0.0, "tool_choice": {"type": "function", "function":
      {"name": "Output"}}, "tools": [{"type": "function", "function": {"name": "Output",
      "description": "Correctly extracted `Output` with all the required parameters
      with correct types", "parameters": {"properties": {"skill_1": {"description":
      "Output:", "title": "Skill 1", "type": "string"}}, "required": ["skill_1"],
      "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '584'
      content-type:
      - application/json
      cookie:
      - __cf_bm=Ak_IlKcLi2XLOhncnn2FSFXMQ0m52aFPhmS.ATiCxDI-1722380911-1.0.1.1-JzC2eOjXKtTIfLSVC5aF1xbgCsWrRVqO.y_3jKaC7MVq.iiU.K6MbFv69V2EVOqVeGWrKOE6cxjyC_AQ92DPCQ;
        _cfuvid=3k4lHZfeYRLuPmhZjt3kGZw3ZYtMj3lvxz1ICdBd7_o-1722380911385-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA2xS32vbMBB+918h7tkpdtpuid9GIO32sA7KCqMpRlYUW42sU6QzxAv534fs1HbD
        /CCO+/T90J1PEWOgtpAxEBUnUVs9Wx4O65f18Uk+m9XiUZpi0f78nfrD8w+x/wNxYGDxLgV9sG4E
        1lZLUmh6WDjJSQbV9Ot8frtIlvNlB9S4lTrQSkuz25v7GTWuwFmSzu8vzAqVkB4y9hoxxtipO0NG
        s5VHyFgSf3Rq6T0vJWTDJcbAoQ4d4N4rT9wQxCMo0JA0IbZptJ4AhKhzwbUejfvvNKnHQXGt87/8
        8eFF4zI57v2qeMeHu6o96u/fJn69dGu7QLvGiGFAE3zoZ1dmjIHhdcd9asg2dMVkDLgrm1oaCqnh
        tAG/V1rn6QayDfxySFIZH7MVdwVW7dZxkj5ma05+A2f4JHaO/le/XarzMHONpXVY+KsRwk4Z5avc
        Se67p4AntL1FkHvrdtt8WhdYh7WlnHAvTRBc3PVyMP5NI5h+uYCExPWknyTRJSD41pOs850ypXTW
        qWHT0Tn6BwAA//8DAL0+g0joAgAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8ab90346ccdc873b-ORD
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 30 Jul 2024 23:08:49 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '206'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '50000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '49998988'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 1ms
      x-request-id:
      - req_51845ebaff3d7a73f9a346c79645fbd7
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "..."}, {"role": "user", "content":
      "Input: Vitamins"}], "model": "gpt-3.5-turbo", "max_tokens": 1000, "seed": 47,
      "temperature": 0.0, "tool_choice": {"type": "function", "function": {"name":
      "Output"}}, "tools": [{"type": "function", "function": {"name": "Output", "description":
      "Correctly extracted `Output` with all the required parameters with correct
      types", "parameters": {"properties": {"skill_1": {"description": "Output:",
      "title": "Skill 1", "type": "string"}}, "required": ["skill_1"], "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '563'
      content-type:
      - application/json
      cookie:
      - __cf_bm=Ak_IlKcLi2XLOhncnn2FSFXMQ0m52aFPhmS.ATiCxDI-1722380911-1.0.1.1-JzC2eOjXKtTIfLSVC5aF1xbgCsWrRVqO.y_3jKaC7MVq.iiU.K6MbFv69V2EVOqVeGWrKOE6cxjyC_AQ92DPCQ;
        _cfuvid=3k4lHZfeYRLuPmhZjt3kGZw3ZYtMj3lvxz1ICdBd7_o-1722380911385-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA2xT224aMRB95ytGfgbEpYiExzRq1YtE1aZIbYmQ8Q67TnzDM06yQvx75AUWEnUf
        VtacORfPzu46AEIXYgZCVZKVDaZ3vd1+Wsy/Dl4+3t6Nt+Fv+eW3u7m70rfKPm9FNzP8+gEVn1h9
        5W0wyNq7A6wiSsasOpyORuOrwfXougGsL9BkWhm4N+5Pepzi2vcGw9HkyKy8VkhiBv86AAC75p0z
        ugJfxAwG3VPFIpEsUczaJgARvckVIYk0sXQsumdQecfocmyXjLkA2HuzUtKYs/Hh2V2cz4OSxqxe
        Pi+2w6tv5ejh182Pn9/Hk7lLk9unPxd+B+k6NIE2yal2QBd4W5+9MwMQTtqGO08cEr9jAggZy2TR
        cU4tdktBj9qY1XApZkux0CytdgQyIiAROtbSgEscdaYAV5LBpwhrX9TgEAsC7YCsNAak9alp8nAK
        CCH6gNHUfbirsIZgZA0SVEwqC+fBZ/6TjNonyqra1C2bgJKqQBJYZLn2RpPtgrY2Oc11F6QroNAl
        Um5uHCI20Yfji/RPx0t1AaWq4FlzBZoJ/LOD5PQ2IazR4SbXsmLr3l+KvXgzvn3nf+f742nfbpnx
        ZYh+Te+WRmy001StIkpqPp4g9uFgkeXum21ObxZUhOht4BX7R3RZcDo9yInz/3MGJyeQPUtzrg/H
        HzrHgIJqYrSrjXYlxhB1u9udfecVAAD//wMAoL6GzNoDAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8ab9034a3ac3873b-ORD
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 30 Jul 2024 23:08:50 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '657'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '50000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '49998993'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 1ms
      x-request-id:
      - req_fcac4c52c32815b7462c5df9403e9c73
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "..."}, {"role": "user", "content":
      "Input: Examples of minerals are quartz, diamond, and gold."}], "model": "gpt-3.5-turbo",
      "max_tokens": 1000, "seed": 47, "temperature": 0.0, "tool_choice": {"type":
      "function", "function": {"name": "Output"}}, "tools": [{"type": "function",
      "function": {"name": "Output", "description": "Correctly extracted `Output`
      with all the required parameters with correct types", "parameters": {"properties":
      {"skill_1": {"description": "Output:", "title": "Skill 1", "type": "string"}},
      "required": ["skill_1"], "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '606'
      content-type:
      - application/json
      cookie:
      - __cf_bm=Ak_IlKcLi2XLOhncnn2FSFXMQ0m52aFPhmS.ATiCxDI-1722380911-1.0.1.1-JzC2eOjXKtTIfLSVC5aF1xbgCsWrRVqO.y_3jKaC7MVq.iiU.K6MbFv69V2EVOqVeGWrKOE6cxjyC_AQ92DPCQ;
        _cfuvid=3k4lHZfeYRLuPmhZjt3kGZw3ZYtMj3lvxz1ICdBd7_o-1722380911385-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA2xSS2/bMAy++1cIPCdFHKNd49t62AMdsLXBlrZLYSgy46iVREWigWVB/nthO7PT
        YD4IBD99D5HeJ0KALiEXoDaSlfVmPNtuPy2+/tpxuMGY2u3DPd4u5mk25zvMYNQwaPWCiv+xLhRZ
        b5A1uQ5WASVjo5p+mE6z68ksm7SApRJNQ6s8j7OLyzHXYUXjSTq9PDI3pBVGyMXvRAgh9u3ZZHQl
        /oFctDptx2KMskLI+0tCQCDTdEDGqCNLxzAaQEWO0TWxXW3MCcBEplDSmMG4+/Yn9TAoaUxxs/jx
        lPLj1U8291Odzr99/IJ3n582J36d9M63gda1U/2ATvC+n5+ZCQFO2pb7vWZf8xlTCJChqi06blLD
        fgnxVRtTpEvIl7CtZeC/I1FqacmVIyFdKSoy5RIO8E7okPyvfj5Wh37ehiofaBXPxgdr7XTcFAFl
        bJ8Bkcl3Fo3cc7vX+t2qwAeyngumV3SN4PVVJwfDnzSAaXYEmViaoT+bJcd8EHeR0RZr7SoMPuh+
        yckheQMAAP//AwDIeu0A4wIAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8ab903508ee9873b-ORD
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 30 Jul 2024 23:08:51 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '340'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '50000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '49998982'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 1ms
      x-request-id:
      - req_59a5d4bdb23b2e752b2e5ad9674b956b
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "You are a helpful assistant."},
      {"role": "user", "content": "\nA prompt is a text paragraph that outlines the
      expected actions and instructs the large language model (LLM) to generate a
      specific output. This prompt is concatenated with the input text, and the model
      then creates the required output.\nThis describes the full template how the
      prompt is concatenated with the input to produce the output:\n\n```\n\n{prompt}\nInput:
      {category}\nOutput: {skill_0}\n```\n\nHere:\n- \"Input: {category}\" is input
      template,\n- \"{prompt}\" is the LLM prompt,\n- \"Output: {skill_0}\" is the
      output template.\n\nModel can produce erroneous output if a prompt is not well
      defined. In our collaboration, we\u2019ll work together to refine a prompt.
      The process consists of two main steps:\n\n## Step 1\nI will provide you with
      the current prompt along with prediction examples. Each example contains the
      input text, the final prediction produced by the model, and the user feedback.
      User feedback indicates whether the model prediction is correct or not. Your
      task is to analyze the examples and user feedback, determining whether the existing
      instruction is describing the task reflected by these examples precisely, and
      suggests changes to the prompt to address the incorrect predictions.\n\n## Step
      2\nNext, you will carefully review your reasoning in step 1, integrate the insights
      to refine the prompt, and provide me with the new prompt that improves the model\u2019s
      performance."}, {"role": "assistant", "content": "Sure, I\u2019d be happy to
      help you with this prompt engineering problem. Please provide me with the current
      prompt and the examples with user feedback."}, {"role": "user", "content": "\n##
      Current prompt\n\"Given a category, list three examples that fall within this
      category.\"\n\n## Examples\n### Example #0\n\nInput: Macronutrients\n\nOutput:
      Proteins, Carbohydrates, Fats\n\nUser feedback: Prediction is incorrect. Correct
      answer: \"Carbohydrates, Proteins, Fats\"\n\n\n### Example #1\n\nInput: Vitamins\n\nOutput:
      Vitamins\n\nUser feedback: Prediction is incorrect. Correct answer: \"Vitamin
      A, Vitamin C, Vitamin D\"\n\n\n### Example #2\n\nInput: Minerals\n\nOutput:
      Examples of minerals are quartz, diamond, and gold.\n\nUser feedback: Prediction
      is incorrect. Correct answer: \"Calcium, Iron, Magnesium\"\n\n\n\nSummarize
      your analysis about incorrect predictions and suggest changes to the prompt."}],
      "model": "gpt-4", "max_tokens": 1000, "seed": 47, "temperature": 0.0}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '2541'
      content-type:
      - application/json
      cookie:
      - __cf_bm=Ak_IlKcLi2XLOhncnn2FSFXMQ0m52aFPhmS.ATiCxDI-1722380911-1.0.1.1-JzC2eOjXKtTIfLSVC5aF1xbgCsWrRVqO.y_3jKaC7MVq.iiU.K6MbFv69V2EVOqVeGWrKOE6cxjyC_AQ92DPCQ;
        _cfuvid=3k4lHZfeYRLuPmhZjt3kGZw3ZYtMj3lvxz1ICdBd7_o-1722380911385-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA2RVTW/bRhC961cMqIMSgBZkO2ls39KgdlLUTYEaaYqmMFa7Q3Ki5S69M5TMBv7v
        xS4pirIvPOx8vTdvZvhjBpCRya4g05USXTf25PLh4frrr6u35Y1a3Z59vrv5evvlj5u/1x+/34Tf
        szxG+PV31LKPWmpfNxaFvOvNOqASjFlP352dnV+sLs9Pk6H2Bm0MKxs5eXOy+un0fIioPGnk7Ar+
        mQEA/EjfiM0ZfMyuYJXvX2pkViVmV6MTQBa8jS+ZYiYW5STLD0btnaBLcOdzeO+U7Zj4m/vmfvN+
        Q64EJSAVAj6qSIRBOZMeWsYABaJZK73JgQQYsWaQaohIhIAYnBfQ3sXq6MR2QE4wNAEl5o+uTfB1
        E51CQC22W0JE8MnBL31VmK/yQ84FQxPQkI5djQWGuBzWrbzEBtyWJbIwKOAGNRWkwQeDYQkf/Q63
        GPIpCuOxx9w7d6Bc1/vnwB6kIj7krqmsBNYI3CbdaYvL59hPJ9iBqW5sBwGbNAfJQq5pBbQSLH3o
        4NUXElWT49dAjgWVAV9EdFsysWMjiVETX8B2iFnCXQRIzlBM+EIPQyaRa53BEMehhyCKN5P+P6dw
        NqXQI0FzVL9Eb31JWlmoyWFQluHVQ6uC/JeDIVV7Z3IovTVHrAyhqNBNYj4oq6mtc/gUvMvhVpUO
        mdr69cBsVPMZsVGJSm1jlwwVBenWSjfhuh+4NPaPAuRgV5Gu+se9AMSwxujaMprUi/kc/uzrooEP
        lXIlpiW586CMCcgRDjICMbfIOexijdYaqNUGp9NV+xCXqbGkSZZw7UNqh3IaJ1H70Rs5jq3mKjms
        EQyxkNMCJHHvdiQVuSMi+bCsQ46Rn96nKIKvYasC+ZahILSGwdIGwbUSKK5XPgjb5YCi+738a49S
        WU78QUGBuwNG8VPG4qGkLU6kUrBGEQxABlWcgl2ESBz7glrQ9H0Z8uVAxQt9FtehJeHF0Wr1rbHE
        cmiOdE0/oEUK6Okt3jcRaA4/K6ec4hw+h6Tpomd4TU5Z200E0VaFI0HSQYh5j9QZb0etIsE8kldb
        TyYdEe1d0XI8WgkFTe/bMhuO8tN4za0vm+DX8fK71trxvSBHXN0HVOxdvNwsvunDn2YA/6a/Rnv0
        I8h6Le7Fb9DFhG8u3/b5ssMP6mA9u9hbxYuyB8O7i9VsgJhxx4L1fUGujNec0l8kAp09zf4HAAD/
        /wMA51FJEDwHAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8ab90353fd1b873b-ORD
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 30 Jul 2024 23:09:02 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '11233'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '1000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '998435'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 93ms
      x-request-id:
      - req_0bbe905dff8e75e115d60b01cb0bad6c
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "You are a helpful assistant."},
      {"role": "user", "content": "\nA prompt is a text paragraph that outlines the
      expected actions and instructs the large language model (LLM) to generate a
      specific output. This prompt is concatenated with the input text, and the model
      then creates the required output.\nThis describes the full template how the
      prompt is concatenated with the input to produce the output:\n\n```\n\n{prompt}\nInput:
      {category}\nOutput: {skill_0}\n```\n\nHere:\n- \"Input: {category}\" is input
      template,\n- \"{prompt}\" is the LLM prompt,\n- \"Output: {skill_0}\" is the
      output template.\n\nModel can produce erroneous output if a prompt is not well
      defined. In our collaboration, we\u2019ll work together to refine a prompt.
      The process consists of two main steps:\n\n## Step 1\nI will provide you with
      the current prompt along with prediction examples. Each example contains the
      input text, the final prediction produced by the model, and the user feedback.
      User feedback indicates whether the model prediction is correct or not. Your
      task is to analyze the examples and user feedback, determining whether the existing
      instruction is describing the task reflected by these examples precisely, and
      suggests changes to the prompt to address the incorrect predictions.\n\n## Step
      2\nNext, you will carefully review your reasoning in step 1, integrate the insights
      to refine the prompt, and provide me with the new prompt that improves the model\u2019s
      performance."}, {"role": "assistant", "content": "Sure, I\u2019d be happy to
      help you with this prompt engineering problem. Please provide me with the current
      prompt and the examples with user feedback."}, {"role": "user", "content": "\n##
      Current prompt\n\"Given a category, list three examples that fall within this
      category.\"\n\n## Examples\n### Example #0\n\nInput: Macronutrients\n\nOutput:
      Proteins, Carbohydrates, Fats\n\nUser feedback: Prediction is incorrect. Correct
      answer: \"Carbohydrates, Proteins, Fats\"\n\n\n### Example #1\n\nInput: Vitamins\n\nOutput:
      Vitamins\n\nUser feedback: Prediction is incorrect. Correct answer: \"Vitamin
      A, Vitamin C, Vitamin D\"\n\n\n### Example #2\n\nInput: Minerals\n\nOutput:
      Examples of minerals are quartz, diamond, and gold.\n\nUser feedback: Prediction
      is incorrect. Correct answer: \"Calcium, Iron, Magnesium\"\n\n\n\nSummarize
      your analysis about incorrect predictions and suggest changes to the prompt."},
      {"role": "assistant", "content": "## Analysis\n\nLooking at the examples and
      the user feedback, it seems that the model is not consistently interpreting
      the prompt correctly. \n\nIn Example #0, the model''s prediction is correct,
      but the user feedback suggests a specific order. However, the prompt does not
      specify any order, so this feedback might be subjective.\n\nIn Example #1, the
      model simply repeated the input category (Vitamins) instead of providing specific
      examples of vitamins. This indicates that the model did not understand the task
      correctly.\n\nIn Example #2, the model provided examples of geological minerals
      (quartz, diamond, gold) instead of dietary minerals (Calcium, Iron, Magnesium).
      This suggests that the model might be having difficulty understanding the context
      in which the category is being used.\n\n## Suggested Changes\n\nTo address these
      issues, we could make the prompt more explicit. For instance, we could specify
      that the examples should be distinct items within the category, and that the
      category could be from various fields like nutrition, geology, etc. \n\nWe could
      also add a few examples to the prompt to give the model a better idea of what
      is expected. For example, if the category is ''Fruits'', the model should list
      distinct types of fruits like ''Apples, Bananas, Oranges''. \n\nFinally, we
      could clarify that the order of the examples does not matter, to avoid any confusion
      like in Example #0."}, {"role": "user", "content": "\nNow please carefully review
      your reasoning in Step 1 and help with Step 2: refining the prompt.\n\n## Current
      prompt\n\"Given a category, list three examples that fall within this category.\"\n\n##
      Follow this guidance to refine the prompt:\n\n1. The new prompt should should
      describe the task precisely, and address the points raised in the user feedback.\n\n2.
      The new prompt should be similar to the current prompt, and only differ in the
      parts that address the issues you identified in Step 1.\n    Example:\n    -
      Current prompt: \"Generate a summary of the input text.\"\n    - New prompt:
      \"Generate a summary of the input text. Pay attention to the original style.\"\n\n3.
      Reply only with the new prompt. Do not include input and output templates in
      the prompt.\n"}], "model": "gpt-4", "max_tokens": 1000, "seed": 47, "temperature":
      0.0}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '4792'
      content-type:
      - application/json
      cookie:
      - __cf_bm=Ak_IlKcLi2XLOhncnn2FSFXMQ0m52aFPhmS.ATiCxDI-1722380911-1.0.1.1-JzC2eOjXKtTIfLSVC5aF1xbgCsWrRVqO.y_3jKaC7MVq.iiU.K6MbFv69V2EVOqVeGWrKOE6cxjyC_AQ92DPCQ;
        _cfuvid=3k4lHZfeYRLuPmhZjt3kGZw3ZYtMj3lvxz1ICdBd7_o-1722380911385-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//VJLNbtswEITveooBL77Ihh0bSexbg8L9OaRoUaAomsKgqZXEhOIq5CqO
        EOTdC8q2jF542OHsftzhWwYoW6gNlKm1mKZ10/Xz8/bRdbfL7d3nj7/vD/2v7nu7uP/6w5dfFipP
        Dt4/kpGza2a4aR2JZX+UTSAtlLoubq6ulrfz9Wo5CA0X5JKtamW6ms6vF8uTo2ZrKKoN/mQA8Dac
        ic0X9Ko2mOfnSkMx6orUZrwEqMAuVZSO0UbRXlR+EQ17IT/gPqhP9oU8NIwWqjj0OQ61NTUMd67A
        nlAGbvCig+UuorTkighnnwi+k2DTI3NUxI6rPgeJmeVwNgqkDkQobBTrjYBedVpKhNRaUGrncLBS
        Ww+pbRzHz7DlAOsTtKEctoTUNMqwEZNt6KzESY6eO8R6AB1GjsOkbymCS5TD1SPv5EObAHLcaa+9
        jjm+Be0ripMZftYEDgWFZEoDR9yCKcKzoNEiFGYPSp02+T5G4LhqA+9TXL5zbqyX1ttY7wLpyD6t
        Owq3R/t7Bvwdou7+S0+1gZtWdsJP5FPD9erm2E9dftVFvT6LwqLdpb6YL1bZCVHFPgo1u9L6ikIb
        7BB9As3es38AAAD//wMAOjk3Z/ECAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8ab9039e194f873b-ORD
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 30 Jul 2024 23:09:06 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '2971'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '1000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '997897'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 126ms
      x-request-id:
      - req_4e5ab04822209810a8de2d1925de5143
    status:
      code: 200
      message: OK
version: 1
