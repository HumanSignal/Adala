interactions:
- request:
    body: '{"messages": [{"role": "user", "content": "Hey, how''s it going?"}], "model":
      "gpt-4", "max_tokens": 1000, "seed": 47, "temperature": 0.0}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '137'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.10.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA1SRQU/DMAyF7/0VJhcu27SywrRdEBe0SSAOgEBCaMpSrw2kcZS4sGraf0fJygaX
        HN7nZz87uwxA6FLMQahasmqcGc5YNS/l7FHn3w+v0+3t/V337PKJGy8u8ycxiA5af6DiX9dIUeMM
        siZ7wMqjZIxd8+nFZFwUeVEk0FCJJtoqx8NiOL7KJ72jJq0wiDm8ZQAAu/TGbLbErZjDePCrNBiC
        rFDMj0UAwpOJipAh6MDSshicoCLLaFPcBRpDZ7A8b0BauFmCtCWUZM8ZavmFsEE02lZhAOuWU1mN
        HlOVR1l2wASHGdBRO4IFfYOSFpZQo3FRA6ZSdtd/53vctEHGvW1rTK/vjwsZqpyndej5Ud9oq0O9
        8igD2Rg+MDmR6D4DeE+Ha//dQjhPjeMV0yfa2DAvDu3E6YtO8GLWQyaW5qQXk6zPJ0IXGJvVRtsK
        vfM6XTFtsc9+AAAA//8DAFWBClg8AgAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8af8430a9cb52ec7-LAX
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 07 Aug 2024 15:22:25 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=X_I2i8FqzaTRQfyHYjfeD_fsJ4sEoXtBbIYFou1daXU-1723044145-1.0.1.1-wyhLrT3.4nRKoPdL2sJweicRd374lXyPEaMp6cCB0aJ0AyZBnoBz.aairkyjnCTKAtMtXst41wGd1bKgmdUpVg;
        path=/; expires=Wed, 07-Aug-24 15:52:25 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=8mCgr47xxaBGxkWwPjLViJ3G64Wv3Z3XVxFRpzZ83uY-1723044145806-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - user-jt0khdjhkecks0yodhgozy8e
      openai-processing-ms:
      - '1823'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '10000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '8994'
      x-ratelimit-reset-requests:
      - 8.64s
      x-ratelimit-reset-tokens:
      - 6.036s
      x-request-id:
      - req_707ff71e6dba053bebb70063784e719c
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "user", "content": "Hey, how''s it going?"}], "model":
      "gpt-3.5-turbo", "max_tokens": 1000, "seed": 47, "temperature": 0.0}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '145'
      content-type:
      - application/json
      cookie:
      - __cf_bm=X_I2i8FqzaTRQfyHYjfeD_fsJ4sEoXtBbIYFou1daXU-1723044145-1.0.1.1-wyhLrT3.4nRKoPdL2sJweicRd374lXyPEaMp6cCB0aJ0AyZBnoBz.aairkyjnCTKAtMtXst41wGd1bKgmdUpVg;
        _cfuvid=8mCgr47xxaBGxkWwPjLViJ3G64Wv3Z3XVxFRpzZ83uY-1723044145806-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.10.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA1SRT0/rMBDE7/kUiy9c0qqhKai9ICEhUS4gPYk/enqqXGebGGyvZW8eFNTvjuyG
        Fi45zM+zmpl8FgBCN2IBQnWSlfVmNGdlnz+er8655rvw8FTdT26bx9en6z/v94+iTA5av6Dib9dY
        kfUGWZPbYxVQMqar1cXZdFLXVX2egaUGTbK1nkfT8WzEfVjTaFKdzQZnR1phFAv4WwAAfOZvyuga
        fBcLmJTfisUYZYticXgEIAKZpAgZo44sHYvyCBU5Rpdj36AxdALLUwsvfWSQkDr0jAF8oDZIW0Ik
        WEJD7pShk/8RNohGuzaWsO45WzsMCEzQofGwpR7eNHcg3ZY77dqsOMRmDDf0Bko6WMI+WEZMjdxe
        /gwYcNNHmQZyvTGDvjs0NtT6QOs48IO+0U7HbhVQRnKpXWTyItNdAfAvL9v/Gkv4QNbziukVXTpY
        1ftz4vgvj3A6GyATS3PU63kx5BNxGxntaqNdi8EHnWfOLXbFFwAAAP//AwA6g/luZQIAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8af843179bdc2ec7-LAX
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 07 Aug 2024 15:22:26 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - user-jt0khdjhkecks0yodhgozy8e
      openai-processing-ms:
      - '706'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '200000'
      x-ratelimit-remaining-requests:
      - '9987'
      x-ratelimit-remaining-tokens:
      - '198993'
      x-ratelimit-reset-requests:
      - 1m48.466s
      x-ratelimit-reset-tokens:
      - 301ms
      x-request-id:
      - req_6273511218ad6abbee13ced795fa21ef
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "..."}, {"role": "user", "content":
      "Input: Macronutrients"}], "model": "gpt-3.5-turbo", "max_tokens": 1000, "seed":
      47, "temperature": 0.0, "tool_choice": {"type": "function", "function": {"name":
      "Output"}}, "tools": [{"type": "function", "function": {"name": "Output", "description":
      "Correctly extracted `Output` with all the required parameters with correct
      types", "parameters": {"properties": {"skill_0": {"description": "Output:",
      "title": "Skill 0", "type": "string"}}, "required": ["skill_0"], "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '569'
      content-type:
      - application/json
      cookie:
      - __cf_bm=X_I2i8FqzaTRQfyHYjfeD_fsJ4sEoXtBbIYFou1daXU-1723044145-1.0.1.1-wyhLrT3.4nRKoPdL2sJweicRd374lXyPEaMp6cCB0aJ0AyZBnoBz.aairkyjnCTKAtMtXst41wGd1bKgmdUpVg;
        _cfuvid=8mCgr47xxaBGxkWwPjLViJ3G64Wv3Z3XVxFRpzZ83uY-1723044145806-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.10.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//bFJta9swEP7uX3HocxLsxCWtv42NQdjKYHSMdRlGkc+2Gr140qmrF/Lf
        h+w0TsP8wUj36Hnh7g4JAJMVK4CJlpPQnZrfkdCPe3J6s/luVx8fcHeXP797Sn+Hx2/v2Swy7O4J
        Bb2yFsLqTiFJa0ZYOOSEUTVbL1dpnmf5egC0rVBFWtPRfLW4mVNwOztPs+XNidlaKdCzAn4mAACH
        4R8zmgpfWAHp7LWi0XveICvOjwCYsypWGPdeeuKG2GwChTWEJsY2QakLgKxVpeBKTcbjd7g4T43i
        SpUfvkpVq8/5y99l+ul2k9+0/Y97/Wd94TdK990QqA5GnBt0gZ/rxZUZADNcD9wvgbpAV0wAxl0T
        NBqKqdlhy/xeKlWmW1Zs2T0XzppATsYHwB3CdKOWE3TOPssKQXBlnUQP1gEadE2/gIcW+5GDWGEF
        0oDirkHg2oZBz8SiUGEQcDvb9pXjhH4WdQml8bPhUc3JL7bsyN6EPyb/O/+6GInDOniuTrM61Y/n
        4SvbdM7u/NUsWS2N9G3pkPuhp8yT7Ubv6DM4sPBmb1jnrO6oJLtHEwXXt6Mcm9Z6AlerE0iWuJrq
        WZYlp4DM955Ql7U0DbrOyfPKJcfkHwAAAP//AwDEeNVwcQMAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8af8431d1a5e2ec7-LAX
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 07 Aug 2024 15:22:27 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - user-jt0khdjhkecks0yodhgozy8e
      openai-processing-ms:
      - '1020'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '200000'
      x-ratelimit-remaining-requests:
      - '9986'
      x-ratelimit-remaining-tokens:
      - '198992'
      x-ratelimit-reset-requests:
      - 1m56.23s
      x-ratelimit-reset-tokens:
      - 302ms
      x-request-id:
      - req_f89130c40e064db0f946b25d586f6e8b
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "..."}, {"role": "user", "content":
      "Input: Vitamins"}], "model": "gpt-3.5-turbo", "max_tokens": 1000, "seed": 47,
      "temperature": 0.0, "tool_choice": {"type": "function", "function": {"name":
      "Output"}}, "tools": [{"type": "function", "function": {"name": "Output", "description":
      "Correctly extracted `Output` with all the required parameters with correct
      types", "parameters": {"properties": {"skill_0": {"description": "Output:",
      "title": "Skill 0", "type": "string"}}, "required": ["skill_0"], "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '563'
      content-type:
      - application/json
      cookie:
      - __cf_bm=X_I2i8FqzaTRQfyHYjfeD_fsJ4sEoXtBbIYFou1daXU-1723044145-1.0.1.1-wyhLrT3.4nRKoPdL2sJweicRd374lXyPEaMp6cCB0aJ0AyZBnoBz.aairkyjnCTKAtMtXst41wGd1bKgmdUpVg;
        _cfuvid=8mCgr47xxaBGxkWwPjLViJ3G64Wv3Z3XVxFRpzZ83uY-1723044145806-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.10.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//bFNdb9swDHzPryD0tAJJkM+19VvXBcMwdH1YNwxYhkCWaVurLKoivS4I
        8t8HO4mdFvWDQfF0dwRx2g0AlM1UAsqUWkwV3OhaTKVXV5P3q2/mOl3e3PNidsXBfcrMtlDDhkHp
        HzRyYo0NVcGhWPIH2ETUgo3q9HI2nywW08VVC1SUoWtoRZDRfLwcSR1TGk2ms+WRWZI1yCqBXwMA
        gF37b2b0Gf5TCUyGp06FzLpAlXSXAFQk13SUZrYs2osa9qAhL+ibsX3t3BkgRG5jtHO98eHbndX9
        orRzm/vb+WdO754eZuhvnsqwqPj7z7uv5ZnfQXob2oHy2ptuQWd4109emQEor6uWe19LqOUVE0Dp
        WNQVemmmVru14kfr3GayVsla/bCiK+sZdERAZvRitQNfS7QNBaTUAluqI6SUbcEjZgzWA1faOdAV
        1e0tgmeKjxAiBYxuO4aHEiO2qtP5mfDfk1+r28CZ/WszzMB6IZBnAqMFC4oWOYFnLRhHTK5OHfbk
        dx/6WvvsdIDbi/aYa3mD01U3Q/g4hNWwvfvlYgwrbcpOo9QMHNDY3Bo4rf1gk6LH3ApDTvGwkxK1
        k3K8Vnv1Yuv7wVv177MsRcxr1u4YsmN/36XWUREipfwqhCq33nK5iai5DYNioXDwbnxaB1W/CLwK
        kaogG6FH9I3g5eVBTvXv8Q1QSLTr+9PlYnAcUPGWBatNbn2BMUTbvZXBfvAfAAD//wMAMXIm5yoE
        AAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8af843255c522ec7-LAX
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 07 Aug 2024 15:22:29 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - user-jt0khdjhkecks0yodhgozy8e
      openai-processing-ms:
      - '1567'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '200000'
      x-ratelimit-remaining-requests:
      - '9985'
      x-ratelimit-remaining-tokens:
      - '198992'
      x-ratelimit-reset-requests:
      - 2m3.546s
      x-ratelimit-reset-tokens:
      - 302ms
      x-request-id:
      - req_02027b5a853fd74be88edea425f4d820
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "..."}, {"role": "user", "content":
      "Input: Minerals"}], "model": "gpt-3.5-turbo", "max_tokens": 1000, "seed": 47,
      "temperature": 0.0, "tool_choice": {"type": "function", "function": {"name":
      "Output"}}, "tools": [{"type": "function", "function": {"name": "Output", "description":
      "Correctly extracted `Output` with all the required parameters with correct
      types", "parameters": {"properties": {"skill_0": {"description": "Output:",
      "title": "Skill 0", "type": "string"}}, "required": ["skill_0"], "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '563'
      content-type:
      - application/json
      cookie:
      - __cf_bm=X_I2i8FqzaTRQfyHYjfeD_fsJ4sEoXtBbIYFou1daXU-1723044145-1.0.1.1-wyhLrT3.4nRKoPdL2sJweicRd374lXyPEaMp6cCB0aJ0AyZBnoBz.aairkyjnCTKAtMtXst41wGd1bKgmdUpVg;
        _cfuvid=8mCgr47xxaBGxkWwPjLViJ3G64Wv3Z3XVxFRpzZ83uY-1723044145806-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.10.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA2xS24rbMBB991cM87wJuWyaxm+lkIcuYQvdUpamGEUeO+rqYjSjtm7Ivxc72Tgb
        6gcj5uhcOJpDBoCmxBxQ75Vo19jRSrTT9ae/ixjqcpXW85Zr9/y8c9WSGe86Rtj9JC2vrLEOrrEk
        JvgTrCMpoU51upzNJ/f308WkB1woyXa0upHRfLwYSYq7MJpMZ4szcx+MJsYcvmcAAIf+32X0Jf3B
        HHqdfuKIWdWE+eUSAMZguwkqZsOivODdAOrghXwX2ydrrwAJwRZaWTsYn77D1XkoSllbbNbUVu7j
        kzyuN7+fzcPTt6+fH77Ihyu/k3Tb9IGq5PWloCv8Ms9vzADQK9dzH5M0SW6YAKhinRx56VLjYYv8
        YqwtJlvMt7gxnqKyDCoSeCUpKmtbCFqnGI2vgdOuK0gTg+yV9Pc4WFOC8iXs1S8CBTq2LMpa4wlY
        YtKSIo23eMQ3WY7Z/84/rhqOVCVW9lz9eX68vKUNdRPDjm+eBivjDe+LSIr7ipAlNCfvzqd3wPRm
        DbCJwTVSSHgh3wku353kcNjSAZzNzqAEUXaYr95n53zILQu5ojK+pthEc1mg7Jj9AwAA//8DACYa
        UQE/AwAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8af84330183c2ec7-LAX
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 07 Aug 2024 15:22:30 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - user-jt0khdjhkecks0yodhgozy8e
      openai-processing-ms:
      - '600'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '200000'
      x-ratelimit-remaining-requests:
      - '9984'
      x-ratelimit-remaining-tokens:
      - '198992'
      x-ratelimit-reset-requests:
      - 2m10.471s
      x-ratelimit-reset-tokens:
      - 302ms
      x-request-id:
      - req_d5059651d67aeaa253b808a1819a69e9
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "..."}, {"role": "user", "content":
      "Input: Macronutrients are nutrients that provide calories or energy. They are
      needed in large amounts and include carbohydrates, proteins, and fats."}], "model":
      "gpt-3.5-turbo", "max_tokens": 1000, "seed": 47, "temperature": 0.0, "tool_choice":
      {"type": "function", "function": {"name": "Output"}}, "tools": [{"type": "function",
      "function": {"name": "Output", "description": "Correctly extracted `Output`
      with all the required parameters with correct types", "parameters": {"properties":
      {"skill_1": {"description": "Output:", "title": "Skill 1", "type": "string"}},
      "required": ["skill_1"], "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '696'
      content-type:
      - application/json
      cookie:
      - __cf_bm=X_I2i8FqzaTRQfyHYjfeD_fsJ4sEoXtBbIYFou1daXU-1723044145-1.0.1.1-wyhLrT3.4nRKoPdL2sJweicRd374lXyPEaMp6cCB0aJ0AyZBnoBz.aairkyjnCTKAtMtXst41wGd1bKgmdUpVg;
        _cfuvid=8mCgr47xxaBGxkWwPjLViJ3G64Wv3Z3XVxFRpzZ83uY-1723044145806-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.10.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//bFLBbtswDL37KwidkyBOmq71MRiwDcPQHTYM2zIYikzbamXSkeiuaZB/
        H+SksVtMB0F4j4+PInlIAJQtVAbK1FpM07rprZimMD/p2pP+dN+md6vy6eYR19s1/92pSVTw9h6N
        vKhmhpvWoVimE208asGYNX23WM6vrtJV2hMNF+iirGplupytptL5LU/n6WJ1VtZsDQaVwe8EAODQ
        37FGKvBJZTCfvCANhqArVNklCEB5dhFROgQbRJOoyUAaJkGKZVPn3IgQZpcb7dxgfDqH0XtolHYu
        d4vn23X4YOvi62f//vnm13cJS/vj48jvlHrf9gWVHZlLg0b8Bc/emAEo0k2vveuk7eSNEkBpX3UN
        ksSq1WGjwoN1Lk83KtuoL9p4pk68jQGgPQKGgCRWOxhwqbVA6/nRFghGO/YWA7AHJPTVfgbfatz3
        ao+7znoswBIEW5EtrdEksOs0iZUo01SAYYqdBy7BaL/lel94LRgm0UXQUpj0caWWMNuoo3r1qWPy
        v/ef0ag8ll3Q7jzDM368LIXjqvW8DW9mrEpLNtS5Rx36Xqsg3J68o0/voLpX+6Raz00rufADUkyY
        ztNTPjXs+8AuV2dSWLQbqZbXyblCFfZBsMlLSxX61tvLLibH5B8AAAD//wMATMWCIIoDAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8af84335fe9c2ec7-LAX
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 07 Aug 2024 15:22:31 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - user-jt0khdjhkecks0yodhgozy8e
      openai-processing-ms:
      - '816'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '200000'
      x-ratelimit-remaining-requests:
      - '9984'
      x-ratelimit-remaining-tokens:
      - '198960'
      x-ratelimit-reset-requests:
      - 2m18.174s
      x-ratelimit-reset-tokens:
      - 312ms
      x-request-id:
      - req_342ef645b6adbee698f72052de8f7073
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "..."}, {"role": "user", "content":
      "Input: Vitamins are essential nutrients that your body needs in small amounts
      to work properly. There are 13 essential vitamins that are divided into two
      categories: water-soluble vitamins (B vitamins and vitamin C) and fat-soluble
      vitamins (vitamins A, D, E, and K). Each vitamin has specific functions and
      benefits for your health."}], "model": "gpt-3.5-turbo", "max_tokens": 1000,
      "seed": 47, "temperature": 0.0, "tool_choice": {"type": "function", "function":
      {"name": "Output"}}, "tools": [{"type": "function", "function": {"name": "Output",
      "description": "Correctly extracted `Output` with all the required parameters
      with correct types", "parameters": {"properties": {"skill_1": {"description":
      "Output:", "title": "Skill 1", "type": "string"}}, "required": ["skill_1"],
      "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '881'
      content-type:
      - application/json
      cookie:
      - __cf_bm=X_I2i8FqzaTRQfyHYjfeD_fsJ4sEoXtBbIYFou1daXU-1723044145-1.0.1.1-wyhLrT3.4nRKoPdL2sJweicRd374lXyPEaMp6cCB0aJ0AyZBnoBz.aairkyjnCTKAtMtXst41wGd1bKgmdUpVg;
        _cfuvid=8mCgr47xxaBGxkWwPjLViJ3G64Wv3Z3XVxFRpzZ83uY-1723044145806-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.10.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//bFPBbtswDL3nKwidViAJEidBOt+6rTusKIZ2RTdgGQJFpm01sqhJdFs3
        yL8XthM7LeqDQfHpvUcQT7sBgNCJiEGoXLIqnBl9ZlWg19UV3m4xfX6++33tzu//3G45+3UrhjWD
        Ng+o+MgaKyqcQdZkW1h5lIy16nQZzSbz+XQRNUBBCZqaljkezcaLEZd+Q6PJNFocmDlphUHE8HcA
        ALBr/vWMNsFnEcNkeOwUGILMUMTdJQDhydQdIUPQgaVlMexBRZbR1mPb0pgTgInMWkljeuP2253U
        /aKkMeusuPj+cnPzch79rxbLFznZ0sNN9OP6xK+VrlwzUFpa1S3oBO/68TszAGFl0XB/luxKfscE
        ENJnZYGW66nFbiXCVhuznq5EvBL3mmWhbQDpETAEtKylAVuy1zUFOJcMFZUeNpRUYBGTANpCKKQx
        IAsqm1sET+S34Dw59KYaw12OHhvV6exE+PHo1+jWcKIfdYIJaMsE/ESgJGNGXmOI4Uky+lEgU24M
        9uRPX/pa2uR4gK9nzTGV/AGnqy6G8G0Il8Pm7tXZGC6lyjuNXAYIDpVOtYLj2lubDVpMNQdIybc7
        yVEazscrsRdvtr4ffFT/O8mSx7QM0hxCdujvu9QaypynTXgXQpFqq0O+9ihDEwYRmFzrXfs0DqJ8
        E3jhPBWO10xbtLXgdL5o9UT/IHt0uTyATCxN34+iaHCYUIQqMBbrVNsMvfO6eyyD/eAVAAD//wMA
        IksAqysEAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8af8433c9d282ec7-LAX
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 07 Aug 2024 15:22:33 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - user-jt0khdjhkecks0yodhgozy8e
      openai-processing-ms:
      - '1396'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '200000'
      x-ratelimit-remaining-requests:
      - '9983'
      x-ratelimit-remaining-tokens:
      - '198913'
      x-ratelimit-reset-requests:
      - 2m25.753s
      x-ratelimit-reset-tokens:
      - 325ms
      x-request-id:
      - req_ad4d5879b1c598d8bd94a37477d6275e
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "..."}, {"role": "user", "content":
      "Input: Minerals are naturally occurring substances that are solid and have
      a crystalline structure."}], "model": "gpt-3.5-turbo", "max_tokens": 1000, "seed":
      47, "temperature": 0.0, "tool_choice": {"type": "function", "function": {"name":
      "Output"}}, "tools": [{"type": "function", "function": {"name": "Output", "description":
      "Correctly extracted `Output` with all the required parameters with correct
      types", "parameters": {"properties": {"skill_1": {"description": "Output:",
      "title": "Skill 1", "type": "string"}}, "required": ["skill_1"], "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '647'
      content-type:
      - application/json
      cookie:
      - __cf_bm=X_I2i8FqzaTRQfyHYjfeD_fsJ4sEoXtBbIYFou1daXU-1723044145-1.0.1.1-wyhLrT3.4nRKoPdL2sJweicRd374lXyPEaMp6cCB0aJ0AyZBnoBz.aairkyjnCTKAtMtXst41wGd1bKgmdUpVg;
        _cfuvid=8mCgr47xxaBGxkWwPjLViJ3G64Wv3Z3XVxFRpzZ83uY-1723044145806-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.10.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//bFJNj9MwEL3nV4zm3FZNP9Td3GD3gIBlkVgWEEWR67qJ2YkdPGOWUPW/
        o6Qf6Vb4YFnv+c0bvZltAoB2jRmgLpXoqqbhtehq8/sNzxd3r68+viofZmN+98WVi+rmk8ZBq/Cr
        n0bLUTXSvqrJiPVuT+tglJi2arqYTMezWTqfdkTl14ZaWVHLcDqaDyWGlR+O08n8oCy91YYxg+8J
        AMC2u9se3dr8wQzGgyNSGWZVGMxOnwAweGoRVMyWRTnBQU9q78S4tm0Xic4I8Z5yrYh64/3Znr37
        oBRR/vn26uvkw9W3ZvE2PP56vLHv/zbP97cPZ3770k3dNbSJTp8COuNPeHZhBoBOVZ32Pkod5UIJ
        gCoUsTJO2q5xu0R+skR5usRsiXfWmaCIQQUD7MmuB+CUxKCIGvBaxxCsK4Djqs1JG4ZnKyUo0KFh
        UUTWGWAJUUsMZrTEHb7w3yX/e/84SzWYTWRFh7gP+O40P/JFHfyKL8aBG+ssl3kwirtYkMXXe+/W
        p3PA+GL0WAdf1ZKLfzKuLXh9WBPsN7MnJ0dSvCjq8TQdJ4cGkRsWU+Ub6woT6mBPW5Pskn8AAAD/
        /wMAGrTNfzQDAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8af843464fbe2ec7-LAX
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 07 Aug 2024 15:22:33 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - user-jt0khdjhkecks0yodhgozy8e
      openai-processing-ms:
      - '411'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '200000'
      x-ratelimit-remaining-requests:
      - '9982'
      x-ratelimit-remaining-tokens:
      - '198972'
      x-ratelimit-reset-requests:
      - 2m32.836s
      x-ratelimit-reset-tokens:
      - 308ms
      x-request-id:
      - req_fff8e52a6b6397e8d80e94dfb5a15c0b
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "You are a helpful assistant."},
      {"role": "user", "content": "\nA prompt is a text paragraph that outlines the
      expected actions and instructs the large language model (LLM) to generate a
      specific output. This prompt is concatenated with the input text, and the model
      then creates the required output.\nThis describes the full template how the
      prompt is concatenated with the input to produce the output:\n\n```\n\n{prompt}\nInput:
      {category}\nOutput: {skill_0}\n```\n\nHere:\n- \"Input: {category}\" is input
      template,\n- \"{prompt}\" is the LLM prompt,\n- \"Output: {skill_0}\" is the
      output template.\n\nModel can produce erroneous output if a prompt is not well
      defined. In our collaboration, we\u2019ll work together to refine a prompt.
      The process consists of two main steps:\n\n## Step 1\nI will provide you with
      the current prompt along with prediction examples. Each example contains the
      input text, the final prediction produced by the model, and the user feedback.
      User feedback indicates whether the model prediction is correct or not. Your
      task is to analyze the examples and user feedback, determining whether the existing
      instruction is describing the task reflected by these examples precisely, and
      suggests changes to the prompt to address the incorrect predictions.\n\n## Step
      2\nNext, you will carefully review your reasoning in step 1, integrate the insights
      to refine the prompt, and provide me with the new prompt that improves the model\u2019s
      performance."}, {"role": "assistant", "content": "Sure, I\u2019d be happy to
      help you with this prompt engineering problem. Please provide me with the current
      prompt and the examples with user feedback."}, {"role": "user", "content": "\n##
      Current prompt\n...\n\n## Examples\n### Example #0\n\nInput: Macronutrients\n\nOutput:
      Macronutrients are nutrients that provide calories or energy. They are needed
      in large amounts and include carbohydrates, proteins, and fats.\n\nUser feedback:
      Prediction is incorrect. Correct answer: \"Carbohydrates, Proteins, Fats\"\n\n\n###
      Example #1\n\nInput: Vitamins\n\nOutput: Vitamins are essential nutrients that
      your body needs in small amounts to work properly. There are 13 essential vitamins
      that are divided into two categories: water-soluble vitamins (B vitamins and
      vitamin C) and fat-soluble vitamins (vitamins A, D, E, and K). Each vitamin
      has specific functions and benefits for your health.\n\nUser feedback: Prediction
      is incorrect. Correct answer: \"Vitamin A, Vitamin C, Vitamin D\"\n\n\n### Example
      #2\n\nInput: Minerals\n\nOutput: Minerals are naturally occurring substances
      that are solid and have a crystalline structure.\n\nUser feedback: Prediction
      is incorrect. Correct answer: \"Calcium, Iron, Magnesium\"\n\n\n\nSummarize
      your analysis about incorrect predictions and suggest changes to the prompt."}],
      "model": "gpt-4", "max_tokens": 1000, "seed": 47, "temperature": 0.0}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '2942'
      content-type:
      - application/json
      cookie:
      - __cf_bm=X_I2i8FqzaTRQfyHYjfeD_fsJ4sEoXtBbIYFou1daXU-1723044145-1.0.1.1-wyhLrT3.4nRKoPdL2sJweicRd374lXyPEaMp6cCB0aJ0AyZBnoBz.aairkyjnCTKAtMtXst41wGd1bKgmdUpVg;
        _cfuvid=8mCgr47xxaBGxkWwPjLViJ3G64Wv3Z3XVxFRpzZ83uY-1723044145806-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.10.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//dFRNTxwxDL3vr7DCdVixZYHCraJCVaVWVPRQqVshb+KdSckkI9uzsEL8
        9yqZ2Q9AvYw0duy89/yc5wmA8c5cgbENqm27cHyptq2/ztxlur3pv9vZj83dafNrc3rWfl6fmypX
        pOVfsrqtmtrUdoHUpzikLRMq5a6ziw+nJ/P57GxeEm1yFHJZ3enx/PjkfHY6VjTJWxJzBb8nAADP
        5ZuxRUdP5gpOqm2kJRGsyVztDgEYTiFHDIp4UYxqqn3SpqgUC9yjI/gUMWzEyyL+bAhsz0xRoePU
        dgpC1ApogiWBj6LcW/WxBm0ICvic6zitvSNAcKToAzmgpy5gxCwBJAZHKx/98LcqxT52vYJFpTrx
        Zgpf0iOtiStYopCDFMupXohhReSWaB8q8ArYdYQsoA3q7ogAMuU7aUCHELxovsprwZ8PrzAE6KMj
        LnW1X1PcAaggJi0E9kD5kMV0ERfxpsQwD7eCx4biARUvsDDf0HKKvbKnqLIw1YFQo0oCCDYxk9U3
        srSviitY9vpeBPDR+Yx6L8EGHjEquQPab1v5KU0rWJhr5GVqNo5zgwpuOSn5KBXcYIY7hWwBwZag
        Q1XimGmlpRCvyYEf+CZtaKeDAAo8UghFoKMjuOvrmiTDuW4w1jT6auunJvXBZTcxrX2etKadsV67
        qnDZ3TLa5u3UGAsYbTCOAg/z//8cC8Xhkj2YuvduwFIMkjfGvbZYFgLlIXdfJX6H672PxLLvtqP1
        Oj1cQKZVL5gXP/YhjPGX3UaHVHecljLmd/FMSZp7JpQU8/aKps6U7MsE4E95OfpXj4EZdL/X9EAx
        Nzw7vxz6mf0jtc/OLj6OWU2KYZ+4mF9MRohGNqLU3q98rIk79uUlKUReJv8AAAD//wMA74tzkkAF
        AAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8af8434abc9b2ec7-LAX
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 07 Aug 2024 15:22:42 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - user-jt0khdjhkecks0yodhgozy8e
      openai-processing-ms:
      - '8195'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '10000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '8335'
      x-ratelimit-reset-requests:
      - 8.64s
      x-ratelimit-reset-tokens:
      - 9.99s
      x-request-id:
      - req_ccb0d83bffb5fd3fbb1258787a3665ef
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "You are a helpful assistant."},
      {"role": "user", "content": "\nA prompt is a text paragraph that outlines the
      expected actions and instructs the large language model (LLM) to generate a
      specific output. This prompt is concatenated with the input text, and the model
      then creates the required output.\nThis describes the full template how the
      prompt is concatenated with the input to produce the output:\n\n```\n\n{prompt}\nInput:
      {category}\nOutput: {skill_0}\n```\n\nHere:\n- \"Input: {category}\" is input
      template,\n- \"{prompt}\" is the LLM prompt,\n- \"Output: {skill_0}\" is the
      output template.\n\nModel can produce erroneous output if a prompt is not well
      defined. In our collaboration, we\u2019ll work together to refine a prompt.
      The process consists of two main steps:\n\n## Step 1\nI will provide you with
      the current prompt along with prediction examples. Each example contains the
      input text, the final prediction produced by the model, and the user feedback.
      User feedback indicates whether the model prediction is correct or not. Your
      task is to analyze the examples and user feedback, determining whether the existing
      instruction is describing the task reflected by these examples precisely, and
      suggests changes to the prompt to address the incorrect predictions.\n\n## Step
      2\nNext, you will carefully review your reasoning in step 1, integrate the insights
      to refine the prompt, and provide me with the new prompt that improves the model\u2019s
      performance."}, {"role": "assistant", "content": "Sure, I\u2019d be happy to
      help you with this prompt engineering problem. Please provide me with the current
      prompt and the examples with user feedback."}, {"role": "user", "content": "\n##
      Current prompt\n...\n\n## Examples\n### Example #0\n\nInput: Macronutrients\n\nOutput:
      Macronutrients are nutrients that provide calories or energy. They are needed
      in large amounts and include carbohydrates, proteins, and fats.\n\nUser feedback:
      Prediction is incorrect. Correct answer: \"Carbohydrates, Proteins, Fats\"\n\n\n###
      Example #1\n\nInput: Vitamins\n\nOutput: Vitamins are essential nutrients that
      your body needs in small amounts to work properly. There are 13 essential vitamins
      that are divided into two categories: water-soluble vitamins (B vitamins and
      vitamin C) and fat-soluble vitamins (vitamins A, D, E, and K). Each vitamin
      has specific functions and benefits for your health.\n\nUser feedback: Prediction
      is incorrect. Correct answer: \"Vitamin A, Vitamin C, Vitamin D\"\n\n\n### Example
      #2\n\nInput: Minerals\n\nOutput: Minerals are naturally occurring substances
      that are solid and have a crystalline structure.\n\nUser feedback: Prediction
      is incorrect. Correct answer: \"Calcium, Iron, Magnesium\"\n\n\n\nSummarize
      your analysis about incorrect predictions and suggest changes to the prompt."},
      {"role": "assistant", "content": "## Analysis\nThe current prompt seems to be
      instructing the model to provide a detailed explanation or definition of the
      input category. However, based on the user feedback, it appears that the users
      are expecting a list of items that fall under the given category, not a definition
      or explanation.\n\nFor example, when the input is \"Macronutrients\", the model
      provides a correct definition of macronutrients, but the user feedback indicates
      that they wanted a list of macronutrients, i.e., \"Carbohydrates, Proteins,
      Fats\". The same pattern is observed in the other examples as well.\n\n## Suggested
      Changes\nThe prompt should be revised to instruct the model to list examples
      of the given category, rather than providing a definition or explanation. The
      model should be guided to understand that the user is asking for examples of
      the category, not a description of it."}, {"role": "user", "content": "\nNow
      please carefully review your reasoning in Step 1 and help with Step 2: refining
      the prompt.\n\n## Current prompt\n...\n\n## Follow this guidance to refine the
      prompt:\n\n1. The new prompt should should describe the task precisely, and
      address the points raised in the user feedback.\n\n2. The new prompt should
      be similar to the current prompt, and only differ in the parts that address
      the issues you identified in Step 1.\n    Example:\n    - Current prompt: \"Generate
      a summary of the input text.\"\n    - New prompt: \"Generate a summary of the
      input text. Pay attention to the original style.\"\n\n3. Reply only with the
      new prompt. Do not include input and output templates in the prompt.\n"}], "model":
      "gpt-4", "max_tokens": 1000, "seed": 47, "temperature": 0.0}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '4590'
      content-type:
      - application/json
      cookie:
      - __cf_bm=X_I2i8FqzaTRQfyHYjfeD_fsJ4sEoXtBbIYFou1daXU-1723044145-1.0.1.1-wyhLrT3.4nRKoPdL2sJweicRd374lXyPEaMp6cCB0aJ0AyZBnoBz.aairkyjnCTKAtMtXst41wGd1bKgmdUpVg;
        _cfuvid=8mCgr47xxaBGxkWwPjLViJ3G64Wv3Z3XVxFRpzZ83uY-1723044145806-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.10.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//VFDLbsIwELznK1Z7BpQAgiY3Lm0PldpTpapUyDibxNSxLXvTghD/XjmE
        Ry+2NLMzmpljAoCqxAJQNoJl6/Q4j5/Zaz99Xy3p8PGU/5r89eHtedU+7nAUFXa7I8kX1UTa1mli
        Zc2Zlp4EU3TNltNZOp9ni1lPtLYkHWW14/F8nC6y2aBorJIUsIDPBADg2L8xmylpjwWkowvSUgii
        JiyuRwDorY4IihBUYGEYRzdSWsNk+rhrfFGBgfYiJg7AjWCohNbQmZI8cENQqx8yIAVTbf1hssZ7
        L09VF0TsYDqtB/x0Dadt7bzdhoG/4pUyKjQbTyJYE4MEtg579pQAfPUjdP96ofO2dbxh+00mGuZp
        dvbD2943NhsWQrYs9J0qy5IhIYZDYGo3lTI1eedVv0nf45T8AQAA//8DAKBkYxkKAgAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8af843815b362ec7-LAX
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 07 Aug 2024 15:22:45 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - user-jt0khdjhkecks0yodhgozy8e
      openai-processing-ms:
      - '2403'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '10000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '7946'
      x-ratelimit-reset-requests:
      - 8.64s
      x-ratelimit-reset-tokens:
      - 12.324s
      x-request-id:
      - req_c68cfbccb17d608786620a458976cb0d
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "\"List examples that fall
      under the given category.\""}, {"role": "user", "content": "Input: Macronutrients"}],
      "model": "gpt-3.5-turbo", "max_tokens": 1000, "seed": 47, "temperature": 0.0,
      "tool_choice": {"type": "function", "function": {"name": "Output"}}, "tools":
      [{"type": "function", "function": {"name": "Output", "description": "Correctly
      extracted `Output` with all the required parameters with correct types", "parameters":
      {"properties": {"skill_0": {"description": "Output:", "title": "Skill 0", "type":
      "string"}}, "required": ["skill_0"], "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '619'
      content-type:
      - application/json
      cookie:
      - __cf_bm=X_I2i8FqzaTRQfyHYjfeD_fsJ4sEoXtBbIYFou1daXU-1723044145-1.0.1.1-wyhLrT3.4nRKoPdL2sJweicRd374lXyPEaMp6cCB0aJ0AyZBnoBz.aairkyjnCTKAtMtXst41wGd1bKgmdUpVg;
        _cfuvid=8mCgr47xxaBGxkWwPjLViJ3G64Wv3Z3XVxFRpzZ83uY-1723044145806-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.10.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//bFJdb5swFH3nV1j3mVSQpGnG4yote5i2EHVV1WVCjuOAV9vXsy9Voyj/
        fYJQoNH8gKxzfD649iliDNQeMgai4iSM05NPJEx4+5Z8Xa5y/7Sezp83D6sqN99fnx85xI0Cd3+k
        oHfVjUDjtCSF9kILLznJxjW9m86S+TxdLFrC4F7qRlY6msxubidU+x1OknR62ykrVEIGyNiviDHG
        Tu236Wj38g0ylsTviJEh8FJC1h9iDDzqBgEeggrELUE8kAItSdvUtrXWI4IQdSG41kPwZZ1G+2FQ
        XOtC0dM6/5v+1JsFPbh8uXp8zTf3n3GUd7E+urbQobaiH9CI7/HsKowxsNy02h81uZqulIwB92Vt
        pKWmNZy2EF6U1kWyhWwLa48klQ0xu+d+h9Vx7znJELMvnMIWzvDB7Bz9b/97NCIvD3Xguptdh5/7
        y9BYOo+7cDVbOCirQlV4yUP7jxAI3SW7yWkToP5wj+A8GkcF4Yu0jeHy7mIHwzMbyHTRkYTE9QhP
        ZlFXEMIxkDTFQdlSeudV/wSic/QPAAD//wMAqro8SAEDAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8af84394d9182ec7-LAX
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 07 Aug 2024 15:22:46 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - user-jt0khdjhkecks0yodhgozy8e
      openai-processing-ms:
      - '549'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '200000'
      x-ratelimit-remaining-requests:
      - '9982'
      x-ratelimit-remaining-tokens:
      - '198980'
      x-ratelimit-reset-requests:
      - 2m28.896s
      x-ratelimit-reset-tokens:
      - 306ms
      x-request-id:
      - req_163336f0a9dd82e1273371e9ce67d83d
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "\"List examples that fall
      under the given category.\""}, {"role": "user", "content": "Input: Vitamins"}],
      "model": "gpt-3.5-turbo", "max_tokens": 1000, "seed": 47, "temperature": 0.0,
      "tool_choice": {"type": "function", "function": {"name": "Output"}}, "tools":
      [{"type": "function", "function": {"name": "Output", "description": "Correctly
      extracted `Output` with all the required parameters with correct types", "parameters":
      {"properties": {"skill_0": {"description": "Output:", "title": "Skill 0", "type":
      "string"}}, "required": ["skill_0"], "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '613'
      content-type:
      - application/json
      cookie:
      - __cf_bm=X_I2i8FqzaTRQfyHYjfeD_fsJ4sEoXtBbIYFou1daXU-1723044145-1.0.1.1-wyhLrT3.4nRKoPdL2sJweicRd374lXyPEaMp6cCB0aJ0AyZBnoBz.aairkyjnCTKAtMtXst41wGd1bKgmdUpVg;
        _cfuvid=8mCgr47xxaBGxkWwPjLViJ3G64Wv3Z3XVxFRpzZ83uY-1723044145806-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.10.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//bFJNT+MwEL3nV1hzblEKbaG5IST20GVZaUFQbVeR605Sg79kTxaqqv8d
        OQlJqMghst7L+8iMDwljILeQMRA7TkI7NV6Q0OH5x4tMZ1Nlb1bTy1n5a7EUmtyuhFFU2M0LCvpU
        nQmrnUKS1jS08MgJo+vk8vwinU4n83lNaLtFFWWlo/HF2WxMld/YcTo5n7XKnZUCA2Tsb8IYY4f6
        HTuaLb5DxtLRJ6IxBF4iZN1HjIG3KiLAQ5CBuCEY9aSwhtDE2qZSakCQtSoXXKk+uHkOg3M/KK5U
        fneL+0LfPND97d3bSi4fnh5/L//Q9SCvsd67ulBRGdENaMB3eHYSxhgYrmvtfUWuohMlY8B9WWk0
        FFvDYQ3hVSqVp2vI1vBTBmL4zuNiArMF+y+Ja2nCGo7wxeiYfHf+NxiPx6IKXLVza/FjtwhlS+ft
        JpzMFQppZNjlHnmo/w8CWddkx5w6AaovOwTnrXaUk31FEw2v5o0d9FesJyftZQCyxFWPL+ZJ2w/C
        PhDqvJCmRO+87LafHJMPAAAA//8DAJTVyOv8AgAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8af843994f382ec7-LAX
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 07 Aug 2024 15:22:47 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - user-jt0khdjhkecks0yodhgozy8e
      openai-processing-ms:
      - '245'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '200000'
      x-ratelimit-remaining-requests:
      - '9981'
      x-ratelimit-remaining-tokens:
      - '198981'
      x-ratelimit-reset-requests:
      - 2m36.826s
      x-ratelimit-reset-tokens:
      - 305ms
      x-request-id:
      - req_9787fbb7d2f0841b2f956110afbfc0ce
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "\"List examples that fall
      under the given category.\""}, {"role": "user", "content": "Input: Minerals"}],
      "model": "gpt-3.5-turbo", "max_tokens": 1000, "seed": 47, "temperature": 0.0,
      "tool_choice": {"type": "function", "function": {"name": "Output"}}, "tools":
      [{"type": "function", "function": {"name": "Output", "description": "Correctly
      extracted `Output` with all the required parameters with correct types", "parameters":
      {"properties": {"skill_0": {"description": "Output:", "title": "Skill 0", "type":
      "string"}}, "required": ["skill_0"], "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '613'
      content-type:
      - application/json
      cookie:
      - __cf_bm=X_I2i8FqzaTRQfyHYjfeD_fsJ4sEoXtBbIYFou1daXU-1723044145-1.0.1.1-wyhLrT3.4nRKoPdL2sJweicRd374lXyPEaMp6cCB0aJ0AyZBnoBz.aairkyjnCTKAtMtXst41wGd1bKgmdUpVg;
        _cfuvid=8mCgr47xxaBGxkWwPjLViJ3G64Wv3Z3XVxFRpzZ83uY-1723044145806-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.10.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//bFLJbtswEL3rK4g524HkpW50S4Mgh6TwpQGK1oFAUyOZNjeQo8CG4X8v
        KCuSYlQHgXhPb9EMzwljIEvIGYgdJ6Gdmt6T0PRYr/Yf1enXk1q/Cf76WM72h5eP9BkmUWG3exT0
        qboTVjuFJK250sIjJ4yu2Wo2TxeL7NuqJbQtUUVZ7Wg6v1tOqfFbO02z2bJT7qwUGCBnfxPGGDu3
        79jRlHiEnKWTT0RjCLxGyPuPGANvVUSAhyADcUMwGUhhDaGJtU2j1Igga1UhuFJD8PU5j87DoLhS
        BZWLp3WW/nmjByPo5++H42l+/LHfjfKu1ifXFqoaI/oBjfgez2/CGAPDdatdN+QaulEyBtzXjUZD
        sTWcNxAOUqki3UC+gVcZiOGRx8UEZiumpUHPVdjABb4YXZL/nd9H4/FYNYGrbm4dfukXoWztvN2G
        m7lCJY0Mu8IjD+3/QSDrrtkxp02A5ssOwXmrHRVkD2ii4ffl1Q6GKzaQWXcZgCxxNeD3y6TrB+EU
        CHVRSVOjd172208uyT8AAAD//wMAXcSlbfwCAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8af8439c7b852ec7-LAX
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 07 Aug 2024 15:22:47 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - user-jt0khdjhkecks0yodhgozy8e
      openai-processing-ms:
      - '205'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '200000'
      x-ratelimit-remaining-requests:
      - '9980'
      x-ratelimit-remaining-tokens:
      - '198981'
      x-ratelimit-reset-requests:
      - 2m44.971s
      x-ratelimit-reset-tokens:
      - 305ms
      x-request-id:
      - req_e8ecd733d3d98911e5ca30678350df33
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "..."}, {"role": "user", "content":
      "Input: Proteins, Carbohydrates, Fats"}], "model": "gpt-3.5-turbo", "max_tokens":
      1000, "seed": 47, "temperature": 0.0, "tool_choice": {"type": "function", "function":
      {"name": "Output"}}, "tools": [{"type": "function", "function": {"name": "Output",
      "description": "Correctly extracted `Output` with all the required parameters
      with correct types", "parameters": {"properties": {"skill_1": {"description":
      "Output:", "title": "Skill 1", "type": "string"}}, "required": ["skill_1"],
      "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '584'
      content-type:
      - application/json
      cookie:
      - __cf_bm=X_I2i8FqzaTRQfyHYjfeD_fsJ4sEoXtBbIYFou1daXU-1723044145-1.0.1.1-wyhLrT3.4nRKoPdL2sJweicRd374lXyPEaMp6cCB0aJ0AyZBnoBz.aairkyjnCTKAtMtXst41wGd1bKgmdUpVg;
        _cfuvid=8mCgr47xxaBGxkWwPjLViJ3G64Wv3Z3XVxFRpzZ83uY-1723044145806-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.10.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//bFJdb5swFH3nV1j3mVTQJl3KW9Qpe6i67WGrtC4TchwHvBpfx/cSNY3y
        3ycgBRrND8g6x+eDax8jIcBsIBOgSsmq8nZyx6qq98+7xf7x6W1e7n7cL2jP86efX+8IIW4UuP6r
        Fb+rrhRW3mo26DpaBS1ZN67pp+ubZDpNb+ctUeFG20ZWeJ7cXM0mXIc1TpL0enZWlmiUJsjE70gI
        IY7tt+noNvoVMpHE70iliWShIesPCQEBbYOAJDLE0jHEA6nQsXZNbVdbOyIY0eZKWjsEd+s42g+D
        ktbmizclD0v5/GX22fEu2b8uf9mHB34c5XXWB98W2tZO9QMa8T2eXYQJAU5WrfZbzb7mC6UQIENR
        V9px0xqOK6AXY22eriBbwfeArI2jWNzLsMbysAmSNcViKZlWcIIPZqfof/s/oxEFva1J2vPszvip
        vwyLhQ+4povZwtY4Q2UetKT2H4EYfZfd5LQJUH+4R/ABK88544t2jeF82tnB8MwGMr09k4ws7QhP
        kuhcEOhArKt8a1yhgw+mfwLRKfoHAAD//wMAsM5I7wEDAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8af8439faf0d2ec7-LAX
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 07 Aug 2024 15:22:48 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - user-jt0khdjhkecks0yodhgozy8e
      openai-processing-ms:
      - '534'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '200000'
      x-ratelimit-remaining-requests:
      - '9979'
      x-ratelimit-remaining-tokens:
      - '198987'
      x-ratelimit-reset-requests:
      - 2m53.103s
      x-ratelimit-reset-tokens:
      - 303ms
      x-request-id:
      - req_e2ba78dcece125c7e2f6b4f98b67c568
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "..."}, {"role": "user", "content":
      "Input: List examples of vitamins"}], "model": "gpt-3.5-turbo", "max_tokens":
      1000, "seed": 47, "temperature": 0.0, "tool_choice": {"type": "function", "function":
      {"name": "Output"}}, "tools": [{"type": "function", "function": {"name": "Output",
      "description": "Correctly extracted `Output` with all the required parameters
      with correct types", "parameters": {"properties": {"skill_1": {"description":
      "Output:", "title": "Skill 1", "type": "string"}}, "required": ["skill_1"],
      "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '580'
      content-type:
      - application/json
      cookie:
      - __cf_bm=X_I2i8FqzaTRQfyHYjfeD_fsJ4sEoXtBbIYFou1daXU-1723044145-1.0.1.1-wyhLrT3.4nRKoPdL2sJweicRd374lXyPEaMp6cCB0aJ0AyZBnoBz.aairkyjnCTKAtMtXst41wGd1bKgmdUpVg;
        _cfuvid=8mCgr47xxaBGxkWwPjLViJ3G64Wv3Z3XVxFRpzZ83uY-1723044145806-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.10.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//bFJda9swFH33rxD3OSm24zaJ37p2jG2UfZRuhGYYRVEcrfqqdA0LIf+9
        yHYsN8wP4nCOzz2XIx0TQkBsoSTA9hSZsnK6RKaalVkcfmbpI/202i9xYYqDTfO7wsEkOMzmL2d4
        dl0xo6zkKIzuZOY4RR6mZvN8lhZFdrNoBWW2XAZbbXE6u7qeYuM2Zppm+XXv3BvBuIeSPCeEEHJs
        z7Cj3vJ/UJJ0cmYU957WHMrhJ0LAGRkYoN4Lj1QjTKLIjEauw9q6kXIkoDGyYlTKGNx9xxGORVEp
        q23+4+E70ic9f13dP/nP4gt9fL35/TDK60YfbLvQrtFsKGikD3x5EUYIaKpa77cGbYMXTkKAurpR
        XGPYGo5r8C9CyipbQ7mGXwKpEprcTsgZfojwLsL7CD9G+HUNJ3iXd0r+h/+MWnR813gq+3p7/jTc
        lzS1dWbjL+qHndDC7yvHqW9rAI/Gdtkhp02A5t1Vg3VGWazQvHAdBs6X3TiILzGKedGLaJDKyGfp
        LOkXBH/wyFW1E7rmzjoxvJLklLwBAAD//wMAuMNFDCQDAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8af843a4bc7f2ec7-LAX
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 07 Aug 2024 15:22:49 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - user-jt0khdjhkecks0yodhgozy8e
      openai-processing-ms:
      - '802'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '200000'
      x-ratelimit-remaining-requests:
      - '9979'
      x-ratelimit-remaining-tokens:
      - '198988'
      x-ratelimit-reset-requests:
      - 3m0.94s
      x-ratelimit-reset-tokens:
      - 303ms
      x-request-id:
      - req_d1f4d07d617e80d43456a439525e1ac4
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "..."}, {"role": "user", "content":
      "Input: List examples of minerals"}], "model": "gpt-3.5-turbo", "max_tokens":
      1000, "seed": 47, "temperature": 0.0, "tool_choice": {"type": "function", "function":
      {"name": "Output"}}, "tools": [{"type": "function", "function": {"name": "Output",
      "description": "Correctly extracted `Output` with all the required parameters
      with correct types", "parameters": {"properties": {"skill_1": {"description":
      "Output:", "title": "Skill 1", "type": "string"}}, "required": ["skill_1"],
      "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '580'
      content-type:
      - application/json
      cookie:
      - __cf_bm=X_I2i8FqzaTRQfyHYjfeD_fsJ4sEoXtBbIYFou1daXU-1723044145-1.0.1.1-wyhLrT3.4nRKoPdL2sJweicRd374lXyPEaMp6cCB0aJ0AyZBnoBz.aairkyjnCTKAtMtXst41wGd1bKgmdUpVg;
        _cfuvid=8mCgr47xxaBGxkWwPjLViJ3G64Wv3Z3XVxFRpzZ83uY-1723044145806-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.10.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//bFLLTuMwFN3nK6y7TlFTEjrNDjGCKcwMQl2AoKPIddzU4Jfsa2ag6r+j
        PEhCNV5E1jk+j1x7HxECooScANtRZMrKyQKZep2fPd5fs/C+ouxndZte/r5cLh++zVKIa4XZPHOG
        n6oTZpSVHIXRLc0cp8hr12Q+O52maXK2aAhlSi5rWWVxcnqSTTC4jZlMk1nWKXdGMO4hJ08RIYTs
        m2/dUZf8H+RkGn8iintPKw55f4gQcEbWCFDvhUeqEeKBZEYj13VtHaQcEWiMLBiVcghu1360HwZF
        pSyuVvf2omR3N9dZltJ5sjz/a39k5a9RXmv9ZptC26BZP6AR3+P5URghoKlqtLcBbcAjJSFAXRUU
        11i3hv0a/IuQskjWkK/hysgyJishX7mLyXdBldFlTO4CdfgekwtjLXdrOMAX00P0v/2f0agc3wZP
        ZTfDDj/0lyJNZZ3Z+KMZw1Zo4XeF49Q3/woejW2z65wmAcKX+wTrjLJYoHnhujacL1o7GJ7bQCZZ
        R6JBKgd8kUZdP/BvHrkqtkJX3Fkn+pcQHaIPAAAA//8DAJaHxkAIAwAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8af843aaab222ec7-LAX
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 07 Aug 2024 15:22:49 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - user-jt0khdjhkecks0yodhgozy8e
      openai-processing-ms:
      - '487'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '200000'
      x-ratelimit-remaining-requests:
      - '9978'
      x-ratelimit-remaining-tokens:
      - '198988'
      x-ratelimit-reset-requests:
      - 3m8.616s
      x-ratelimit-reset-tokens:
      - 303ms
      x-request-id:
      - req_12f1c5c7e10e2dac45d0799d219a4b01
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "You are a helpful assistant."},
      {"role": "user", "content": "\nA prompt is a text paragraph that outlines the
      expected actions and instructs the large language model (LLM) to generate a
      specific output. This prompt is concatenated with the input text, and the model
      then creates the required output.\nThis describes the full template how the
      prompt is concatenated with the input to produce the output:\n\n```\n\n{prompt}\nInput:
      {category}\nOutput: {skill_0}\n```\n\nHere:\n- \"Input: {category}\" is input
      template,\n- \"{prompt}\" is the LLM prompt,\n- \"Output: {skill_0}\" is the
      output template.\n\nModel can produce erroneous output if a prompt is not well
      defined. In our collaboration, we\u2019ll work together to refine a prompt.
      The process consists of two main steps:\n\n## Step 1\nI will provide you with
      the current prompt along with prediction examples. Each example contains the
      input text, the final prediction produced by the model, and the user feedback.
      User feedback indicates whether the model prediction is correct or not. Your
      task is to analyze the examples and user feedback, determining whether the existing
      instruction is describing the task reflected by these examples precisely, and
      suggests changes to the prompt to address the incorrect predictions.\n\n## Step
      2\nNext, you will carefully review your reasoning in step 1, integrate the insights
      to refine the prompt, and provide me with the new prompt that improves the model\u2019s
      performance."}, {"role": "assistant", "content": "Sure, I\u2019d be happy to
      help you with this prompt engineering problem. Please provide me with the current
      prompt and the examples with user feedback."}, {"role": "user", "content": "\n##
      Current prompt\n\"List examples that fall under the given category.\"\n\n##
      Examples\n### Example #0\n\nInput: Macronutrients\n\nOutput: Proteins, Carbohydrates,
      Fats\n\nUser feedback: Prediction is incorrect. Correct answer: \"Carbohydrates,
      Proteins, Fats\"\n\n\n### Example #1\n\nInput: Vitamins\n\nOutput: List examples
      of vitamins\n\nUser feedback: Prediction is incorrect. Correct answer: \"Vitamin
      A, Vitamin C, Vitamin D\"\n\n\n### Example #2\n\nInput: Minerals\n\nOutput:
      List examples of minerals\n\nUser feedback: Prediction is incorrect. Correct
      answer: \"Calcium, Iron, Magnesium\"\n\n\n\nSummarize your analysis about incorrect
      predictions and suggest changes to the prompt."}], "model": "gpt-4", "max_tokens":
      1000, "seed": 47, "temperature": 0.0}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '2512'
      content-type:
      - application/json
      cookie:
      - __cf_bm=X_I2i8FqzaTRQfyHYjfeD_fsJ4sEoXtBbIYFou1daXU-1723044145-1.0.1.1-wyhLrT3.4nRKoPdL2sJweicRd374lXyPEaMp6cCB0aJ0AyZBnoBz.aairkyjnCTKAtMtXst41wGd1bKgmdUpVg;
        _cfuvid=8mCgr47xxaBGxkWwPjLViJ3G64Wv3Z3XVxFRpzZ83uY-1723044145806-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.10.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA3RU32sjNxB+z18xyA/XgmPiJK1bv7XloIGDHjRQjroEWZrdnbN+VTOKzxz534u0
        e/am174sSKP55vu+mZ3PVwCKrNqCMoMW45O7/lGMP5qPjw/vSdPPe/3B//32j++K/PbhcES1rBlx
        /xGNfMlameiTQ6EYxrDJqAUr6npze3dzf7/e3LSAjxZdTeuTXN9f33y/vpsyhkgGWW3hzysAgM/t
        W7kFi5/UFlp+u/HIrHtU2/MjAJWjqzdKMxOLDqKWl6CJQTA0uosF/BS0OzHxLuzCuxgPFHrQAjIg
        4CddhTDoYNtFYczQIdq9NoclkAAjegYZpowmCIghRAETQ62OQdwJegyYtVT0ETqhEbQQi6QiK6jl
        HwK8HUvC4mY5AzQxZzQVhiwGoY7QvmYYO/Da5BiKZMIgvIR9kQtpr/MBbWWsGShMgLBHowtjexez
        xVyB6oGk6jpqBktdhxmDrOBxIAYufY8sM9FjAeqHijcpay4CJzTUkZmwKYyFmuQlHAcyw9mskvPo
        1JRU2Y7vU44+yerfDq1bW87H27lhTD65E2RMbfJGSSEVgSPJMKIOWTPCTr0jlrmROwWpJgaLdgkU
        WFDb6kvK8ZlsVXbWNff/mUR7CuO0eKrtdjyZRsGS0YJfjYol2+SXYDHXSR25iubDpetN+mIBv4/W
        o4VfBh16bDP7GEFbm5ErNjICMRfk5cw6MLE4W5vjta2Vc2uTI0OyggcBHtqDqjUXM+cncZKN/yE6
        oxvdjTODq8w+5tOy+UAdpMhMe4fVy69n4hvqmidvGI6vBmqcI/52/DV+xYxvuKafPcj4TEwxbGt8
        p97/L81meaedG11uJXp6xnDmuoKHOU9XJ0IG9OeJnf0alMFE72PQjuQEMQP5FLPoYHC1U41t63nj
        h/ZLDyaP+1JJvjJ4Wg1TY7QxpZ2qfRZFk2tiOcXAyKv5JsvYFdZ1g4bi3HT/cl6NLvYpxz1P8fN9
        R4F4eMqoOYa6BlliUi36cgXwV1vB5dVWVaOKJ4kHDBXw/ofNiKcu2/4Svb2bFrSSKNpdApv15mqi
        qPjEgv6po9BjTpnaSm5CXq7+AQAA//8DAIvJZxKJBgAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8af843aedf7d2ec7-LAX
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 07 Aug 2024 15:23:02 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - user-jt0khdjhkecks0yodhgozy8e
      openai-processing-ms:
      - '12345'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '10000'
      x-ratelimit-remaining-requests:
      - '9998'
      x-ratelimit-remaining-tokens:
      - '8443'
      x-ratelimit-reset-requests:
      - 10.007s
      x-ratelimit-reset-tokens:
      - 9.342s
      x-request-id:
      - req_5c7604b102928ee2e8425c5cefb21b90
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "You are a helpful assistant."},
      {"role": "user", "content": "\nA prompt is a text paragraph that outlines the
      expected actions and instructs the large language model (LLM) to generate a
      specific output. This prompt is concatenated with the input text, and the model
      then creates the required output.\nThis describes the full template how the
      prompt is concatenated with the input to produce the output:\n\n```\n\n{prompt}\nInput:
      {category}\nOutput: {skill_0}\n```\n\nHere:\n- \"Input: {category}\" is input
      template,\n- \"{prompt}\" is the LLM prompt,\n- \"Output: {skill_0}\" is the
      output template.\n\nModel can produce erroneous output if a prompt is not well
      defined. In our collaboration, we\u2019ll work together to refine a prompt.
      The process consists of two main steps:\n\n## Step 1\nI will provide you with
      the current prompt along with prediction examples. Each example contains the
      input text, the final prediction produced by the model, and the user feedback.
      User feedback indicates whether the model prediction is correct or not. Your
      task is to analyze the examples and user feedback, determining whether the existing
      instruction is describing the task reflected by these examples precisely, and
      suggests changes to the prompt to address the incorrect predictions.\n\n## Step
      2\nNext, you will carefully review your reasoning in step 1, integrate the insights
      to refine the prompt, and provide me with the new prompt that improves the model\u2019s
      performance."}, {"role": "assistant", "content": "Sure, I\u2019d be happy to
      help you with this prompt engineering problem. Please provide me with the current
      prompt and the examples with user feedback."}, {"role": "user", "content": "\n##
      Current prompt\n\"List examples that fall under the given category.\"\n\n##
      Examples\n### Example #0\n\nInput: Macronutrients\n\nOutput: Proteins, Carbohydrates,
      Fats\n\nUser feedback: Prediction is incorrect. Correct answer: \"Carbohydrates,
      Proteins, Fats\"\n\n\n### Example #1\n\nInput: Vitamins\n\nOutput: List examples
      of vitamins\n\nUser feedback: Prediction is incorrect. Correct answer: \"Vitamin
      A, Vitamin C, Vitamin D\"\n\n\n### Example #2\n\nInput: Minerals\n\nOutput:
      List examples of minerals\n\nUser feedback: Prediction is incorrect. Correct
      answer: \"Calcium, Iron, Magnesium\"\n\n\n\nSummarize your analysis about incorrect
      predictions and suggest changes to the prompt."}, {"role": "assistant", "content":
      "## Analysis\n\nLooking at the examples and the user feedback, it seems that
      the model is not consistently generating the expected output. \n\nIn Example
      #0, the model correctly identified the examples of macronutrients, but the user
      marked it as incorrect because the order of the items was different. This suggests
      that the user might be expecting a specific order in the output, which is not
      currently specified in the prompt.\n\nIn Example #1 and Example #2, the model
      simply repeated the input with the phrase \"List examples of\" prepended, instead
      of providing specific examples of vitamins and minerals. This indicates that
      the model did not understand the task correctly.\n\n## Suggested Changes\n\nTo
      address these issues, the prompt could be made more explicit. It should instruct
      the model to provide specific examples related to the input category, and if
      possible, in a specific order (if that''s what the user expects). \n\nHere''s
      a suggested revision:\n\n\"Provide specific examples that fall under the given
      category. If possible, list them in the order of their commonality or importance.\"
      \n\nThis revised prompt should guide the model to generate more accurate and
      detailed responses."}, {"role": "user", "content": "\nNow please carefully review
      your reasoning in Step 1 and help with Step 2: refining the prompt.\n\n## Current
      prompt\n\"List examples that fall under the given category.\"\n\n## Follow this
      guidance to refine the prompt:\n\n1. The new prompt should should describe the
      task precisely, and address the points raised in the user feedback.\n\n2. The
      new prompt should be similar to the current prompt, and only differ in the parts
      that address the issues you identified in Step 1.\n    Example:\n    - Current
      prompt: \"Generate a summary of the input text.\"\n    - New prompt: \"Generate
      a summary of the input text. Pay attention to the original style.\"\n\n3. Reply
      only with the new prompt. Do not include input and output templates in the prompt.\n"}],
      "model": "gpt-4", "max_tokens": 1000, "seed": 47, "temperature": 0.0}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '4539'
      content-type:
      - application/json
      cookie:
      - __cf_bm=X_I2i8FqzaTRQfyHYjfeD_fsJ4sEoXtBbIYFou1daXU-1723044145-1.0.1.1-wyhLrT3.4nRKoPdL2sJweicRd374lXyPEaMp6cCB0aJ0AyZBnoBz.aairkyjnCTKAtMtXst41wGd1bKgmdUpVg;
        _cfuvid=8mCgr47xxaBGxkWwPjLViJ3G64Wv3Z3XVxFRpzZ83uY-1723044145806-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.10.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA1SRQW/bMAyF7/4VhM5J4DRZluS8yw5ri156WIdAkWmbmySqIt01K/LfB3lu0l0E
        6H18wuPTWwVgqDF7MK636kLy8526uMu3j/ZT/fjc37VkKX37/Wf48tDdWzMrDj7+RKfvroXjkDwq
        cfyHXUarWF5dfr5Z1ev1crsaQeAGfbF1Sefreb1ZriZHz+RQzB6+VwAAb+NZssUGX80e6tm7ElDE
        dmj2lyEAk9kXxVgRErVRzewKHUfFOMZ9MveZX6hBkISOWnKAr7akF9DeKrTWexhigxm0R+joBSM4
        q9hxPi3gawuJRejocQaeRMtUAIrjNOfi47ZcKIPjEDhaT3oCzkAhcVYbHS6ezMd8GdtBbOklDt5P
        +vmysOcuZT7KxC96S5GkP2S0wrEsJ8rJjPRcAfwYix3+68qkzCHpQfkXxvLgdjsVa65/eKU3mwkq
        q/VXfVdvqimhkZMohkNLscOcMo09j3ucq78AAAD//wMAhjz2m14CAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8af843fe5c932ec7-LAX
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Wed, 07 Aug 2024 15:23:05 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - user-jt0khdjhkecks0yodhgozy8e
      openai-processing-ms:
      - '2504'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '10000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '7962'
      x-ratelimit-reset-requests:
      - 8.64s
      x-ratelimit-reset-tokens:
      - 12.228s
      x-request-id:
      - req_0526f85394347e3c1e53cf93f8dd5256
    status:
      code: 200
      message: OK
version: 1
