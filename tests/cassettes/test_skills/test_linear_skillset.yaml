interactions:
- request:
    body: '{"messages": [{"role": "user", "content": "Hey, how''s it going?"}], "model":
      "gpt-4", "max_tokens": 1000, "seed": 47, "temperature": 0.0}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '137'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//VFHBbuIwEL3nK6a+cIGqAdoCl2r3UpD6AatdVcgkk8TU8bieSWm24t8r
        mwC7Fx/emzfz3vNXBqBMqVagikZL0Xo7WR7eK131OfPP/f5+8XHgX7Lc/J2+/Lb5sxpHBe32WMhZ
        dVtQ6y2KIXeii4BaMG7NH6ezRT69z+eJaKlEG2W1l8l8cveQzwZFQ6ZAViv4kwEAfKU3enMlfqoV
        3I3PSIvMuka1ugwBqEA2IkozGxbtRI2vZEFO0CW7a7SWbmAzakE7+LEB7UooyY0EGv2BUCFa42oe
        w66TNNZgwDQVUJc9CMHpBvTU3cKaDlBoBxto0PqIgVCp+6d/7wesOtYxt+usHfDjJZCl2gfa8cBf
        8Mo4w802oGZy0TwLeZXYYwbwmorr/utC+UCtl63QG7q48NR76uD8RVdyuhxIIdH2is9n2eBPcc+C
        7bYyrsbgg0ktphTH7BsAAP//AwABRZh8PAIAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8b418a1668e05bd6-LIS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 16 Aug 2024 12:48:36 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=1IM.iaUW2oZJNjw2BXqD0SnhxL_MAlV.foIBmL0TvmA-1723812516-1.0.1.1-RXxanHmzbHlCwPCSQU.YNAHABpR1dhYuTKtFEwjGi4vepTrzNIFkPOOSZGGVPtJsZaUIMDBJ70Kv0XFiTqtv7w;
        path=/; expires=Fri, 16-Aug-24 13:18:36 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=dq3OnlAaw1hEjyJgjDU.XA8f8qCTjMczJ4wyOzrdJaA-1723812516243-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '1503'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '1000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '998993'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 60ms
      x-request-id:
      - req_ec1e4c74f5de5178b12130ef89df037a
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "user", "content": "Hey, how''s it going?"}], "model":
      "gpt-3.5-turbo", "max_tokens": 1000, "seed": 47, "temperature": 0.0}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '145'
      content-type:
      - application/json
      cookie:
      - __cf_bm=1IM.iaUW2oZJNjw2BXqD0SnhxL_MAlV.foIBmL0TvmA-1723812516-1.0.1.1-RXxanHmzbHlCwPCSQU.YNAHABpR1dhYuTKtFEwjGi4vepTrzNIFkPOOSZGGVPtJsZaUIMDBJ70Kv0XFiTqtv7w;
        _cfuvid=dq3OnlAaw1hEjyJgjDU.XA8f8qCTjMczJ4wyOzrdJaA-1723812516243-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA1SRwW7bMBBE7/qKLS+5yEZkx03iSw5BARtoDi1QoEARGBS1kphSXIa7qusG/veC
        tGK3Fx3mcRYzo7cCQNlGrUGZXosZgpvd719b8+X12+fH2++bev8Uvj592j4yVvKnZlUmB9UvaOTd
        NTc0BIdiyZ+wiagF09XqdrG8qxar6mMGAzXokq0LMlvOVzMZY02z62qxmpw9WYOs1vCjAAB4y9+U
        0Tf4W63hunxXBmTWHar1+RGAiuSSojSzZdFeVHmBhrygz7E36Bx9gO3VAC8jC2hIHUbBCCFSF/VQ
        AhNsoSF/JdDrXwgtorO+4xLqUbK1x4ggBD26AAcaYW+lB+0P0lvfZcUjNnPY0B6M9rCFU7CMhBp9
        ePg3YMR2ZJ0G8qNzk348N3bUhUg1T/yst9Zb7ncRNZNP7VgoqEyPBcBzXnb8bywVIg1BdkI/0aeD
        1c3pnLr8ywtcriYoJNpd9Jv7Ysqn+MCCw661vsMYos0z5xbH4i8AAAD//wMAUc8alGUCAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8b418a22eda95bd6-LIS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 16 Aug 2024 12:48:37 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '562'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '50000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '49998993'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 1ms
      x-request-id:
      - req_342fac4284a6e41d26b318a478c5e98c
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "..."}, {"role": "user", "content":
      "Input: Macronutrients"}], "model": "gpt-3.5-turbo", "max_tokens": 1000, "seed":
      47, "temperature": 0.0, "tool_choice": {"type": "function", "function": {"name":
      "skill_0"}}, "tools": [{"type": "function", "function": {"name": "skill_0",
      "description": "Correctly extracted `skill_0` with all the required parameters
      with correct types", "parameters": {"properties": {"skill_0": {"description":
      "Output:", "title": "Skill 0", "type": "string"}}, "required": ["skill_0"],
      "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '572'
      content-type:
      - application/json
      cookie:
      - __cf_bm=1IM.iaUW2oZJNjw2BXqD0SnhxL_MAlV.foIBmL0TvmA-1723812516-1.0.1.1-RXxanHmzbHlCwPCSQU.YNAHABpR1dhYuTKtFEwjGi4vepTrzNIFkPOOSZGGVPtJsZaUIMDBJ70Kv0XFiTqtv7w;
        _cfuvid=dq3OnlAaw1hEjyJgjDU.XA8f8qCTjMczJ4wyOzrdJaA-1723812516243-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//bFLBTuMwEL3nK6w5t6gJdKG5IZB6AWm1XFZsV5HjTlKD7TG2I1pV/Xfk
        JE1ChQ+W9d68eeNnHxPGQG4hZyB2PAht1Xz1+VFt14+v2b52uvqlU3zh5X2Z1al5qGAWFVS+oQhn
        1ZUgbRUGSaajhUMeMHZNb7PruzRbprctoWmLKspqG+bXV8t5aFxJ80WaLXvljqRADzn7lzDG2LHd
        44xmi3vI2WJ2RjR6z2uEfChiDBypiAD3XvrATYDZSAoyAU0c2zRKTYhApArBlRqNu3WcnMeguFLF
        c/m5enmr/P733z8HyT1SuV7f49PEr2t9sO1AVWPEENCEH/D8wowxMFy3Wv8ulSoWF1LGgLu60WhC
        HBuOm3PhBvINPHPhyDTByViwgRN8U5+Sn87/J6E4rBrPVZ9Wj5+G+BXV1lHpL9KEShrpd4VD7ttb
        gQ9kO+/o0zpA8+3lwDrSNhSB3tHEhnc3XTsYP9ZIpv0XgECBqxFf3ST9fOAPPqAuKmlqdNbJ4c2T
        U/IFAAD//wMA00Jl2fICAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8b418a2938425bd6-LIS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 16 Aug 2024 12:48:37 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '238'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '50000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '49998992'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 1ms
      x-request-id:
      - req_59f663152e949057c9ee9ec12eced144
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "..."}, {"role": "user", "content":
      "Input: Vitamins"}], "model": "gpt-3.5-turbo", "max_tokens": 1000, "seed": 47,
      "temperature": 0.0, "tool_choice": {"type": "function", "function": {"name":
      "skill_0"}}, "tools": [{"type": "function", "function": {"name": "skill_0",
      "description": "Correctly extracted `skill_0` with all the required parameters
      with correct types", "parameters": {"properties": {"skill_0": {"description":
      "Output:", "title": "Skill 0", "type": "string"}}, "required": ["skill_0"],
      "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '566'
      content-type:
      - application/json
      cookie:
      - __cf_bm=1IM.iaUW2oZJNjw2BXqD0SnhxL_MAlV.foIBmL0TvmA-1723812516-1.0.1.1-RXxanHmzbHlCwPCSQU.YNAHABpR1dhYuTKtFEwjGi4vepTrzNIFkPOOSZGGVPtJsZaUIMDBJ70Kv0XFiTqtv7w;
        _cfuvid=dq3OnlAaw1hEjyJgjDU.XA8f8qCTjMczJ4wyOzrdJaA-1723812516243-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA2xSy27bMBC86yuIPceBZNWIo2MPKQqjLfqAirYuBJpayWz4CrlCnRr+94CSLCtG
        eRCIGc7OaMhjwhjIGgoGYs9JaKcW93+fGnz4tsGyST+Jp5D9fPNud/j6Pq0/bAhuosLu/qCgs+pW
        WO0UkrRmoIVHThinZnfLfJ0tV9m6J7StUUVZ62iR364W1PmdXaTZcjUq91YKDFCwXwljjB37b8xo
        ajxAwdKbM6IxBN4iFNMhxsBbFRHgIchA3Ax5R1JYQ2hibNMpNSPIWlUJrtTFeFjH2f5SFFeqWuf/
        2ubtl7xd3X3/WB6autyUD/nnHzO/YfSz6wM1nRFTQTN+wosrM8bAcN1rw6NUqkqvpIwB922n0VCM
        Dcft+eAWii2UkriWJmzhBK90p+R/+9+zOjw2XeBq7GnET1PxyrbO21246hEaaWTYVx556P8HAlk3
        eEef3gG6V3cGzlvtqCL7iCYOXOfDOLg8qQt5P3JkiasZvEzGeBCeA6GuGmla9M7L6bKTU/ICAAD/
        /wMAztPe1esCAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8b418a2d0ee95bd6-LIS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 16 Aug 2024 12:48:38 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '319'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '50000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '49998992'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 1ms
      x-request-id:
      - req_a3a151de33ea1df38dd67e62c3e355a8
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "..."}, {"role": "user", "content":
      "Input: Minerals"}], "model": "gpt-3.5-turbo", "max_tokens": 1000, "seed": 47,
      "temperature": 0.0, "tool_choice": {"type": "function", "function": {"name":
      "skill_0"}}, "tools": [{"type": "function", "function": {"name": "skill_0",
      "description": "Correctly extracted `skill_0` with all the required parameters
      with correct types", "parameters": {"properties": {"skill_0": {"description":
      "Output:", "title": "Skill 0", "type": "string"}}, "required": ["skill_0"],
      "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '566'
      content-type:
      - application/json
      cookie:
      - __cf_bm=1IM.iaUW2oZJNjw2BXqD0SnhxL_MAlV.foIBmL0TvmA-1723812516-1.0.1.1-RXxanHmzbHlCwPCSQU.YNAHABpR1dhYuTKtFEwjGi4vepTrzNIFkPOOSZGGVPtJsZaUIMDBJ70Kv0XFiTqtv7w;
        _cfuvid=dq3OnlAaw1hEjyJgjDU.XA8f8qCTjMczJ4wyOzrdJaA-1723812516243-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//bFJda9swFH33rxD3OSmOvdDEr6Uto5Qx1m2UphhFkR2tVx+VrruVkP8+
        ZDu2G6oHI87Ruef4SIeEMVA7KBiIPSehHc7Xf1+rKn34kX95/f5VuTvDb/LM/sreHn/fKZhFhd3+
        kYJOqgthtUNJypqOFl5yknHq4jLLV4tsuVi3hLY7iVFWO5rnF8s5NX5r5+kiW/bKvVVCBijYU8IY
        Y4f2GzOanfwHBUtnJ0TLEHgtoRgOMQbeYkSAh6ACcUMwG0lhDUkTY5sGcUKQtVgKjjgad+sw2Y9F
        ccTy5kr/vNffbgNeNfk2e1vXq5XHx+uJXzf63bWBqsaIoaAJP+DFmRljYLhuteFFIZbpmZQx4L5u
        tDQUY8Nhczq4gWID98pIzzFs4AgfdMfks/3zpA4vqyZw7Hvq8eNQPNraebsNZz1CpYwK+9JLHtr/
        gUDWdd7Rp3WA5sOdgfNWOyrJvkgTB66ybhyMT2pC9hxZ4jjC6zTp40F4DyR1WSlTS++8Gi47OSb/
        AQAA//8DABVdo9brAgAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8b418a3379155bd6-LIS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 16 Aug 2024 12:48:39 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '190'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '50000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '49998993'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 1ms
      x-request-id:
      - req_fe12e4757f2c0dfabae5e11225215112
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "..."}, {"role": "user", "content":
      "Input: Macronutrients"}], "model": "gpt-3.5-turbo", "max_tokens": 1000, "seed":
      47, "temperature": 0.0, "tool_choice": {"type": "function", "function": {"name":
      "skill_1"}}, "tools": [{"type": "function", "function": {"name": "skill_1",
      "description": "Correctly extracted `skill_1` with all the required parameters
      with correct types", "parameters": {"properties": {"skill_1": {"description":
      "Output:", "title": "Skill 1", "type": "string"}}, "required": ["skill_1"],
      "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '572'
      content-type:
      - application/json
      cookie:
      - __cf_bm=1IM.iaUW2oZJNjw2BXqD0SnhxL_MAlV.foIBmL0TvmA-1723812516-1.0.1.1-RXxanHmzbHlCwPCSQU.YNAHABpR1dhYuTKtFEwjGi4vepTrzNIFkPOOSZGGVPtJsZaUIMDBJ70Kv0XFiTqtv7w;
        _cfuvid=dq3OnlAaw1hEjyJgjDU.XA8f8qCTjMczJ4wyOzrdJaA-1723812516243-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA2xS0WrbMBR991eI+5yUOGmWxK9pV2jZWCkERjOMosiOFklXk67XlpB/H7Id2w3T
        gxDn3HPP1ZFOCWOg9pAxEAdOwjg9Xr39KQp9fPLrJ/G8eDCVeZy8vPxd3H13X+9hFBW4+y0FXVQ3
        Ao3TkhTahhZecpKxa7qYzpbpdJ6uasLgXuooKx2NZzfzMVV+h+NJOp23ygMqIQNk7DVhjLFTvccZ
        7V6+Q8YmowtiZAi8lJB1RYyBRx0R4CGoQNwSjHpSoCVp49i20npAEKLOBde6N27WaXDug+Ja55uf
        Mn1cbtZfFuVDOXvHTfXj+W3Nh35N6w9XD1RUVnQBDfgOz67MGAPLTa0NR6V1nl5JGQPuy8pIS3Fs
        OG0vhVvItvCNC4+2Iq9iwRbO8El9Tv53/jUIxcuiCly3abX4uYtfY+k87sJVmlAoq8Ih95KH+lYQ
        CF3jHX1qB6g+vRw4j8ZRTniUNjZc3jbtoP9YPZm2XwAIieseX90m7XwQPgJJkxfKltI7r7o3T87J
        PwAAAP//AwDIHbp/8gIAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8b418a375f485bd6-LIS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 16 Aug 2024 12:48:40 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '211'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '50000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '49998991'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 1ms
      x-request-id:
      - req_0bff83135472717cbef7be8f82781b74
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "..."}, {"role": "user", "content":
      "Input: Vitamins"}], "model": "gpt-3.5-turbo", "max_tokens": 1000, "seed": 47,
      "temperature": 0.0, "tool_choice": {"type": "function", "function": {"name":
      "skill_1"}}, "tools": [{"type": "function", "function": {"name": "skill_1",
      "description": "Correctly extracted `skill_1` with all the required parameters
      with correct types", "parameters": {"properties": {"skill_1": {"description":
      "Output:", "title": "Skill 1", "type": "string"}}, "required": ["skill_1"],
      "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '566'
      content-type:
      - application/json
      cookie:
      - __cf_bm=1IM.iaUW2oZJNjw2BXqD0SnhxL_MAlV.foIBmL0TvmA-1723812516-1.0.1.1-RXxanHmzbHlCwPCSQU.YNAHABpR1dhYuTKtFEwjGi4vepTrzNIFkPOOSZGGVPtJsZaUIMDBJ70Kv0XFiTqtv7w;
        _cfuvid=dq3OnlAaw1hEjyJgjDU.XA8f8qCTjMczJ4wyOzrdJaA-1723812516243-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA2xSy27bMBC86yuIPdtBJNeoo2N8cQL40rQJ0DoQaHolMeEr5CptYPjfC0qypBjh
        QSBmODujIY8JYyAPkDMQNSehnZrf/H0r66fqdv9r86BSCj/Kb2s0FQa/zn7DLCrs/gUFnVVXwmqn
        kKQ1HS08csI4Nf2eLVZptszSltD2gCrKKkfzxdVyTo3f2/l1mi17ZW2lwAA5+5Mwxtix/caM5oD/
        IGfXszOiMQReIeTDIcbAWxUR4CHIQNwQzEZSWENoYmzTKDUhyFpVCK7UaNyt42Q/FsWVKh7dRlu5
        2cr3+/X2brV4X2/v6if/c+LXjf5wbaCyMWIoaMIPeH5hxhgYrltteJVKFemFlDHgvmo0Goqx4bg7
        H9xBvoNHSVxLE3Zwgk+6U/LV/nlSh8eyCVz1PfX4aShe2cp5uw8XPUIpjQx14ZGH9n8gkHWdd/Rp
        HaD5dGfgvNWOCrKvaOLA1aIbB+OTGsmbniNLXE3gLOnjQfgIhLoopanQOy+Hy05OyX8AAAD//wMA
        dHYfTesCAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8b418a3bceac5bd6-LIS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 16 Aug 2024 12:48:41 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '518'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '50000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '49998992'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 1ms
      x-request-id:
      - req_2574a2b39a767b11f889c5c92e298445
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "..."}, {"role": "user", "content":
      "Input: Minerals"}], "model": "gpt-3.5-turbo", "max_tokens": 1000, "seed": 47,
      "temperature": 0.0, "tool_choice": {"type": "function", "function": {"name":
      "skill_1"}}, "tools": [{"type": "function", "function": {"name": "skill_1",
      "description": "Correctly extracted `skill_1` with all the required parameters
      with correct types", "parameters": {"properties": {"skill_1": {"description":
      "Output:", "title": "Skill 1", "type": "string"}}, "required": ["skill_1"],
      "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '566'
      content-type:
      - application/json
      cookie:
      - __cf_bm=1IM.iaUW2oZJNjw2BXqD0SnhxL_MAlV.foIBmL0TvmA-1723812516-1.0.1.1-RXxanHmzbHlCwPCSQU.YNAHABpR1dhYuTKtFEwjGi4vepTrzNIFkPOOSZGGVPtJsZaUIMDBJ70Kv0XFiTqtv7w;
        _cfuvid=dq3OnlAaw1hEjyJgjDU.XA8f8qCTjMczJ4wyOzrdJaA-1723812516243-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA2xSy27bMBC86yuIPduBLMOJo1uRoDkYzi0tmroQaHolM+ar5KquYfjfC0qypBjl
        QSBmODujIc8JYyB3kDMQe05COzV9PP4upT+s0uNz9vRwkvM/+8Pby8f964/l0xeYRIXdfqCgq+pO
        WO0UkrSmpYVHThinzh6y+XKWLbKsIbTdoYqyytF0freYUu23dprOskWn3FspMEDOfiaMMXZuvjGj
        2eFfyFk6uSIaQ+AVQt4fYgy8VREBHoIMxA3BZCCFNYQmxja1UiOCrFWF4EoNxu06j/ZDUVyp4vtK
        It++ff2WyfXq+M6f9T2t31Mx8mtHn1wTqKyN6Asa8T2e35gxBobrRhsOUqlidiNlDLivao2GYmw4
        b64HN5BvYC0Neq7CBi7wSXdJ/rf/NarDY1kHrrqeOvzSF69s5bzdhpseoZRGhn3hkYfmfyCQda13
        9GkcoP50Z+C81Y4Ksgc0ceAya8fB8KRGZMeRJa4G+DFNungQToFQF6U0FXrnZX/ZySX5BwAA//8D
        AFZ4J3TrAgAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8b418a4618995bd6-LIS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 16 Aug 2024 12:48:42 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '246'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '50000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '49998992'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 1ms
      x-request-id:
      - req_5086fb4d7f75cbd31d247939a35550f1
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "You are a helpful assistant."},
      {"role": "user", "content": "\nA prompt is a text paragraph that outlines the
      expected actions and instructs the large language model (LLM) to generate a
      specific output. This prompt is concatenated with the input text, and the model
      then creates the required output.\nThis describes the full template how the
      prompt is concatenated with the input to produce the output:\n\n```\n\n{prompt}\nInput:
      {category}\nOutput: {skill_0}\n```\n\nHere:\n- \"Input: {category}\" is input
      template,\n- \"{prompt}\" is the LLM prompt,\n- \"Output: {skill_0}\" is the
      output template.\n\nModel can produce erroneous output if a prompt is not well
      defined. In our collaboration, we\u2019ll work together to refine a prompt.
      The process consists of two main steps:\n\n## Step 1\nI will provide you with
      the current prompt along with prediction examples. Each example contains the
      input text, the final prediction produced by the model, and the user feedback.
      User feedback indicates whether the model prediction is correct or not. Your
      task is to analyze the examples and user feedback, determining whether the existing
      instruction is describing the task reflected by these examples precisely, and
      suggests changes to the prompt to address the incorrect predictions.\n\n## Step
      2\nNext, you will carefully review your reasoning in step 1, integrate the insights
      to refine the prompt, and provide me with the new prompt that improves the model\u2019s
      performance."}, {"role": "assistant", "content": "Sure, I\u2019d be happy to
      help you with this prompt engineering problem. Please provide me with the current
      prompt and the examples with user feedback."}, {"role": "user", "content": "\n##
      Current prompt\n...\n\n## Examples\n### Example #0\n\nInput: Macronutrients\n\nOutput:
      Macronutrients\n\nUser feedback: Prediction is incorrect. Correct answer: \"Carbohydrates,
      Proteins, Fats\"\n\n\n### Example #1\n\nInput: Vitamins\n\nOutput: Vitamins\n\nUser
      feedback: Prediction is incorrect. Correct answer: \"Vitamin A, Vitamin C, Vitamin
      D\"\n\n\n### Example #2\n\nInput: Minerals\n\nOutput: Minerals\n\nUser feedback:
      Prediction is incorrect. Correct answer: \"Calcium, Iron, Magnesium\"\n\n\n\nSummarize
      your analysis about incorrect predictions and suggest changes to the prompt."}],
      "model": "gpt-4", "max_tokens": 1000, "seed": 47, "temperature": 0.0}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '2413'
      content-type:
      - application/json
      cookie:
      - __cf_bm=1IM.iaUW2oZJNjw2BXqD0SnhxL_MAlV.foIBmL0TvmA-1723812516-1.0.1.1-RXxanHmzbHlCwPCSQU.YNAHABpR1dhYuTKtFEwjGi4vepTrzNIFkPOOSZGGVPtJsZaUIMDBJ70Kv0XFiTqtv7w;
        _cfuvid=dq3OnlAaw1hEjyJgjDU.XA8f8qCTjMczJ4wyOzrdJaA-1723812516243-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//jFRfb9QwDH+/T2FlDwOpm7bbYHBvCAFCYhISY0JwaHJTtzVLkxK7sBPa
        d0dJu94NEPBSKXHs3x+7/rEAMFyZFRjbotqudwdPv3+t2V0uP9y8v65evz/Hjx+OsN68aV9cLsUU
        KSOUX8jqXdahDV3vSDn4MWwjoVKqeny2PHlyvHy0XOZAFypyKa3p9eD04Ojx8cmU0Qa2JGYFnxYA
        AD/yN3HzFd2YFRwVdzcdiWBDZjU/AjAxuHRjUIRF0asptkEbvJLPdPf24JlHtxGWtb9oCewQI3mF
        PoauV2ABH/LpG1dUFVAOCiUKVRA8aEtAN5jESgGsIESdgONryrEsL9UQ7nq3AUqyfJNj7PtB4Ttr
        G4Y7gBRDvwGsKk7uoQP2dYgdptMhXLSp1tA0JCqgLWouNXHtuGk10y1TedE4WL2DG6logIY8RVQC
        BMeiEGpgTawjudSk9GbLz6JSE+LmcO1HfwahCDVRVaK9BvYVpycTmTpEILTtnAYPztHG4AeNTF6l
        gEtW7NhLAeeciDh5WEw+9mQTfhg0IbP8xnDEQOdg8BXF8TwzhJcJfexGkalsZazNfR5rM4LaECNZ
        3cFcm+cYy9BuqmSSFPA2BqVM+CWmxOzE3h68G9tAFTxv0Tc0zc/UC2nD4Kq5C//ZgiyoJBdS0/7Y
        hvsiud55k8n/WeaIPHHKkP+UCSg5dXQmjd6v2koC6wjjdg5HGE9USaI//TTQhZh+B/TwZRAFhEg9
        aR7wJH1WkJ19Bn0Q4dLNcHZCW8HavOJv5AFnP4pRTS6RHUzuOOqS+N/dZPmHkfPYssD+fSv3ix07
        dizY/6uP+4drs7t5ItWDYNp4fnBuur+dV5kLTR9DKVN8vq/Zs7RXkVCCT2tLNPQmR28XAJ/zyhzu
        bUEzunel4Zp8Knj6+GysZ7bbeRtdnp5MUQ2Kbhs4Oz5aTBSNbESpu6rZNxT7yHmFZiG3i58AAAD/
        /wMAq8pRtTkGAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8b418a4a08695bd6-LIS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 16 Aug 2024 12:48:51 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '8675'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '1000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '998467'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 91ms
      x-request-id:
      - req_006f1971430fefffd062614add138931
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "You are a helpful assistant."},
      {"role": "user", "content": "\nA prompt is a text paragraph that outlines the
      expected actions and instructs the large language model (LLM) to generate a
      specific output. This prompt is concatenated with the input text, and the model
      then creates the required output.\nThis describes the full template how the
      prompt is concatenated with the input to produce the output:\n\n```\n\n{prompt}\nInput:
      {category}\nOutput: {skill_0}\n```\n\nHere:\n- \"Input: {category}\" is input
      template,\n- \"{prompt}\" is the LLM prompt,\n- \"Output: {skill_0}\" is the
      output template.\n\nModel can produce erroneous output if a prompt is not well
      defined. In our collaboration, we\u2019ll work together to refine a prompt.
      The process consists of two main steps:\n\n## Step 1\nI will provide you with
      the current prompt along with prediction examples. Each example contains the
      input text, the final prediction produced by the model, and the user feedback.
      User feedback indicates whether the model prediction is correct or not. Your
      task is to analyze the examples and user feedback, determining whether the existing
      instruction is describing the task reflected by these examples precisely, and
      suggests changes to the prompt to address the incorrect predictions.\n\n## Step
      2\nNext, you will carefully review your reasoning in step 1, integrate the insights
      to refine the prompt, and provide me with the new prompt that improves the model\u2019s
      performance."}, {"role": "assistant", "content": "Sure, I\u2019d be happy to
      help you with this prompt engineering problem. Please provide me with the current
      prompt and the examples with user feedback."}, {"role": "user", "content": "\n##
      Current prompt\n...\n\n## Examples\n### Example #0\n\nInput: Macronutrients\n\nOutput:
      Macronutrients\n\nUser feedback: Prediction is incorrect. Correct answer: \"Carbohydrates,
      Proteins, Fats\"\n\n\n### Example #1\n\nInput: Vitamins\n\nOutput: Vitamins\n\nUser
      feedback: Prediction is incorrect. Correct answer: \"Vitamin A, Vitamin C, Vitamin
      D\"\n\n\n### Example #2\n\nInput: Minerals\n\nOutput: Minerals\n\nUser feedback:
      Prediction is incorrect. Correct answer: \"Calcium, Iron, Magnesium\"\n\n\n\nSummarize
      your analysis about incorrect predictions and suggest changes to the prompt."},
      {"role": "assistant", "content": "## Analysis\nThe current prompt is not provided,
      but based on the examples, it seems like the model is simply echoing the input
      without providing any additional information. This suggests that the prompt
      might not be instructing the model to generate a list of items related to the
      input category.\n\nThe user feedback indicates that for each category (Macronutrients,
      Vitamins, Minerals), the expected output is a list of items that fall under
      that category. For example, for the input \"Macronutrients\", the correct output
      is \"Carbohydrates, Proteins, Fats\".\n\n## Suggested Changes\nThe prompt should
      instruct the model to generate a list of items that belong to the input category.
      For example, if the input is \"Macronutrients\", the model should list \"Carbohydrates,
      Proteins, Fats\" as the output. The prompt should be clear that the model needs
      to provide more than just a repetition of the input.\n\nA possible prompt could
      be: \"Given a category, list the items or elements that belong to this category.
      For example, if the category is ''Macronutrients'', the output should be ''Carbohydrates,
      Proteins, Fats''.\""}, {"role": "user", "content": "\nNow please carefully review
      your reasoning in Step 1 and help with Step 2: refining the prompt.\n\n## Current
      prompt\n...\n\n## Follow this guidance to refine the prompt:\n\n1. The new prompt
      should should describe the task precisely, and address the points raised in
      the user feedback.\n\n2. The new prompt should be similar to the current prompt,
      and only differ in the parts that address the issues you identified in Step
      1.\n    Example:\n    - Current prompt: \"Generate a summary of the input text.\"\n    -
      New prompt: \"Generate a summary of the input text. Pay attention to the original
      style.\"\n\n3. Reply only with the new prompt. Do not include input and output
      templates in the prompt.\n"}], "model": "gpt-4", "max_tokens": 1000, "seed":
      47, "temperature": 0.0}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '4310'
      content-type:
      - application/json
      cookie:
      - __cf_bm=1IM.iaUW2oZJNjw2BXqD0SnhxL_MAlV.foIBmL0TvmA-1723812516-1.0.1.1-RXxanHmzbHlCwPCSQU.YNAHABpR1dhYuTKtFEwjGi4vepTrzNIFkPOOSZGGVPtJsZaUIMDBJ70Kv0XFiTqtv7w;
        _cfuvid=dq3OnlAaw1hEjyJgjDU.XA8f8qCTjMczJ4wyOzrdJaA-1723812516243-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA1RSwW4aQQy98xXWXLgsKEBCCMe2CmnVSumlhzYVGma9u25mx9Oxl4Ai/r2ahUBz
        mcN7fm9sP78OAAyVZgnGNVZdG/3o7uVvlX58//Dl5+5WH26+rrafp4+rneoEH2amyAre/EGnb6qx
        4zZ6VOJwpF1Cq5hdJ7fT2WIyvZlNeqLlEn2W1VFH16Or+eRk6Bomh2KW8GsAAPDav7m3UOLOLOGq
        eENaFLE1muW5CMAk9hkxVoREbVBTXEjHQTH07T6ZFW0xgAVnFWtO+wL23CVQK89AAspQY8BkFcGC
        J1HgCiSio4ockGIrwAnQY4tBBbSxChv0HOos1obk7D2GTwyBFYTa6PeQMKJV0AbPJRBsiwVsOoWY
        eEslQolqyWMJuLN5rwIvpA2F41cX73tOQCFP67AAqt77ksDwm3WJQ6eJcqvD06jcaewUpOHOl0DB
        +a5EGH60acPNvsyjSwGPiRUpSAH3VmU4fjL/rzRh1YnNUYbO+xN+OGfkuY6JN3Liz3hFgaRZJ7TC
        IechytH07GEA8Lu/he5dvCYmbqOulZ8xZMPF/ProZy5nd2HnixOprNZf8LvZdHDq0MheFNt1RaHG
        FBP1p9HPcRj8AwAA//8DAOafe1gRAwAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8b418a81def25bd6-LIS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 16 Aug 2024 12:48:54 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '2778'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '1000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '998018'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 118ms
      x-request-id:
      - req_442208176faadfbf8a873d7e6251b5c3
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "\"Given a category, your task
      is to generate a list of specific items or elements that belong to this category.
      Do not simply repeat the category name, but provide detailed examples within
      that category. For instance, if the category is ''Macronutrients'', your output
      should include ''Carbohydrates, Proteins, Fats''.\""}, {"role": "user", "content":
      "Input: Macronutrients"}], "model": "gpt-3.5-turbo", "max_tokens": 1000, "seed":
      47, "temperature": 0.0, "tool_choice": {"type": "function", "function": {"name":
      "skill_0"}}, "tools": [{"type": "function", "function": {"name": "skill_0",
      "description": "Correctly extracted `skill_0` with all the required parameters
      with correct types", "parameters": {"properties": {"skill_0": {"description":
      "Output:", "title": "Skill 0", "type": "string"}}, "required": ["skill_0"],
      "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '885'
      content-type:
      - application/json
      cookie:
      - __cf_bm=1IM.iaUW2oZJNjw2BXqD0SnhxL_MAlV.foIBmL0TvmA-1723812516-1.0.1.1-RXxanHmzbHlCwPCSQU.YNAHABpR1dhYuTKtFEwjGi4vepTrzNIFkPOOSZGGVPtJsZaUIMDBJ70Kv0XFiTqtv7w;
        _cfuvid=dq3OnlAaw1hEjyJgjDU.XA8f8qCTjMczJ4wyOzrdJaA-1723812516243-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA2xSyW7bMBC96yuIOcuB5CV1dStStO6lbYIkDVAXAkVTEm0uCmfUVjD874UWy4pR
        HQTiPb6FQx4DxkDtIGEgSk7CVHr2/s9rXj8dovIFm032+uWb+azueLOOiv3vrxC2CpftpaCz6kY4
        U2lJytmeFl5ykq1r/G6+WMfz1WLZEcbtpG5lRUWzxc1qRrXP3CyK56tBWTolJELCfgaMMXbs/m1H
        u5N/IWFReEaMROSFhGTcxBh4p1sEOKJC4pYgvJDCWZK2rW1rrScEOadTwbW+BPffcbK+DIprnT5u
        0O/vH+aPy4cP9un+5ePyx3OxEetJXm/dVF2hvLZiHNCEH/HkKowxsNx0WjwordPoSsoYcF/URlpq
        a8Nxe964hWQLd9xnrmx2npPEkH33jqSyGLJPnHALJ3hjdgr+t/41mZGXeY1cD8Mb8NN4G9oVlXcZ
        Xg0XcmUVlqmXHLtDApKr+uw2p0uA+s1FQuWdqSgld5C2NYxXce8Hl4c2ZQeSHHE9wW9vg6EhYIMk
        TZorW0hfeTU+guAU/AMAAP//AwDz4i1mAwMAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8b418a95df785bd6-LIS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 16 Aug 2024 12:48:55 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '265'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '50000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '49998913'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 1ms
      x-request-id:
      - req_5e64fade5874fa9fc50a9d6af0d418a4
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "\"Given a category, your task
      is to generate a list of specific items or elements that belong to this category.
      Do not simply repeat the category name, but provide detailed examples within
      that category. For instance, if the category is ''Macronutrients'', your output
      should include ''Carbohydrates, Proteins, Fats''.\""}, {"role": "user", "content":
      "Input: Vitamins"}], "model": "gpt-3.5-turbo", "max_tokens": 1000, "seed": 47,
      "temperature": 0.0, "tool_choice": {"type": "function", "function": {"name":
      "skill_0"}}, "tools": [{"type": "function", "function": {"name": "skill_0",
      "description": "Correctly extracted `skill_0` with all the required parameters
      with correct types", "parameters": {"properties": {"skill_0": {"description":
      "Output:", "title": "Skill 0", "type": "string"}}, "required": ["skill_0"],
      "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '879'
      content-type:
      - application/json
      cookie:
      - __cf_bm=1IM.iaUW2oZJNjw2BXqD0SnhxL_MAlV.foIBmL0TvmA-1723812516-1.0.1.1-RXxanHmzbHlCwPCSQU.YNAHABpR1dhYuTKtFEwjGi4vepTrzNIFkPOOSZGGVPtJsZaUIMDBJ70Kv0XFiTqtv7w;
        _cfuvid=dq3OnlAaw1hEjyJgjDU.XA8f8qCTjMczJ4wyOzrdJaA-1723812516243-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA2xSXWvbMBR9968Q9zkpTlzTxo+FjbKNwVZIN5ZhFOXaUa2vStddu5D/PuQ4thum
        ByHu0bnn6FwdEsZA7qBgIPachHZqvvrzXL08NfeYvjynnz48/Pjy+HDd3Ls7vG62MIsMu31CQWfW
        lbDaKSRpzQkWHjlh7Lq4WWa3i2We5R2g7Q5VpNWO5tlVPqfWb+08XSzznrm3UmCAgv1KGGPs0O3R
        o9nhKxQsnZ0rGkPgNUIxXGIMvFWxAjwEGYgbgtkICmsITbRtWqUmAFmrSsGVGoVP6zA5j0Fxpcrb
        7G9d3X3P6vzm8ev6tdqtP68/Zt9+TvROrd9cZ6hqjRgCmuBDvbgQYwwM1x03NFKpMr2gMgbc161G
        Q9E2HDbnixsoNrCWxLU0YQNHeMc7Jv87/57E4bFqA1d9Tn39OASvbO283YaLHKGSRoZ96ZGH7j0Q
        yLqTdtTpFKB9NzNw3mpHJdkGTWy4yPsBw/inRnTVY2SJqylplfQGIbwFQl1W0tTonZfDuJNj8g8A
        AP//AwBWZH6M7QIAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8b418a9a784f5bd6-LIS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 16 Aug 2024 12:48:55 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '219'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '50000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '49998914'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 1ms
      x-request-id:
      - req_fbbd9b6f09fb3c7dcbd2cb56d8f8d4da
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "\"Given a category, your task
      is to generate a list of specific items or elements that belong to this category.
      Do not simply repeat the category name, but provide detailed examples within
      that category. For instance, if the category is ''Macronutrients'', your output
      should include ''Carbohydrates, Proteins, Fats''.\""}, {"role": "user", "content":
      "Input: Minerals"}], "model": "gpt-3.5-turbo", "max_tokens": 1000, "seed": 47,
      "temperature": 0.0, "tool_choice": {"type": "function", "function": {"name":
      "skill_0"}}, "tools": [{"type": "function", "function": {"name": "skill_0",
      "description": "Correctly extracted `skill_0` with all the required parameters
      with correct types", "parameters": {"properties": {"skill_0": {"description":
      "Output:", "title": "Skill 0", "type": "string"}}, "required": ["skill_0"],
      "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '879'
      content-type:
      - application/json
      cookie:
      - __cf_bm=1IM.iaUW2oZJNjw2BXqD0SnhxL_MAlV.foIBmL0TvmA-1723812516-1.0.1.1-RXxanHmzbHlCwPCSQU.YNAHABpR1dhYuTKtFEwjGi4vepTrzNIFkPOOSZGGVPtJsZaUIMDBJ70Kv0XFiTqtv7w;
        _cfuvid=dq3OnlAaw1hEjyJgjDU.XA8f8qCTjMczJ4wyOzrdJaA-1723812516243-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA2xSy27bMBC86yuIPduBZFdypFvRInATpA6KXoI4EGh6JbPhqySF1DD87wUlWVKM
        8EAQO5yd4SxPESHA91AQYAfqmTRinr//rd5X6+xrvknl0516kPnT3SNbf8vy9QZmgaF3f5D5C+uG
        aWkEeq5VBzOL1GPomqwWy9tkkS6zFpB6jyLQauPny5t07hu70/M4WaQ986A5QwcFeYkIIeTU7sGj
        2uM/KEg8u1QkOkdrhGK4RAhYLUIFqHPceao8zEaQaeVRBduqEWICeK1FyagQo3C3TpPzGBQVorQb
        mcRHmR+f15n68Xyf/fr9M959pxO9rvXRtIaqRrEhoAk+1IsrMUJAUdly3RsXooyvqIQAtXUjUflg
        G07by8UtFFt45AotFW4LZ/jAO0efnV8ncVisGkdFn1NfPw/BC10bq3fuKkeouOLuUFqkrn0POK9N
        px10WgVoPswMjNXS+NLrN1ShYfIl7/rB+KdG9LbHvPZUTEjpKuoNgjs6j7KsuKrRGsuHcUfn6D8A
        AAD//wMAK811kO0CAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8b418a9e4f175bd6-LIS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 16 Aug 2024 12:48:56 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '236'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '50000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '49998914'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 1ms
      x-request-id:
      - req_6f598da8619d5ccb751f7debefee087b
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "..."}, {"role": "user", "content":
      "Input: Carbohydrates, Proteins, Fats"}], "model": "gpt-3.5-turbo", "max_tokens":
      1000, "seed": 47, "temperature": 0.0, "tool_choice": {"type": "function", "function":
      {"name": "skill_1"}}, "tools": [{"type": "function", "function": {"name": "skill_1",
      "description": "Correctly extracted `skill_1` with all the required parameters
      with correct types", "parameters": {"properties": {"skill_1": {"description":
      "Output:", "title": "Skill 1", "type": "string"}}, "required": ["skill_1"],
      "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '587'
      content-type:
      - application/json
      cookie:
      - __cf_bm=1IM.iaUW2oZJNjw2BXqD0SnhxL_MAlV.foIBmL0TvmA-1723812516-1.0.1.1-RXxanHmzbHlCwPCSQU.YNAHABpR1dhYuTKtFEwjGi4vepTrzNIFkPOOSZGGVPtJsZaUIMDBJ70Kv0XFiTqtv7w;
        _cfuvid=dq3OnlAaw1hEjyJgjDU.XA8f8qCTjMczJ4wyOzrdJaA-1723812516243-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA2xSXY/aMBB8z6+w9hlOBJoCeeX6IU5tqSrdQ0sVOWETXByvsTe6Q4j/XiWEJIfO
        D5Y149kZ7/ocCAFqB7GAbC85K60eL1+O+cvzemYf1affq195/u1p87zJvxbzD+URRrWC0n+Y8U31
        kFFpNbIic6Uzh5KxrhrOp7NFOI1mHxuipB3qWlZYHs8eojFXLqXxJJxGrXJPKkMPsfgTCCHEudnr
        jGaHrxCLyeiGlOi9LBDi7pIQ4EjXCEjvlWdpGEY9mZFhNHVsU2k9IJhIJ5nUuje+rvPg3DdKap1s
        5qtX/LJe/Dh8J7P+mS6P+WJ9erIDv2vpk20C5ZXJugYN+A6P78yEACPLRusPSuskvJMKAdIVVYmG
        69hw3t4ubiHewkq6lPannZOMfiQ2jhiV8SPxWbLfwgXeFLsE753/DnrkMK+81G3zWvzSTUNTYR2l
        /q65kCuj/D5xKH3zSPBM9upd+zQOUL0ZJFhHpeWE6YCmLrhshw79P+vJMGpJJpZ6gE+ioA0I/uQZ
        yyRXpkBnner+QHAJ/gMAAP//AwD9Ze93AgMAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8b418aa20eb95bd6-LIS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 16 Aug 2024 12:48:57 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '316'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '50000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '49998988'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 1ms
      x-request-id:
      - req_34c0353e0af23a62fe588dfce6f37ddc
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "..."}, {"role": "user", "content":
      "Input: Vitamins"}], "model": "gpt-3.5-turbo", "max_tokens": 1000, "seed": 47,
      "temperature": 0.0, "tool_choice": {"type": "function", "function": {"name":
      "skill_1"}}, "tools": [{"type": "function", "function": {"name": "skill_1",
      "description": "Correctly extracted `skill_1` with all the required parameters
      with correct types", "parameters": {"properties": {"skill_1": {"description":
      "Output:", "title": "Skill 1", "type": "string"}}, "required": ["skill_1"],
      "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '566'
      content-type:
      - application/json
      cookie:
      - __cf_bm=1IM.iaUW2oZJNjw2BXqD0SnhxL_MAlV.foIBmL0TvmA-1723812516-1.0.1.1-RXxanHmzbHlCwPCSQU.YNAHABpR1dhYuTKtFEwjGi4vepTrzNIFkPOOSZGGVPtJsZaUIMDBJ70Kv0XFiTqtv7w;
        _cfuvid=dq3OnlAaw1hEjyJgjDU.XA8f8qCTjMczJ4wyOzrdJaA-1723812516243-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//bFLLbtswELzrK4g924EswbCtW05pjaBoAqQoUgcCTa9kJnyZXDVODf97
        oYclxQgPAjHD2RkNeYoYA7mDjIHYcxLaqenq/VAc1XN8++NuFaffjk+Jwn/xer043B6fYFIr7PYV
        BV1UN8Jqp5CkNS0tPHLCeupskaTLWTJPFw2h7Q5VLSsdTdOb+ZQqv7XTeJbMO+XeSoEBMvYnYoyx
        U/OtM5odHiFj8eSCaAyBlwhZf4gx8FbVCPAQZCBuCCYDKawhNHVsUyk1IshalQuu1GDcrtNoPxTF
        lcof3u+XuPi7vy+C+/3683F3WH/fLp/1yK8d/eGaQEVlRF/QiO/x7MqMMTBcN9rwJpXKZ1dSxoD7
        stJoqI4Np83l4AayDfySxLU0YQNn+KQ7R1/tX0Z1eCyqwFXXU4ef++KVLZ2323DVIxTSyLDPPfLQ
        /A8Esq71rn0aB6g+3Rk4b7WjnOwbmnrgMm3HwfCkBnLVcWSJqxGcRF08CB+BUOeFNCV652V/2dE5
        +g8AAP//AwB5gJgt6wIAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8b418aa64e9f5bd6-LIS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 16 Aug 2024 12:48:57 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '215'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '50000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '49998992'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 1ms
      x-request-id:
      - req_6cb39152c44ef8ed6ec31f0a95cac4d8
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "..."}, {"role": "user", "content":
      "Input: Minerals"}], "model": "gpt-3.5-turbo", "max_tokens": 1000, "seed": 47,
      "temperature": 0.0, "tool_choice": {"type": "function", "function": {"name":
      "skill_1"}}, "tools": [{"type": "function", "function": {"name": "skill_1",
      "description": "Correctly extracted `skill_1` with all the required parameters
      with correct types", "parameters": {"properties": {"skill_1": {"description":
      "Output:", "title": "Skill 1", "type": "string"}}, "required": ["skill_1"],
      "type": "object"}}}]}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '566'
      content-type:
      - application/json
      cookie:
      - __cf_bm=1IM.iaUW2oZJNjw2BXqD0SnhxL_MAlV.foIBmL0TvmA-1723812516-1.0.1.1-RXxanHmzbHlCwPCSQU.YNAHABpR1dhYuTKtFEwjGi4vepTrzNIFkPOOSZGGVPtJsZaUIMDBJ70Kv0XFiTqtv7w;
        _cfuvid=dq3OnlAaw1hEjyJgjDU.XA8f8qCTjMczJ4wyOzrdJaA-1723812516243-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//bFJNb+IwFLznV1jvDBUfZQs57qGqhNpVVbRVd1lFxrwEF3+t/SJKEf99
        5SQkKVofImvGM/My9ilhDOQWUgZix0lop4aLw9/8+G01f3rZPy/1vX4yr+Xbd7+5x8PyAIOosJt3
        FHRR3QirnUKS1tS08MgJo+v4bjKdjyez6bwitN2iirLC0XB6MxtS6Td2OBpPZo1yZ6XAACn7nTDG
        2Kn6xhnNFj8gZaPBBdEYAi8Q0vYQY+CtigjwEGQgbggGHSmsITRxbFMq1SPIWpUJrlQXXK9Tb98V
        xZXKVrPip74lsXqwv56Xr4vPu48f4YWPe3m19dFVA+WlEW1BPb7F06swxsBwXWnDXiqVXVszBtwX
        pUZDcWw4rS8H15Cu4VEa9FyFNZzhi+6c/G//p1eHx7wMXDU9Nfi5LV7Zwnm7CVc9Qi6NDLvMIw/V
        /0Ag6+rsmFMlQPnlzsB5qx1lZPdoouF8UttB96R6ZMORJa46eDFKmvEgHAOhznJpCvTOy/ayk3Py
        DwAA//8DAAJYiL7rAgAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8b418aa9cc805bd6-LIS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 16 Aug 2024 12:48:58 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '220'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '50000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '49998992'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 1ms
      x-request-id:
      - req_88fb9b1983bb26b492b263fca5544301
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "You are a helpful assistant."},
      {"role": "user", "content": "\nA prompt is a text paragraph that outlines the
      expected actions and instructs the large language model (LLM) to generate a
      specific output. This prompt is concatenated with the input text, and the model
      then creates the required output.\nThis describes the full template how the
      prompt is concatenated with the input to produce the output:\n\n```\n\n{prompt}\nInput:
      {category}\nOutput: {skill_0}\n```\n\nHere:\n- \"Input: {category}\" is input
      template,\n- \"{prompt}\" is the LLM prompt,\n- \"Output: {skill_0}\" is the
      output template.\n\nModel can produce erroneous output if a prompt is not well
      defined. In our collaboration, we\u2019ll work together to refine a prompt.
      The process consists of two main steps:\n\n## Step 1\nI will provide you with
      the current prompt along with prediction examples. Each example contains the
      input text, the final prediction produced by the model, and the user feedback.
      User feedback indicates whether the model prediction is correct or not. Your
      task is to analyze the examples and user feedback, determining whether the existing
      instruction is describing the task reflected by these examples precisely, and
      suggests changes to the prompt to address the incorrect predictions.\n\n## Step
      2\nNext, you will carefully review your reasoning in step 1, integrate the insights
      to refine the prompt, and provide me with the new prompt that improves the model\u2019s
      performance."}, {"role": "assistant", "content": "Sure, I\u2019d be happy to
      help you with this prompt engineering problem. Please provide me with the current
      prompt and the examples with user feedback."}, {"role": "user", "content": "\n##
      Current prompt\n\"Given a category, your task is to generate a list of specific
      items or elements that belong to this category. Do not simply repeat the category
      name, but provide detailed examples within that category. For instance, if the
      category is ''Macronutrients'', your output should include ''Carbohydrates,
      Proteins, Fats''.\"\n\n## Examples\n### Example #0\n\nInput: Macronutrients\n\nOutput:
      Carbohydrates, Proteins, Fats\n\nUser feedback: Prediction is correct.\n\n\n###
      Example #1\n\nInput: Vitamins\n\nOutput: Vitamins\n\nUser feedback: Prediction
      is incorrect. Correct answer: \"Vitamin A, Vitamin C, Vitamin D\"\n\n\n### Example
      #2\n\nInput: Minerals\n\nOutput: Minerals\n\nUser feedback: Prediction is incorrect.
      Correct answer: \"Calcium, Iron, Magnesium\"\n\n\n\nSummarize your analysis
      about incorrect predictions and suggest changes to the prompt."}], "model":
      "gpt-4", "max_tokens": 1000, "seed": 47, "temperature": 0.0}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '2689'
      content-type:
      - application/json
      cookie:
      - __cf_bm=1IM.iaUW2oZJNjw2BXqD0SnhxL_MAlV.foIBmL0TvmA-1723812516-1.0.1.1-RXxanHmzbHlCwPCSQU.YNAHABpR1dhYuTKtFEwjGi4vepTrzNIFkPOOSZGGVPtJsZaUIMDBJ70Kv0XFiTqtv7w;
        _cfuvid=dq3OnlAaw1hEjyJgjDU.XA8f8qCTjMczJ4wyOzrdJaA-1723812516243-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA5yUTW/jRgyG7/4VxOSQi2Ks4/2yb8V2d1tgA7RosGhRFQEtURI3o6F2SMVxF/nv
        xciyZQc59aLD8OvhS4o/ZgCOS7cGVzRoRdv5q9X2e7X7+kv/5+P29ma1+vnjx8UXwe+/r/7ql53L
        UoRsvlFhh6h5IW3nyVjC3lxEQqOUdfHuevl+cf1m+X4wtFKST2F1Z1evr169XSzHiEa4IHVr+HsG
        APBj+Ca2UNKjW8Or7PDSkirW5NZHJwAXxacXh6qshsFcNhkLCUZhwL24gJ8C+p2y5uG2IRiIQIla
        BRNQi31de4ItWwM1BYpoHGrQjgquuAC25JrMHAChQKNa4g62DQWwhoBD1xuwAsImCpZgFFvwfE+Q
        u69s2HLQ3IFEyN0NpwpeczeHX4MaYQlSQRflgcuzuvSISWTNgA2U287vIFJHaDqUPYIEbGkOtw0r
        FNL7EjYEZU+pu+RXYWFgDdo+qo+RgqWCbWdQCikEMaDHznPB5nfAIYlS7P33cpmMhAQlVxUNKQ6A
        B21OoeZ5yMPFBfzR1zWpUQkfGgw1pSEIYFlG0tQGazbEjThH/hbLVDvSEQw2E1nS6UW4tvfGnU+U
        ahyKE8hBgQq9P8Wt+YHCBA23z1HQqwC1XYPK/9Iko/SWhq7N4JUE3NBgUGwJUE8WY8qeNPkkcWgD
        Q0Evtx7pgZXKlKQS72Wr6yEyd58H2mkFM9hJH8FQ79P6mRz2lwDBs1raLDTwhJqwI9HztZYI5Kml
        YKNCG/KS1JVhOM+k+V9dj1ueTRtEhuxTh6F8YVDH8eBplnPduDr/BVjh8gaLKKG3yKmby1Gcc2QO
        he9LgssPGDfS7MoklmbwWxQjDprBJzS9nOfu9JxEqnrFdMZC7/34/nS8T17qLspGR/vxveLA2txF
        QpWQbpGadG6wPs0A/hnuYH922tx+Ge5M7imkhG+u3+7zuenkTtbrxXK0mhj6yfBuuZqNiE53atTe
        VRxqil3k4S4OjTzN/gMAAP//AwDOAzPQDgYAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8b418aadcbd15bd6-LIS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 16 Aug 2024 12:49:07 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '8616'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '1000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '998397'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 96ms
      x-request-id:
      - req_05dffa6e50e87cdf87ad3629d2e10127
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "You are a helpful assistant."},
      {"role": "user", "content": "\nA prompt is a text paragraph that outlines the
      expected actions and instructs the large language model (LLM) to generate a
      specific output. This prompt is concatenated with the input text, and the model
      then creates the required output.\nThis describes the full template how the
      prompt is concatenated with the input to produce the output:\n\n```\n\n{prompt}\nInput:
      {category}\nOutput: {skill_0}\n```\n\nHere:\n- \"Input: {category}\" is input
      template,\n- \"{prompt}\" is the LLM prompt,\n- \"Output: {skill_0}\" is the
      output template.\n\nModel can produce erroneous output if a prompt is not well
      defined. In our collaboration, we\u2019ll work together to refine a prompt.
      The process consists of two main steps:\n\n## Step 1\nI will provide you with
      the current prompt along with prediction examples. Each example contains the
      input text, the final prediction produced by the model, and the user feedback.
      User feedback indicates whether the model prediction is correct or not. Your
      task is to analyze the examples and user feedback, determining whether the existing
      instruction is describing the task reflected by these examples precisely, and
      suggests changes to the prompt to address the incorrect predictions.\n\n## Step
      2\nNext, you will carefully review your reasoning in step 1, integrate the insights
      to refine the prompt, and provide me with the new prompt that improves the model\u2019s
      performance."}, {"role": "assistant", "content": "Sure, I\u2019d be happy to
      help you with this prompt engineering problem. Please provide me with the current
      prompt and the examples with user feedback."}, {"role": "user", "content": "\n##
      Current prompt\n\"Given a category, your task is to generate a list of specific
      items or elements that belong to this category. Do not simply repeat the category
      name, but provide detailed examples within that category. For instance, if the
      category is ''Macronutrients'', your output should include ''Carbohydrates,
      Proteins, Fats''.\"\n\n## Examples\n### Example #0\n\nInput: Macronutrients\n\nOutput:
      Carbohydrates, Proteins, Fats\n\nUser feedback: Prediction is correct.\n\n\n###
      Example #1\n\nInput: Vitamins\n\nOutput: Vitamins\n\nUser feedback: Prediction
      is incorrect. Correct answer: \"Vitamin A, Vitamin C, Vitamin D\"\n\n\n### Example
      #2\n\nInput: Minerals\n\nOutput: Minerals\n\nUser feedback: Prediction is incorrect.
      Correct answer: \"Calcium, Iron, Magnesium\"\n\n\n\nSummarize your analysis
      about incorrect predictions and suggest changes to the prompt."}, {"role": "assistant",
      "content": "## Analysis\nThe model seems to struggle with generating specific
      items within a category when the input is a broad term like \"Vitamins\" or
      \"Minerals\". Instead of providing specific examples, it simply repeats the
      category name. This could be due to the fact that the current prompt does not
      explicitly instruct the model to provide different examples within the category.\n\n##
      Suggested Changes\nTo address this, the prompt could be made more explicit by
      instructing the model to provide multiple distinct examples that fall within
      the given category. The prompt could also emphasize that the output should not
      be the same as the input category. \n\nFor instance, the prompt could be revised
      as follows: \n\n\"Given a category, your task is to generate a list of at least
      three specific items or elements that belong to this category. The output should
      not be the same as the input category. Instead, provide detailed and distinct
      examples within that category. For instance, if the category is ''Macronutrients'',
      your output should include ''Carbohydrates, Proteins, Fats''.\""}, {"role":
      "user", "content": "\nNow please carefully review your reasoning in Step 1 and
      help with Step 2: refining the prompt.\n\n## Current prompt\n\"Given a category,
      your task is to generate a list of specific items or elements that belong to
      this category. Do not simply repeat the category name, but provide detailed
      examples within that category. For instance, if the category is ''Macronutrients'',
      your output should include ''Carbohydrates, Proteins, Fats''.\"\n\n## Follow
      this guidance to refine the prompt:\n\n1. The new prompt should should describe
      the task precisely, and address the points raised in the user feedback.\n\n2.
      The new prompt should be similar to the current prompt, and only differ in the
      parts that address the issues you identified in Step 1.\n    Example:\n    -
      Current prompt: \"Generate a summary of the input text.\"\n    - New prompt:
      \"Generate a summary of the input text. Pay attention to the original style.\"\n\n3.
      Reply only with the new prompt. Do not include input and output templates in
      the prompt.\n"}], "model": "gpt-4", "max_tokens": 1000, "seed": 47, "temperature":
      0.0}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '4856'
      content-type:
      - application/json
      cookie:
      - __cf_bm=1IM.iaUW2oZJNjw2BXqD0SnhxL_MAlV.foIBmL0TvmA-1723812516-1.0.1.1-RXxanHmzbHlCwPCSQU.YNAHABpR1dhYuTKtFEwjGi4vepTrzNIFkPOOSZGGVPtJsZaUIMDBJ70Kv0XFiTqtv7w;
        _cfuvid=dq3OnlAaw1hEjyJgjDU.XA8f8qCTjMczJ4wyOzrdJaA-1723812516243-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - arm64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.11.9
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//VFJNa9tAEL37Vwx78UUxceJ82NdCSimFUFra0pQwXo2lSXZ3lJ1RnBDy
        38sqsp1chHhvPt68fS8TAMe1W4HzLZqPXThabh+aixjj9s95w9vL6+XPX0u+/l3bIt99dVXpkPUd
        edt1zbzELpCxpDfaZ0KjMnV+cXJ6OT85W1wMRJSaQmlrOjtaHB2fz0/HjlbYk7oV/J0AALwM36It
        1fTkVnBc7ZBIqtiQW+2LAFyWUBCHqqyGyVx1IL0kozTIvXGf+ZESIHg0aiQ/V/AsfQZDvQdWMIGG
        EmU0AoTAaiAbQINAqAbWZiLQjjxv2AMbRQXJQIEiJVOwFg3WFCQ1ZZa1rPtVM/jREkhvXW+grfSh
        hiSlHKwlUIwEqMM/p1JzaPyS1AjrCrosj1wT1GTIgWrAVEPNapy8AT1heQmFLVvL6U3NYcqVZOBU
        /PFUAW+GVTu6XD/9hj5L6i1zuWY6mvNRMicf+ppg+gnzWtrnupilFVxnMeKkFVyh6XQG3ylSXFOu
        hj2NYBgd3h3RJ37oaa+6GtwwgUwdoX1UlzDS7Ma9f9dMm16x5Cn1IYz46z4oQZouy1pHfo9vOLG2
        t5lQJZVQqEnnBvZ1AvBvCGT/IWOuyxI7uzW5p1QGLs/HQLpD9t+xi5E0MQwHfH58tpiMEp0+q1G8
        3XBqKHeZh4AOh7xO/gMAAP//AwAsAvF5lwMAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8b418ae55aba5bd6-LIS
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Fri, 16 Aug 2024 12:49:11 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '3886'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '1000000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '997881'
      x-ratelimit-reset-requests:
      - 6ms
      x-ratelimit-reset-tokens:
      - 127ms
      x-request-id:
      - req_e4942dc937510421b4c98687703a217f
    status:
      code: 200
      message: OK
version: 1
