interactions:
- request:
    body: '{"messages": [{"role": "user", "content": "Hey, how''s it going?"}], "model":
      "gpt-4", "max_tokens": 10}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '103'
      content-type:
      - application/json
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.10.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA1SQQU8CMRSE7/srnu/iZTHsskrYG/ECaiTxhBpDSvexW2z7Nm0xGsJ/N10W0EsP
        M53pN90nAKgqLAFlI4I0rR5M9HaxcMtZPX7IXoq33a1/Whr5Kuj50d9jGhO83pIMp9SNZNNqCort
        0ZaORKDYmo3zLLvLJ6O8MwxXpGOsbsOgGAzvslGfaFhJ8ljCewIAsO/OyGYr+sYShulJMeS9qAnL
        8yUAdKyjgsJ75YOwAdOLKdkGsh3ujLTmK5h6EBam8xTmULG9DtCIL8I+cji/pbluHa8jl91pfdY3
        yirfrBwJzzb2arJ1aI4FhwTgo1u1+weKrWPThlXgT7KxMiuOhXj5vz9mvxgDB6Evel4kPSH6Hx/I
        rDbK1uRap7qJkTM5JL8AAAD//wMACT3X5tkBAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8a44db043e322ae8-LAX
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 16 Jul 2024 20:48:53 GMT
      Server:
      - cloudflare
      Set-Cookie:
      - __cf_bm=HLvgucfz5wSfnrlcOwGscxsenCsI21cr01f56SqnkKY-1721162933-1.0.1.1-M2ur9xDzPqDV97_elPqQaACNn9BvhofFVTzcxDhuEU6KBa86qW.fBWcJIiPe.QNluI7P6Kwci.gxNMVMdcCkTA;
        path=/; expires=Tue, 16-Jul-24 21:18:53 GMT; domain=.api.openai.com; HttpOnly;
        Secure; SameSite=None
      - _cfuvid=P4hZdwOPfZCAA9r.YzhkXYaQZ8g357nPpvDcX5rDDVg-1721162933404-0.0.1.1-604800000;
        path=/; domain=.api.openai.com; HttpOnly; Secure; SameSite=None
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '1220'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '10000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '9984'
      x-ratelimit-reset-requests:
      - 8.64s
      x-ratelimit-reset-tokens:
      - 96ms
      x-request-id:
      - req_6bf4b57a4e275e1b759754ace88dc41f
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "user", "content": "Hey, how''s it going?"}], "model":
      "gpt-3.5-turbo", "max_tokens": 10}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '111'
      content-type:
      - application/json
      cookie:
      - __cf_bm=HLvgucfz5wSfnrlcOwGscxsenCsI21cr01f56SqnkKY-1721162933-1.0.1.1-M2ur9xDzPqDV97_elPqQaACNn9BvhofFVTzcxDhuEU6KBa86qW.fBWcJIiPe.QNluI7P6Kwci.gxNMVMdcCkTA;
        _cfuvid=P4hZdwOPfZCAA9r.YzhkXYaQZ8g357nPpvDcX5rDDVg-1721162933404-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.10.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//VJBLT8MwEITv+RWLL1yaqkkfqDlCkeAEgiNClZtsExfHa9kb6EP978hJ
        msLFh5md2W99igCEKkQGIq8k57XV8VLvXl6L1bu9Lw9vD4VMjvulLX+Oj6uFZjEKCdrsMOdLapxT
        bTWyItPZuUPJGFqTuzRJFulyOm2NmgrUIVZajqfjecyN21A8SdJ5n6xI5ehFBh8RAMCpfQOjKXAv
        MpiMLkqN3ssSRTYMAQhHOihCeq88S9Px9mZOhtG02E+oNd3A820Nu8YzSPhWjhupYUiOwJPow+dh
        q6bSOtoEQtNoPehbZZSv1g6lJxM2aDQlV13BOQL4bO9r/iEL66i2vGb6QhMqk1lXKK4/+sfsbxdM
        LPVVT2dRTyj8wTPW660yJTrrVHts4IzO0S8AAAD//wMAHCUKy+sBAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8a44db0e2bb32ae8-LAX
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 16 Jul 2024 20:48:54 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '404'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '60000'
      x-ratelimit-remaining-requests:
      - '9981'
      x-ratelimit-remaining-tokens:
      - '59984'
      x-ratelimit-reset-requests:
      - 2m37.257s
      x-ratelimit-reset-tokens:
      - 16ms
      x-request-id:
      - req_b80c439d90979372cdf77a627fff83a6
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "..."}, {"role": "user", "content":
      "Input: Macronutrients\nOutput: "}], "model": "gpt-3.5-turbo", "max_tokens":
      1000}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '162'
      content-type:
      - application/json
      cookie:
      - __cf_bm=HLvgucfz5wSfnrlcOwGscxsenCsI21cr01f56SqnkKY-1721162933-1.0.1.1-M2ur9xDzPqDV97_elPqQaACNn9BvhofFVTzcxDhuEU6KBa86qW.fBWcJIiPe.QNluI7P6Kwci.gxNMVMdcCkTA;
        _cfuvid=P4hZdwOPfZCAA9r.YzhkXYaQZ8g357nPpvDcX5rDDVg-1721162933404-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.10.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//ZJNBb9swDIXv+RWELrskQZ20XZNbsdMO3bC1l2IYCsVmbGYyqVF026Do
        fx+kuE22XQxY5Pf4RD+/TAAcNW4Nru681X0Ms1XYff12eX/55fYe66trPtuF8P359u72Wm6WbpoJ
        2eywtjdqXksfAxoJH8q1ojfMqtXHRVVdLlbL81LopcGQsTbabDm/mNmgG5mdVYuLkeyEakxuDT8m
        AAAv5Zk9coPPbg1n07eTHlPyLbr1exOAUwn5xPmUKJlnc9NjsRY25GL7xtcqPJgSsiXwinB8s84b
        RJVHahCQUds9mIB1CBtp9uC5ORCIDTZADMFriwq/B89GRpggr8QrNhns6XTYHO46BOsUEXpPDP3/
        XmqvG+n2jXrDNM1eDInTtIze+izy6bSlQG/+PqSDbpJBawTZjnc46pR2TAnZyAfYikKr8mRd0VeM
        njRzRikNeDK2gNRH0bzbAo77SSbqWyydnWgvjHlcM9Q5FnP4bEDpBDWBWjgNffGd8N8tEIOPUSUq
        eStSmSThVDbqiS3fUR5RfQjQoQ+j/ScMYbZB4nbuxm//+h6aIG1U2eSA8RDC+/mWmFL3oOiTcA5I
        MokH/HUC8LOEc/grby6q9NEeTH4hZ8FFdZBzx9/hWFwtx6KJ+XA8r6rzyWjQpX0y7B+2xC1qVCpR
        zTYnr5M/AAAA//8DAC8j7QupAwAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8a44db12286e2ae8-LAX
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 16 Jul 2024 20:48:55 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '1317'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '60000'
      x-ratelimit-remaining-requests:
      - '9980'
      x-ratelimit-remaining-tokens:
      - '58989'
      x-ratelimit-reset-requests:
      - 2m45.261s
      x-ratelimit-reset-tokens:
      - 1.011s
      x-request-id:
      - req_295fcf94a4e67503740c929d01c9fa0c
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "..."}, {"role": "user", "content":
      "Input: Vitamins\nOutput: "}], "model": "gpt-3.5-turbo", "max_tokens": 1000}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '156'
      content-type:
      - application/json
      cookie:
      - __cf_bm=HLvgucfz5wSfnrlcOwGscxsenCsI21cr01f56SqnkKY-1721162933-1.0.1.1-M2ur9xDzPqDV97_elPqQaACNn9BvhofFVTzcxDhuEU6KBa86qW.fBWcJIiPe.QNluI7P6Kwci.gxNMVMdcCkTA;
        _cfuvid=P4hZdwOPfZCAA9r.YzhkXYaQZ8g357nPpvDcX5rDDVg-1721162933404-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.10.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//bFNdbxQxDHy/X2Ht896pd9cW9d6AggSVQKUICRCqvFnvbtrEiWLnYFX1
        v6PsfRWJlzzYHs9MMnmaAVS2rTZQmQHV+OjmV+7h85dPXei+Nz9uLx9vbh/O+vfqrz+a9d1dVRdE
        aB7I6AG1MMFHR2oD79omESqVrctXq+XycnW1vpgaPrTkCqyPOl8vLuaaUxPmZ8vVxR45BGtIqg38
        nAEAPE1n0cgt/ak2cFYfKp5EsKdqcxwCqFJwpVKhiBVF1qo+NU1gJZ5kf7OK3rIAJgISIVaLDjhr
        ssQqoAMqhJygCe0ITNQKWAbx6BygD3kaCtBlNsU4xBQiJTcu4OtAI0SHIyCYlE1ZXHQV/BaTDVnK
        VuvGI1pAshkABTwpNsFZ8TVY7zNbHWtAbiFsKRXygdDpMNEkmvQv1y8sbA/O/uOgBsvG5dZyf5iD
        1zW8mR9A9bH8tobrGt7tqG8mNqHTcoMMDUFoFC1TCzqkkPsBEBp0yIZaaC3pTsSOlARw8k86Quig
        S9lqYaS+eHYkNfweyj31CScthdoRTnerZFkW8IFBgicwKGVecoyOPLHi9AgexyKLyZRwpLG8UEy0
        Jdajs5Y6ayyxsSSLap+O52OsXOhjCk2JIGfnjvXOspXhPhFK4BIh0RB38OcZwK8pvvmfRFYxBR/1
        XsMjcVm42qe3On2YU3N5dr7valB0Lxqr89leYSWjKPn7znJPKSY7pbnonD3P/gIAAP//AwCDwvQ0
        zAMAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8a44db1b3bfe2ae8-LAX
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 16 Jul 2024 20:48:57 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '1435'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '60000'
      x-ratelimit-remaining-requests:
      - '9980'
      x-ratelimit-remaining-tokens:
      - '58991'
      x-ratelimit-reset-requests:
      - 2m52.44s
      x-ratelimit-reset-tokens:
      - 1.009s
      x-request-id:
      - req_c05736bcb9b1353799dfe9e9c579e533
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "..."}, {"role": "user", "content":
      "Input: Minerals\nOutput: "}], "model": "gpt-3.5-turbo", "max_tokens": 1000}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '156'
      content-type:
      - application/json
      cookie:
      - __cf_bm=HLvgucfz5wSfnrlcOwGscxsenCsI21cr01f56SqnkKY-1721162933-1.0.1.1-M2ur9xDzPqDV97_elPqQaACNn9BvhofFVTzcxDhuEU6KBa86qW.fBWcJIiPe.QNluI7P6Kwci.gxNMVMdcCkTA;
        _cfuvid=P4hZdwOPfZCAA9r.YzhkXYaQZ8g357nPpvDcX5rDDVg-1721162933404-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - Linux
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.10.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA1RSTU/cQAy976+wcs6udqFA2RvqgVOFqnKpqgo5EycxzNjpjAcIiP9eTfaLXubg
        5/f0/Oa9LwAqbqstVG5Ac2H0y2v/eHd/+XZ5wTfO3d6mu9fuxd/+upEvP/BbVReGNo/k7MBaOQ2j
        J2OVHewioVFR3VydbTaXZ9fnVzMQtCVfaP1oy/PVxdJybHS53pxd7JmDsqNUbeH3AgDgfX6LR2np
        tdrCuj5MAqWEPVXb4xJAFdWXSYUpcTIUq+oT6FSMZLb9nYUi+gQYCQQtR/R+AnUux8jSA4vGHoUd
        pNwUJUcJbECbGZQSiTF66DSCDQRj1JEidFlcyaFIaDcjQw4o0Gg7reB+oAlGjxMguJhdUSiWgQWe
        MbLmVDbZT0elBCm7AbAAQjAQehtqCGTYqOcUahCKz3Qk1IDSgj6X+zy8kPfLhlj6FfzUQMBh1FiS
        gXDIgMX53BI49I5zqIFjkQnYC6V58MbidrqjWsk2hxXcQIO+BNNCy2S7dPZaCXA+iGwqOUi2yCS2
        jOwG6FTbBJw+eTEFkpQjAbb0N6OVSAyfaJ9i+pz5wfiq2v/tx7EUXvsxalMKJNn747xj4TQ8RMKk
        UgqQTMcd/WMB8GcuX/6vT9UYNYz2YPpEUgQ31zu56lT3E/h1swdNDf0n0nq92Bus0pSMwkPH0lMc
        I89VLDYXH4t/AAAA//8DAFKmkOaJAwAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8a44db25b9af2ae8-LAX
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 16 Jul 2024 20:48:58 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - heartex
      openai-processing-ms:
      - '1032'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '60000'
      x-ratelimit-remaining-requests:
      - '9979'
      x-ratelimit-remaining-tokens:
      - '58991'
      x-ratelimit-reset-requests:
      - 2m59.398s
      x-ratelimit-reset-tokens:
      - 1.009s
      x-request-id:
      - req_16ca633aa29b9cb16a5e6a86b1b6bd88
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "..."}, {"role": "user", "content":
      "Input: Macronutrients are nutrients that provide energy to the body and are
      needed in larger quantities compared to micronutrients. The three main macronutrients
      are carbohydrates, proteins, and fats. Carbohydrates are the body''s main source
      of energy, proteins are essential for growth and repair of tissues, and fats
      are important for energy storage and hormone production. It is important to
      consume these macronutrients in appropriate proportions to maintain overall
      health and well-being.\nOutput: "}], "model": "gpt-3.5-turbo", "max_tokens":
      1000}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '634'
      content-type:
      - application/json
      cookie:
      - __cf_bm=HLvgucfz5wSfnrlcOwGscxsenCsI21cr01f56SqnkKY-1721162933-1.0.1.1-M2ur9xDzPqDV97_elPqQaACNn9BvhofFVTzcxDhuEU6KBa86qW.fBWcJIiPe.QNluI7P6Kwci.gxNMVMdcCkTA;
        _cfuvid=P4hZdwOPfZCAA9r.YzhkXYaQZ8g357nPpvDcX5rDDVg-1721162933404-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.10.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//ZJNPb9swDMXv+RSELrskQZKua5PrgAED9ueyAcWGoWBsxmYmiRpFtw2K
        fvdBituk28WARf4en+jnxwmA49ZtwDU9WhOSn639/uv3Lz9u5Prq6jLsPzQBh93++i0/9Def3LQQ
        st1TY8/UvJGQPBlLPJYbJTQqqsur1XL5brW+uK6FIC35gnXJZhfzy5kNupXZYrm6HMleuKHsNvBz
        AgDwWJ/FY2zpwW1gMX0+CZQzduQ2L00ATsWXE4c5czaM5qanYiPRKFbbn7FRiYMpU7QMqASnN+vR
        IKnccUtAkbQ7gAlYT7CV9gAY2yNB1FILHMGjdqTwZ8BobEwZykpQqS1g4PNhc/jWE1ivRBCQI4T/
        vTSoW+kPraJRnhYvRhzztI7eYRF5f95SoWd/b/JRN8ugDYHsxjucdGo75UzRGD3sRKFTube+6isl
        ZC2ccc4DnY2tIIckWnZbwXE/2USxo9rZiwaJVMa1Q1NiMYePBpzPUBNoJOYhVN+Z/t0CR8CUVJIy
        WpUqJEvMdaPI0cod5Y4UvYee0I/278n72ZY4dnM3fvunl9B46ZLKtgQsDt6/nO84cu5vlTBLLAHJ
        JumIP00AftVwDq/y5pJKSHZr8ptiEVwu1kc9d/ofTtX1xVg0MfSn89ViNRkdunzIRuF2x7EjTco1
        q8Xn5GnyFwAA//8DAFkWWJGqAwAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8a44db2f1f0a2ae8-LAX
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 16 Jul 2024 20:49:00 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - user-jt0khdjhkecks0yodhgozy8e
      openai-processing-ms:
      - '1443'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '60000'
      x-ratelimit-remaining-requests:
      - '9978'
      x-ratelimit-remaining-tokens:
      - '58871'
      x-ratelimit-reset-requests:
      - 3m6.535s
      x-ratelimit-reset-tokens:
      - 1.129s
      x-request-id:
      - req_c92dc40846d4e2f0c9c418929282108b
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "..."}, {"role": "user", "content":
      "Input: Vitamins are essential nutrients that our body needs in small amounts
      to function properly. They play a crucial role in various bodily functions such
      as metabolism, immunity, and overall health. There are 13 essential vitamins
      that our body needs, including vitamin A, B-vitamins, vitamin C, D, E, and K.
      These vitamins can be obtained through a balanced diet that includes a variety
      of fruits, vegetables, whole grains, and lean proteins. In some cases, supplementation
      may be necessary to prevent vitamin deficiencies.\nOutput: "}], "model": "gpt-3.5-turbo",
      "max_tokens": 1000}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '668'
      content-type:
      - application/json
      cookie:
      - __cf_bm=HLvgucfz5wSfnrlcOwGscxsenCsI21cr01f56SqnkKY-1721162933-1.0.1.1-M2ur9xDzPqDV97_elPqQaACNn9BvhofFVTzcxDhuEU6KBa86qW.fBWcJIiPe.QNluI7P6Kwci.gxNMVMdcCkTA;
        _cfuvid=P4hZdwOPfZCAA9r.YzhkXYaQZ8g357nPpvDcX5rDDVg-1721162933404-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.10.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//XFNNbxQxDL3vr3ia8+yK3VIQvfHRSohDJYQACaEqk/HMmCbONHG2DKj/
        HSW77QKXHGL7+fn5+fcKaLhvLtDYyaj1s1u/cj+uv7i3b679/fWyvb26O7+7/DW8HpNefU1NWypC
        94OsPlZtbPCzI+Ugh7CNZJQK6vblbrt9sXv1/FkN+NCTK2XjrOuzzflac+zC+tl2d36snAJbSs0F
        vq0A4Hd9C0fp6WdzgYpTfzylZEZqLp6SgCYGV34akxInNaJNewraIEpSaX9mNZ4lwUTCntU4SNbI
        JJqgk1GEHNGFnikh0l3mSGCBRmMJxodcEwPCTNEogYaBrPKe3LLBp4mWimxjtmwchhAh2VMMOVVU
        t2COwVJKlFqkbCeYBE9quuA4+RbsfRbCkMUWYVsY6RH2FI1zuCfn1h2xjLVZpNpte4YCKFpa7h8n
        /H8aIepbsFiXe5bxlPi6xZsWb1u8a3F56Pehwic6JZU+usxsjXMLjK3K9NAphjxOMAdqMWTpqUfP
        pAcCLDbEORStEgx63lNMhGhkJIQBQ8ysqcWexiKCK7LcT8ERxmhY0oGPIyNFOCWWtMF7gaWohgUs
        Zd32oOY8O/J1ld4s6KjOXFgGmD1FfRwHPQ1smcQypQ0+kiffUWxh0BlX4I4jcMItLaWeJOVYZFtC
        RiRLvCcYgenpLhcjHLxRRtKq3GkjTwbbNEdPPjyZ2YVxjqErxpfs3NP/wMJpuolkUpBi3KRhPpQ/
        rIDv9WjyP3fQzDH4WW803JIUwO3ueDTN6U7/jp4doxrUuFNg9/xsdaTYpCUp+ZuBZaQ4R65HVIiu
        HlZ/AAAA//8DAIUy379DBAAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8a44db393cef2ae8-LAX
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 16 Jul 2024 20:49:02 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - user-jt0khdjhkecks0yodhgozy8e
      openai-processing-ms:
      - '1721'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '60000'
      x-ratelimit-remaining-requests:
      - '9977'
      x-ratelimit-remaining-tokens:
      - '58863'
      x-ratelimit-reset-requests:
      - 3m13.566s
      x-ratelimit-reset-tokens:
      - 1.137s
      x-request-id:
      - req_30a24575c1844d2f2f58493fda3e5733
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "..."}, {"role": "user", "content":
      "Input: Minerals are naturally occurring inorganic substances that are essential
      for the proper functioning of the human body. They play a crucial role in various
      bodily functions such as bone health, metabolism, nerve function, and overall
      well-being. Some important minerals include calcium, iron, magnesium, zinc,
      and potassium. A balanced diet that includes a variety of nutrient-rich foods
      is important to ensure adequate intake of these essential minerals.\nOutput:
      "}], "model": "gpt-3.5-turbo", "max_tokens": 1000}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '602'
      content-type:
      - application/json
      cookie:
      - __cf_bm=HLvgucfz5wSfnrlcOwGscxsenCsI21cr01f56SqnkKY-1721162933-1.0.1.1-M2ur9xDzPqDV97_elPqQaACNn9BvhofFVTzcxDhuEU6KBa86qW.fBWcJIiPe.QNluI7P6Kwci.gxNMVMdcCkTA;
        _cfuvid=P4hZdwOPfZCAA9r.YzhkXYaQZ8g357nPpvDcX5rDDVg-1721162933404-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.10.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//VFLLbtswELz7KxY8y0bsNA/7lkOBomhRtA0QBEURUNRK2oTcVcmlXTfI
        vxeUZbu98DDDmR0u53UGYKgxGzCut+rC4Odr//zl8TI+dFfX3z483j1+vFt9upeHu+5983VnqqKQ
        +hmdHlULJ2HwqCR8oF1Eq1hclzer5fJ6tX63GokgDfoi6wadXy6u5ppjLfOL5epqUvZCDpPZwI8Z
        AMDreJaM3OBvs4GL6ogETMl2aDanSwAmii+IsSlRUstqqjPphBV5jP2ZGKP1CWxE2JJaD61ECJZY
        LTFxB9ojDFEGjNBmduV1BZZ2ZPocLEMtzX4B9z3uRyNMCVlpMtvaSJJTuUR+fzJJFRA7n5viVgsj
        9Gi99hUEVFuLpxQqYIxbPGkqsNyAbEtmDzv0fl4jcbeA7xIQXnAP4fgi7a2OaVzM7phFcpzGTMMR
        nPWOcqiAYhkQbMeYRuAPsTtMHETLJnNYwL0AcsoRYYfQoYJlsA3+ylYRytZecNpN+ncRx1gVkAIl
        oDBILB8DKtCK97IDC7X1lh020BDq4QVTzAR2XCTqvthz1kjIOo/kemhFmrQw0w+/narhpRui1KVG
        nL0/4S0xpf4pok3CpQZJZTjI32YAP8cK5v9aZYYoYdAnlRfkYri+OdiZc+nP5O31RKqo9Wd8eXs5
        mwKatE+K4akl7jAOkcZClpizt9lfAAAA//8DAAI18jaPAwAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8a44db45ae662ae8-LAX
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 16 Jul 2024 20:49:03 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - user-jt0khdjhkecks0yodhgozy8e
      openai-processing-ms:
      - '1376'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '60000'
      x-ratelimit-remaining-requests:
      - '9976'
      x-ratelimit-remaining-tokens:
      - '58879'
      x-ratelimit-reset-requests:
      - 3m20.218s
      x-ratelimit-reset-tokens:
      - 1.121s
      x-request-id:
      - req_570b0c9d09dfde161d97a11283cb91f9
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "You are a helpful assistant."},
      {"role": "user", "content": "\nA prompt is a text paragraph that outlines the
      expected actions and instructs the large language model (LLM) to generate a
      specific output. This prompt is concatenated with the input text, and the model
      then creates the required output.\nThis describes the full template how the
      prompt is concatenated with the input to produce the output:\n\n```\n\n{prompt}\nInput:
      {category}\nOutput: {skill_0}\n```\n\nHere:\n- \"Input: {category}\" is input
      template,\n- \"{prompt}\" is the LLM prompt,\n- \"Output: {skill_0}\" is the
      output template.\n\nModel can produce erroneous output if a prompt is not well
      defined. In our collaboration, we\u2019ll work together to refine a prompt.
      The process consists of two main steps:\n\n## Step 1\nI will provide you with
      the current prompt along with prediction examples. Each example contains the
      input text, the final prediction produced by the model, and the user feedback.
      User feedback indicates whether the model prediction is correct or not. Your
      task is to analyze the examples and user feedback, determining whether the existing
      instruction is describing the task reflected by these examples precisely, and
      suggests changes to the prompt to address the incorrect predictions.\n\n## Step
      2\nNext, you will carefully review your reasoning in step 1, integrate the insights
      to refine the prompt, and provide me with the new prompt that improves the model\u2019s
      performance."}, {"role": "assistant", "content": "Sure, I\u2019d be happy to
      help you with this prompt engineering problem. Please provide me with the current
      prompt and the examples with user feedback."}, {"role": "user", "content": "\n##
      Current prompt\n...\n\n## Examples\n### Example #0\n\nInput: Macronutrients\n\nOutput:
      Macronutrients are nutrients that provide energy to the body and are needed
      in larger quantities compared to micronutrients. The three main macronutrients
      are carbohydrates, proteins, and fats. Carbohydrates are the body''s main source
      of energy, proteins are essential for growth and repair of tissues, and fats
      are important for energy storage and hormone production. It is important to
      consume these macronutrients in appropriate proportions to maintain overall
      health and well-being.\n\nUser feedback: Prediction is incorrect. Correct answer:
      \"Carbohydrates, Proteins, Fats\"\n\n\n### Example #1\n\nInput: Vitamins\n\nOutput:
      Vitamins are essential nutrients that our body needs in small amounts to function
      properly. They play a crucial role in various bodily functions such as metabolism,
      immunity, and overall health. There are 13 essential vitamins that our body
      needs, including vitamin A, B-vitamins, vitamin C, D, E, and K. These vitamins
      can be obtained through a balanced diet that includes a variety of fruits, vegetables,
      whole grains, and lean proteins. In some cases, supplementation may be necessary
      to prevent vitamin deficiencies.\n\nUser feedback: Prediction is incorrect.
      Correct answer: \"Vitamin A, Vitamin C, Vitamin D\"\n\n\n### Example #2\n\nInput:
      Minerals\n\nOutput: Minerals are naturally occurring inorganic substances that
      are essential for the proper functioning of the human body. They play a crucial
      role in various bodily functions such as bone health, metabolism, nerve function,
      and overall well-being. Some important minerals include calcium, iron, magnesium,
      zinc, and potassium. A balanced diet that includes a variety of nutrient-rich
      foods is important to ensure adequate intake of these essential minerals.\n\nUser
      feedback: Prediction is incorrect. Correct answer: \"Calcium, Iron, Magnesium\"\n\n\n\nSummarize
      your analysis about incorrect predictions and suggest changes to the prompt."}],
      "model": "gpt-4", "max_tokens": 1000}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '3811'
      content-type:
      - application/json
      cookie:
      - __cf_bm=HLvgucfz5wSfnrlcOwGscxsenCsI21cr01f56SqnkKY-1721162933-1.0.1.1-M2ur9xDzPqDV97_elPqQaACNn9BvhofFVTzcxDhuEU6KBa86qW.fBWcJIiPe.QNluI7P6Kwci.gxNMVMdcCkTA;
        _cfuvid=P4hZdwOPfZCAA9r.YzhkXYaQZ8g357nPpvDcX5rDDVg-1721162933404-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.10.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//ZJXNbtw2EMfv+xQDBWgushB/1Kn3FidIE6Bo0jropVsYs9RIGpsiBc5o
        14vAQF+jr5cnCUhKWju9GGsO5+v3n6G+rgAKros1FKZDNf1gT67s3Se8cu/CjXlfd7/ZsL/+/YOe
        SfvHw/VdUUYPv70jo7NXZXw/WFL2LptNIFSKUU9fn52eXp5dXVwkQ+9rstGtHfTk4uTV5en55NF5
        NiTFGv5eAQB8TX9jba6mh2INr8r5pCcRbKlYL5cAiuBtPClQhEXRaVEejcY7JZfKffEC3ji0B2EB
        38BHZ3wIZBQ+B6rZxBYEfoKbsW1J8n+ND/A5+H5QeNuha2njNu5X3pED7Qhwh2xxawnoASMGAXQ1
        WO/v2bWAmm7Rw0BGqYaXU8KX4EcdRhVAAXY1m0gMOAcdhQI0RPUWzX0JrCBEvYDle0oXEkhggYg+
        UEeujtmiSVHuYcpiD6mYIfgdpwtozBhQKR2za3zoUXlHUJOYwENuGY3xIQf0wCpgxhDIKYyuphD5
        JqNvUsIhwangS/dDmDZBivx6NMG7UQOTUylhx4o9OylTHT07CmgFMNBceRUpf/B72lEo/88EJCsk
        oN2EuCbhQPXENbLpfSCQgQw3bCr4E7WjEB0coIuSWHQYSwUfnlZeplwCe3QKCKIBue208WGPoQbL
        orH3Re/YYawg9xuFbH04VBBbuPHlDGlrqQfLJOC8zkonIb/9+18cAqUwBEpy4JYt6wG243Jzjwdg
        F1tLCrNATQ07qqNIS6jE7YuHHqdJyeqAsYQhotwTSOdHW09kDkeCy1At06p+mp3kFLRccM7dL2Mc
        ntB9NgU+PEUtFVwf5tR5ZJeEWYup3Vx3qtegg3aMRTwnNimdZKamIRPR2UOVuafLPnDLDu2MwTew
        Kaqq2hQp6pbApJ1OrYrvSbtY1LRnLOsk4qbI+46LuDFQR2i1Owlk0+rKuI2bYUjKBRouw7JwO17L
        4Bu0Nu9VRjFnKJ8RxadMf0Bawft0kPRYx3o/xjFZw1/Tlm3cp0RqOYE35fLz7fHnu00Rva/jnBk7
        1k/lsWxY5yRZFYshj89x9/J7Mj8MWZ+qmF7ix+UJt76N+xCfezdau5w37Fi620Ao3sXnWtQP2f1x
        BfBP+lSMz17/Igt7q/6eXAz4+vw8xyuOX6Wj9ezny8mqXtEeDVe/XK2mEgs5iFJ/27Br40Zy+nTE
        QlePq+8AAAD//wMAm53BXzEHAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8a44db501ee72ae8-LAX
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 16 Jul 2024 20:49:18 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - user-jt0khdjhkecks0yodhgozy8e
      openai-processing-ms:
      - '13908'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '10000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '8110'
      x-ratelimit-reset-requests:
      - 8.64s
      x-ratelimit-reset-tokens:
      - 11.34s
      x-request-id:
      - req_661f191d71ccc3b6ccc5b3e02bd9721b
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "You are a helpful assistant."},
      {"role": "user", "content": "\nA prompt is a text paragraph that outlines the
      expected actions and instructs the large language model (LLM) to generate a
      specific output. This prompt is concatenated with the input text, and the model
      then creates the required output.\nThis describes the full template how the
      prompt is concatenated with the input to produce the output:\n\n```\n\n{prompt}\nInput:
      {category}\nOutput: {skill_0}\n```\n\nHere:\n- \"Input: {category}\" is input
      template,\n- \"{prompt}\" is the LLM prompt,\n- \"Output: {skill_0}\" is the
      output template.\n\nModel can produce erroneous output if a prompt is not well
      defined. In our collaboration, we\u2019ll work together to refine a prompt.
      The process consists of two main steps:\n\n## Step 1\nI will provide you with
      the current prompt along with prediction examples. Each example contains the
      input text, the final prediction produced by the model, and the user feedback.
      User feedback indicates whether the model prediction is correct or not. Your
      task is to analyze the examples and user feedback, determining whether the existing
      instruction is describing the task reflected by these examples precisely, and
      suggests changes to the prompt to address the incorrect predictions.\n\n## Step
      2\nNext, you will carefully review your reasoning in step 1, integrate the insights
      to refine the prompt, and provide me with the new prompt that improves the model\u2019s
      performance."}, {"role": "assistant", "content": "Sure, I\u2019d be happy to
      help you with this prompt engineering problem. Please provide me with the current
      prompt and the examples with user feedback."}, {"role": "user", "content": "\n##
      Current prompt\n...\n\n## Examples\n### Example #0\n\nInput: Macronutrients\n\nOutput:
      Macronutrients are nutrients that provide energy to the body and are needed
      in larger quantities compared to micronutrients. The three main macronutrients
      are carbohydrates, proteins, and fats. Carbohydrates are the body''s main source
      of energy, proteins are essential for growth and repair of tissues, and fats
      are important for energy storage and hormone production. It is important to
      consume these macronutrients in appropriate proportions to maintain overall
      health and well-being.\n\nUser feedback: Prediction is incorrect. Correct answer:
      \"Carbohydrates, Proteins, Fats\"\n\n\n### Example #1\n\nInput: Vitamins\n\nOutput:
      Vitamins are essential nutrients that our body needs in small amounts to function
      properly. They play a crucial role in various bodily functions such as metabolism,
      immunity, and overall health. There are 13 essential vitamins that our body
      needs, including vitamin A, B-vitamins, vitamin C, D, E, and K. These vitamins
      can be obtained through a balanced diet that includes a variety of fruits, vegetables,
      whole grains, and lean proteins. In some cases, supplementation may be necessary
      to prevent vitamin deficiencies.\n\nUser feedback: Prediction is incorrect.
      Correct answer: \"Vitamin A, Vitamin C, Vitamin D\"\n\n\n### Example #2\n\nInput:
      Minerals\n\nOutput: Minerals are naturally occurring inorganic substances that
      are essential for the proper functioning of the human body. They play a crucial
      role in various bodily functions such as bone health, metabolism, nerve function,
      and overall well-being. Some important minerals include calcium, iron, magnesium,
      zinc, and potassium. A balanced diet that includes a variety of nutrient-rich
      foods is important to ensure adequate intake of these essential minerals.\n\nUser
      feedback: Prediction is incorrect. Correct answer: \"Calcium, Iron, Magnesium\"\n\n\n\nSummarize
      your analysis about incorrect predictions and suggest changes to the prompt."},
      {"role": "assistant", "content": "## Analysis of Incorrect Predictions & Suggestions
      for Prompt Change\n\nGiven the available examples and looking at the expected
      ''correct'' outputs as indicated in the user feedback, it seems like the model
      is comprehending the task correctly and providing accurate and informative descriptions
      according to its current understanding of the prompt. The descriptions given
      for macronutrients, vitamins, and minerals are correct.\n\nHowever, the user
      feedback suggests that the desired output is more specific. Rather than an explanation
      or description, users want a straightforward list of examples for the given
      category. \n\nSo, the problem lies not in the model\u2019s interpretive ability
      but in the way input task is defined to the model.\n\nTo make the prompt clearer,
      we should specify that the model is expected to provide short, specific example
      outputs rather than descriptions or explanations. By specifying this expectation
      in the prompt, we can guide the model\u2019s output more effectively.\n\nSo
      the original prompt of \"...\" can be changed to something like this: \n\n\"Given
      a category of health-related substances, provide a list of specific substances
      that fall under this category, rather than a description or explanation. For
      example:\n\nInput: Vitamins\nOutput: Vitamin A, Vitamin C, Vitamin D\"\n\nBy
      including this explicit example, we clarify the desired format of the output."},
      {"role": "user", "content": "\nNow please carefully review your reasoning in
      Step 1 and help with Step 2: refining the prompt.\n\n## Current prompt\n...\n\n##
      Follow this guidance to refine the prompt:\n\n1. The new prompt should should
      describe the task precisely, and address the points raised in the user feedback.\n\n2.
      The new prompt should be similar to the current prompt, and only differ in the
      parts that address the issues you identified in Step 1.\n    Example:\n    -
      Current prompt: \"Generate a summary of the input text.\"\n    - New prompt:
      \"Generate a summary of the input text. Pay attention to the original style.\"\n\n3.
      Reply only with the new prompt. Do not include input and output templates in
      the prompt.\n"}], "model": "gpt-4", "max_tokens": 1000}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '5987'
      content-type:
      - application/json
      cookie:
      - __cf_bm=HLvgucfz5wSfnrlcOwGscxsenCsI21cr01f56SqnkKY-1721162933-1.0.1.1-M2ur9xDzPqDV97_elPqQaACNn9BvhofFVTzcxDhuEU6KBa86qW.fBWcJIiPe.QNluI7P6Kwci.gxNMVMdcCkTA;
        _cfuvid=P4hZdwOPfZCAA9r.YzhkXYaQZ8g357nPpvDcX5rDDVg-1721162933404-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.10.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA1RSwWojMQy9z1cIn5OQSbLtJrdCYWEpFLr0ULZLcDyaGTcay1iaJqHk3xdP0qS9
        GKSnJz09+aMAML4yKzCuteq6SOMlvT3G7fRuO3/qcPaw+/Ny/5Sen31Pt/TbjDKDN2/o9JM1cdxF
        QvUcTrBLaBVz1/J2VpY3s+WP5QB0XCFlWhN1vBhPb8r5mdGydyhmBX8LAICP4c3aQoV7s4Lp6DPT
        oYht0KwuRQAmMeWMsSJe1AY1oyvoOCiGQe6r+eXfMYAFZxUbTgdISFksKEOLlrQFGyrYIVFAkREc
        uE+gVrbgJReRFwWJ6HztHeDe5t0FtLUKtSWCPlSYQFsvlyETuGcIrBATv/sKoUJxycdsmQAnwH0k
        G+wQT+Alj7RBdphAWu6pgg1mzRycFzxJ4Po6nAMdJq/GnHc+XswibmLiTTY29ESXfO2Dl3ad0AqH
        bIwoxxP9WAD8G47Sf/PZxMRd1LXyFkNuWJaL+amhuX6AK7woz6CyWvpK+7kozhqNHESxW9c+NJhi
        8sOVstLiWPwHAAD//wMA4vqD2JwCAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8a44dba95dc92ae8-LAX
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 16 Jul 2024 20:49:22 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - user-jt0khdjhkecks0yodhgozy8e
      openai-processing-ms:
      - '2858'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '10000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '7593'
      x-ratelimit-reset-requests:
      - 8.64s
      x-ratelimit-reset-tokens:
      - 14.442s
      x-request-id:
      - req_d7c92f889060fd4071d2e73af9188581
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "\"Given a category related
      to health and wellness, your task is to list specific examples that fall under
      this category. Do not provide descriptions or explanations. Your answer should
      be a concise list of examples only.\""}, {"role": "user", "content": "Input:
      Macronutrients\nOutput: "}], "model": "gpt-3.5-turbo", "max_tokens": 1000}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '381'
      content-type:
      - application/json
      cookie:
      - __cf_bm=HLvgucfz5wSfnrlcOwGscxsenCsI21cr01f56SqnkKY-1721162933-1.0.1.1-M2ur9xDzPqDV97_elPqQaACNn9BvhofFVTzcxDhuEU6KBa86qW.fBWcJIiPe.QNluI7P6Kwci.gxNMVMdcCkTA;
        _cfuvid=P4hZdwOPfZCAA9r.YzhkXYaQZ8g357nPpvDcX5rDDVg-1721162933404-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.10.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA1SQMW/CMBCF9/yKk2cS4SCCYK1UtUPVdujSUiEnORKD47PsS1WE+O+VQyDq4uG9
        e+++8zkBELoWGxBVq7jqnEnX5vAajvOnA+afmj9+ZEfP7yuiXu8XL2IWE1QesOJbKquocwZZk73a
        lUfFGFvlKpeyyNdFPhgd1WhirHGcLrJlyr0vKZ3LfDkmW9IVBrGBrwQA4Dy8kdHW+Cs2MJ/dlA5D
        UA2KzX0IQHgyUREqBB1YWRazyazIMtoBW2bwoHxJ7an2ijFsbZ7BmydGbcPWLjJ4VBzEmL3clxpq
        nKcyAtremLu+11aHdudRBbJxQWBy1/glAfgejuv/8QrnqXO8YzqijYWFvNaJ6TsnUy5Hk4mVmfRV
        kYx8IpwCY7fba9ugd14Pl0bK5JL8AQAA//8DAGU0AdLoAQAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8a44dbc39faf2ae8-LAX
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 16 Jul 2024 20:49:23 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - user-jt0khdjhkecks0yodhgozy8e
      openai-processing-ms:
      - '427'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '60000'
      x-ratelimit-remaining-requests:
      - '9978'
      x-ratelimit-remaining-tokens:
      - '58935'
      x-ratelimit-reset-requests:
      - 3m8.7s
      x-ratelimit-reset-tokens:
      - 1.065s
      x-request-id:
      - req_662eca936bcb67f4984d74589004a309
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "\"Given a category related
      to health and wellness, your task is to list specific examples that fall under
      this category. Do not provide descriptions or explanations. Your answer should
      be a concise list of examples only.\""}, {"role": "user", "content": "Input:
      Vitamins\nOutput: "}], "model": "gpt-3.5-turbo", "max_tokens": 1000}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '375'
      content-type:
      - application/json
      cookie:
      - __cf_bm=HLvgucfz5wSfnrlcOwGscxsenCsI21cr01f56SqnkKY-1721162933-1.0.1.1-M2ur9xDzPqDV97_elPqQaACNn9BvhofFVTzcxDhuEU6KBa86qW.fBWcJIiPe.QNluI7P6Kwci.gxNMVMdcCkTA;
        _cfuvid=P4hZdwOPfZCAA9r.YzhkXYaQZ8g357nPpvDcX5rDDVg-1721162933404-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.10.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA1RQ0U4CMRB8v6/Y9Jkj3BFQ7g1FQ6KJTxqMGlLulqPYdpt2STSEfzc9Du58aTIz
        nd2ZPSYAQlWiAFHuJJfG6XSm9y88n/mn1bNdhsf9u1quFvhqqqWcoxhEB232WPLFNSzJOI2syJ7l
        0qNkjFOzmzzLpvlsOm4EQxXqaKsdp+PhJOWD31A6yvJJ69yRKjGIAj4SAIBj88aMtsIfUcBocGEM
        hiBrFMX1E4DwpCMjZAgqsLQsBp1YkmW0TewU3hRLoyzcf9oOLPrgLsv78KEP5qIde7rm0VQ7T5uY
        3R60vvJbZVXYrT3KQDbuDkzubD8lAF9N78O/KsJ5Mo7XTN9o48BpW1t0l+7E/CIysdQdfztK2nwi
        /AZGs94qW6N3XjVHiCmTU/IHAAD//wMAfqkIrwMCAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8a44dbc80da82ae8-LAX
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 16 Jul 2024 20:49:23 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - user-jt0khdjhkecks0yodhgozy8e
      openai-processing-ms:
      - '317'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '60000'
      x-ratelimit-remaining-requests:
      - '9977'
      x-ratelimit-remaining-tokens:
      - '58937'
      x-ratelimit-reset-requests:
      - 3m16.63s
      x-ratelimit-reset-tokens:
      - 1.063s
      x-request-id:
      - req_0b95ae2bfc9411f305095b502751b4f9
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "\"Given a category related
      to health and wellness, your task is to list specific examples that fall under
      this category. Do not provide descriptions or explanations. Your answer should
      be a concise list of examples only.\""}, {"role": "user", "content": "Input:
      Minerals\nOutput: "}], "model": "gpt-3.5-turbo", "max_tokens": 1000}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '375'
      content-type:
      - application/json
      cookie:
      - __cf_bm=HLvgucfz5wSfnrlcOwGscxsenCsI21cr01f56SqnkKY-1721162933-1.0.1.1-M2ur9xDzPqDV97_elPqQaACNn9BvhofFVTzcxDhuEU6KBa86qW.fBWcJIiPe.QNluI7P6Kwci.gxNMVMdcCkTA;
        _cfuvid=P4hZdwOPfZCAA9r.YzhkXYaQZ8g357nPpvDcX5rDDVg-1721162933404-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.10.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//VJDLbsIwFET3+QrL6wQRaEDJtquIorbbPoSMcwkG29eyb0oR4t8rh0DU
        jR8znvGxLwljXDW8YlzuBUnjdFbqwyvVzSn/OdXrF3kyT/X5PezK1fHcrHgaE7g9gKR7aiLROA2k
        0N5s6UEQxNZ8OcvzxaxczHvDYAM6xlpH2XxSZNT5LWbTfFYMyT0qCYFX7DNhjLFLP0ZG28Avr9g0
        vSsGQhAt8OpxiDHuUUeFixBUIGGJp6Mp0RLYHjtjtUf7ZTP2LLRUnYnLtWgthGHzoayM8xtSLOsM
        H4quDwKNrfO4jbS20/qh75RVYb/xIALaeFsgdLf4NWHsu39p9w+eO4/G0YbwCDYWFuWtjo9/O5r5
        YjAJSehRXxbJwMfDORCYzU7ZFrzzqn92pEyuyR8AAAD//wMALbtIEvUBAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8a44dbcbdae92ae8-LAX
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 16 Jul 2024 20:49:24 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - user-jt0khdjhkecks0yodhgozy8e
      openai-processing-ms:
      - '256'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '60000'
      x-ratelimit-remaining-requests:
      - '9976'
      x-ratelimit-remaining-tokens:
      - '58937'
      x-ratelimit-reset-requests:
      - 3m24.651s
      x-ratelimit-reset-tokens:
      - 1.063s
      x-request-id:
      - req_5d260bb090dfe165b93681273d7a4d23
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "..."}, {"role": "user", "content":
      "Input: 1. Carbohydrates\n2. Proteins\n3. Fats\nOutput: "}], "model": "gpt-3.5-turbo",
      "max_tokens": 1000}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '186'
      content-type:
      - application/json
      cookie:
      - __cf_bm=HLvgucfz5wSfnrlcOwGscxsenCsI21cr01f56SqnkKY-1721162933-1.0.1.1-M2ur9xDzPqDV97_elPqQaACNn9BvhofFVTzcxDhuEU6KBa86qW.fBWcJIiPe.QNluI7P6Kwci.gxNMVMdcCkTA;
        _cfuvid=P4hZdwOPfZCAA9r.YzhkXYaQZ8g357nPpvDcX5rDDVg-1721162933404-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.10.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//XFI9b9swEN31Kw6cZcN24sT2VrToVidDkKUoDEo6SUzIO4J3SiIE/u8F
        ZcdGu3B4X3y842cBYFxjdmDq3modop9t/cvD8BD79/v9Zvnj17f9+Pz4/HO/WNmPx40ps4OrF6z1
        yzWvOUSP6phOdJ3QKubU5f1qubxbbe9uJyJwgz7buqizm/l6pkOqeLZYrtZnZ8+uRjE7+F0AAHxO
        Z+5IDX6YHSzKLySgiO3Q7C4iAJPYZ8RYESdqSU15JWsmRZpqP/UIPGgcFAQxCChDhWDBO1HgFoKt
        E9OgySGpQM0hMPkRWh6oAUfQMjcyh6ceBf9X24SAIkjqrIeWE8TEb65x1AESpm4ESw1Ug/MTVnmu
        X2US8pCg4sahzOG7TRX3Y5OsopQ5Q9GRlJO5tSoQvR2hcW2LCUkhv15yuZzSONRJmdu4EDnleZwu
        ecNkvYcerdd+Er2j97MKHXVzc57Y8TJqz11MXOW10OD9BW8dOekPCa0w5bGKcjzZjwXAn2mlwz9b
        MjFxiHpQfkXKgTe3pzhz/URXcr05k8pq/RXfropzPyOjKIZD66jDFJOb9ptbFsfiLwAAAP//AwA/
        V4li3gIAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8a44dbcf1f752ae8-LAX
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 16 Jul 2024 20:49:25 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - user-jt0khdjhkecks0yodhgozy8e
      openai-processing-ms:
      - '1053'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '60000'
      x-ratelimit-remaining-requests:
      - '9975'
      x-ratelimit-remaining-tokens:
      - '58984'
      x-ratelimit-reset-requests:
      - 3m32.783s
      x-ratelimit-reset-tokens:
      - 1.016s
      x-request-id:
      - req_3a1bfb936d2e08b639842cefa1baebd4
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "..."}, {"role": "user", "content":
      "Input: - Vitamin C\n- Vitamin D\n- Vitamin B12\n- Vitamin E\n- Vitamin A\nOutput:
      "}], "model": "gpt-3.5-turbo", "max_tokens": 1000}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '213'
      content-type:
      - application/json
      cookie:
      - __cf_bm=HLvgucfz5wSfnrlcOwGscxsenCsI21cr01f56SqnkKY-1721162933-1.0.1.1-M2ur9xDzPqDV97_elPqQaACNn9BvhofFVTzcxDhuEU6KBa86qW.fBWcJIiPe.QNluI7P6Kwci.gxNMVMdcCkTA;
        _cfuvid=P4hZdwOPfZCAA9r.YzhkXYaQZ8g357nPpvDcX5rDDVg-1721162933404-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.10.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA2xSTW/bMAy951cQOm2AUiTpmq2+bd0XBjQF2mGHrUMhy7TNRhYFkW4WFP3vg520
        zT4uAsSn9/RIvvsJgKHKFGB869R3KUxPw+3FhkK7uvg622K9vKQV3a0+XZ1/cWffjR0YXN6i10fW
        kecuBVTiuIN9Rqc4qM5fL+bz5eJ0uRyBjisMA61JOj0+Oplqn0uezuaLkz2zZfIopoAfEwCA+/Ec
        PMYKf5kCZvax0qGIa9AUT48ATOYwVIwTIVEX1dhn0HNUjKPtz5gRXEYQ7hA8dx1HEO6zRwGuQVuE
        QKJYwR2p6yhKcR2v4xS+7a5wVsAZae4F6tyTigXR7DYl5kwoFta0IQslhgAJU8IsFsrM3nOgQ533
        BXx0qluoSVp4IS50HC1oH91LCzVnpZqwgo7C+vDuMaMLYgGbBrYc1nKo+m6+KOAcndpR10LiPmje
        Wqgc5S2kzFXvB9f/KB7KfChg1Y+9IVZi4Q4bVFcGBKbhb0kUnW//39nbAq42iAqJ1SkPQ/EuZ9ZD
        YsbqryFh04jZL+3haduBm5S5HJIR+xCe6jVFkvYmoxOOw2ZFOe3oDxOAn2Oq+j+CYlLmLumN8hrj
        IHj8ZidnnnP8DM5niz2qrC4cAK9mk71DI1tR7G5qig3mlGkM2eBz8jD5DQAA//8DAGKk9I1jAwAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8a44dbd74a542ae8-LAX
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 16 Jul 2024 20:49:27 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - user-jt0khdjhkecks0yodhgozy8e
      openai-processing-ms:
      - '1313'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '60000'
      x-ratelimit-remaining-requests:
      - '9974'
      x-ratelimit-remaining-tokens:
      - '58978'
      x-ratelimit-reset-requests:
      - 3m40.107s
      x-ratelimit-reset-tokens:
      - 1.022s
      x-request-id:
      - req_71f7b9d3572336cd011c309cda768568
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "..."}, {"role": "user", "content":
      "Input: - Iron\n- Calcium\n- Magnesium\n- Zinc\n- Potassium\nOutput: "}], "model":
      "gpt-3.5-turbo", "max_tokens": 1000}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '199'
      content-type:
      - application/json
      cookie:
      - __cf_bm=HLvgucfz5wSfnrlcOwGscxsenCsI21cr01f56SqnkKY-1721162933-1.0.1.1-M2ur9xDzPqDV97_elPqQaACNn9BvhofFVTzcxDhuEU6KBa86qW.fBWcJIiPe.QNluI7P6Kwci.gxNMVMdcCkTA;
        _cfuvid=P4hZdwOPfZCAA9r.YzhkXYaQZ8g357nPpvDcX5rDDVg-1721162933404-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.10.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA2RUXW/UQAx8v19h5fmu6hUo9N4qKKISXxJISFBU7SVO1rCxw9o5GlD/O3KSu4Py
        Eilre2Y8a+/vBUBBVbGBoozByrZLq4v07d2dXn749Oz155c/3pzm6sPly1dX198vfulQLL1Ctt+w
        tH3VSSltl9BIeAqXGYOho66fnq3X52cX50/HQCsVJi9rOls9Onmysj5vZXW6PnsyV0ahErXYwJcF
        AMDv8esaucK7YgOny/1Ji6qhwWJzSAIosiQ/KYIqqQW2YnkMlsKGPMr+GBESqYHUgAlbZFMYpIcu
        y44qrCBkBFRFNgoJWmLMISnUksEiwlaq4QSuQhkdwiIqHpO6FAaFABXVNWZkA9cFxNAGYgvExA3I
        zrMTRAzJ4uaGb3gF11l4A9dtJ9nlH/hqyW1wh50uYitNki2xY2asYJtEKigxJV3Cz0hlhIipU7Ac
        WB0M5G5okMFilr6J0tuxDyd+HlJJfbuBq0PTzq2WhRvYCqNC4AoM0eIS2l7LhFD3XLqqJTDmHYJS
        wyERN8sxeZaVxIy4GXnehIZRR6ZXo8K9JcDeYtoje/mEeeTQvvNW3NrJtAGobXtG0EEN24mUFIh3
        knZYuT0ufTyPGLLNhaOUz8TlQ69nvCPnT+mn2qmrLoshMejAfumkS3jx9vLvX6fyi4CKdqQkPHK9
        F/OZ/N/gLkuHeW7Va/9zNv5rU516qmAbUuASJ7qDLw9avOFrLlNf+bQF2IVMaIMPUC1SKWQfE+KH
        00vsm5ChIjQoA48CAFn7jOOOtIg2pwRKA2T80VOel8h7ks7Ir3IWUswreH/Y3SRNl2Xre859Sofz
        mpg03mYMKux7qibdVH6/APg6vhH9P2tfdFnazm5NviM74KPHE1xxfJWOwfX5PmpiIf0VuHi2mBUW
        0zDd1sQN5i7T+GS4zsX94g8AAAD//wMABComITEFAAA=
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8a44dbe11f572ae8-LAX
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 16 Jul 2024 20:49:29 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - user-jt0khdjhkecks0yodhgozy8e
      openai-processing-ms:
      - '2401'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '60000'
      x-ratelimit-remaining-requests:
      - '9973'
      x-ratelimit-remaining-tokens:
      - '58981'
      x-ratelimit-reset-requests:
      - 3m47.188s
      x-ratelimit-reset-tokens:
      - 1.019s
      x-request-id:
      - req_690475c25816576ccdfb11809ca79083
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "You are a helpful assistant."},
      {"role": "user", "content": "\nA prompt is a text paragraph that outlines the
      expected actions and instructs the large language model (LLM) to generate a
      specific output. This prompt is concatenated with the input text, and the model
      then creates the required output.\nThis describes the full template how the
      prompt is concatenated with the input to produce the output:\n\n```\n\n{prompt}\nInput:
      {category}\nOutput: {skill_0}\n```\n\nHere:\n- \"Input: {category}\" is input
      template,\n- \"{prompt}\" is the LLM prompt,\n- \"Output: {skill_0}\" is the
      output template.\n\nModel can produce erroneous output if a prompt is not well
      defined. In our collaboration, we\u2019ll work together to refine a prompt.
      The process consists of two main steps:\n\n## Step 1\nI will provide you with
      the current prompt along with prediction examples. Each example contains the
      input text, the final prediction produced by the model, and the user feedback.
      User feedback indicates whether the model prediction is correct or not. Your
      task is to analyze the examples and user feedback, determining whether the existing
      instruction is describing the task reflected by these examples precisely, and
      suggests changes to the prompt to address the incorrect predictions.\n\n## Step
      2\nNext, you will carefully review your reasoning in step 1, integrate the insights
      to refine the prompt, and provide me with the new prompt that improves the model\u2019s
      performance."}, {"role": "assistant", "content": "Sure, I\u2019d be happy to
      help you with this prompt engineering problem. Please provide me with the current
      prompt and the examples with user feedback."}, {"role": "user", "content": "\n##
      Current prompt\n\"Given a category related to health and wellness, your task
      is to list specific examples that fall under this category. Do not provide descriptions
      or explanations. Your answer should be a concise list of examples only.\"\n\n##
      Examples\n### Example #0\n\nInput: Macronutrients\n\nOutput: 1. Carbohydrates\n2.
      Proteins\n3. Fats\n\nUser feedback: Prediction is incorrect. Correct answer:
      \"Carbohydrates, Proteins, Fats\"\n\n\n### Example #1\n\nInput: Vitamins\n\nOutput:
      - Vitamin C\n- Vitamin D\n- Vitamin B12\n- Vitamin E\n- Vitamin A\n\nUser feedback:
      Prediction is incorrect. Correct answer: \"Vitamin A, Vitamin C, Vitamin D\"\n\n\n###
      Example #2\n\nInput: Minerals\n\nOutput: - Iron\n- Calcium\n- Magnesium\n- Zinc\n-
      Potassium\n\nUser feedback: Prediction is incorrect. Correct answer: \"Calcium,
      Iron, Magnesium\"\n\n\n\nSummarize your analysis about incorrect predictions
      and suggest changes to the prompt."}], "model": "gpt-4", "max_tokens": 1000}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '2724'
      content-type:
      - application/json
      cookie:
      - __cf_bm=HLvgucfz5wSfnrlcOwGscxsenCsI21cr01f56SqnkKY-1721162933-1.0.1.1-M2ur9xDzPqDV97_elPqQaACNn9BvhofFVTzcxDhuEU6KBa86qW.fBWcJIiPe.QNluI7P6Kwci.gxNMVMdcCkTA;
        _cfuvid=P4hZdwOPfZCAA9r.YzhkXYaQZ8g357nPpvDcX5rDDVg-1721162933404-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.10.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAA5RUTWsjRxC961cU40MSkIW19q6xbku+HNCGhZiQJQqm1FMzU3ZPVaerR7JY/N9D
        94wk55BDLsPQ9fXeq0d9nQFUXFcrqFyHyfXBX975p89X++X97z+uf/3l+kut6eah+/iHDzt72lXz
        XKHbJ3LpWLVw2gdPiVXGsIuEiXLX5e275fLDu7vbqxLotSafy9qQLm8urz4sr6eKTtmRVSv4cwYA
        8LV8Mzap6aVaQakvLz2ZYUvV6pQEUEX1+aVCM7aEkqr5OehUEkmBe3EBHwX9wdg28lPUHlJHEKLu
        uKYa6AUzEwOUGgajCA1RvUX3PAdOYES9QeowlTKPsc1faQdsCQo5+Ha9/vQdDFJTzEBqlha0KfkJ
        7RnYwGmM5FIZwim/tCQUMeVcDCFqiIyJznBKu9Kj5R0JOEzUamSyBdzrnnYU5xMT7jEegM0GOuJV
        8EzAUjIajT2m9AaWDikMCSJZUDFabGQjDx0V/vbNSQFgqTkPPitwAHoJmcmbNklh+0ZRNEAIHlnA
        6O+BxFGeu9dYGxgFjNkpsD2A075Hm8OeU6dDAhn6LUUDjbAdvKcEQVmS5ZaTXmNhHr5efyq4Ly7g
        t6FtyXLs+w6lJdvIgwLWdSSzksxy3ECIVLPLxh1Xjp5becsmgxmNMDLFkjuHPYFDAfPcdskf8u65
        GaHQC1uRN0TtQxGExfmhJkCwQI6bLCOrAG4z0VxUswWPh2k7C7inSNkYkzuDGtXAfZY1/4ilOBTc
        q8x6U/1cbIFHYxwgki/6JIWO0Keu8NuT90JmczjoEE+GLA6xdEJ3Nl7ZdIPenyyY/TsNWcAPCqLp
        uG2oyVzkMOqpRTOPMmq2gC95JIrtKYJ1Ovg6OwXBqTg2GiFocxq+gOzCEdgpfbLv0Vn/01Moh//2
        FQs0USUtNlU1HY/X09Xx2oao23yhZPD+9N6wsHWPkdBU8oWxpGEsf50B/FWu2/Cvg1WNxnhM+kyS
        G75/fz32q86H9Bxd3t1M0aQJ/Tlwe3M7myBWdrBE/WPD0lIMkcu1y0Bnr7N/AAAA//8DALIVKpnk
        BQAA
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8a44dbf1bcab2ae8-LAX
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 16 Jul 2024 20:49:39 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - user-jt0khdjhkecks0yodhgozy8e
      openai-processing-ms:
      - '9417'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '10000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '8384'
      x-ratelimit-reset-requests:
      - 8.64s
      x-ratelimit-reset-tokens:
      - 9.696s
      x-request-id:
      - req_0e0d251c377e3baab8ae629fd3a85759
    status:
      code: 200
      message: OK
- request:
    body: '{"messages": [{"role": "system", "content": "You are a helpful assistant."},
      {"role": "user", "content": "\nA prompt is a text paragraph that outlines the
      expected actions and instructs the large language model (LLM) to generate a
      specific output. This prompt is concatenated with the input text, and the model
      then creates the required output.\nThis describes the full template how the
      prompt is concatenated with the input to produce the output:\n\n```\n\n{prompt}\nInput:
      {category}\nOutput: {skill_0}\n```\n\nHere:\n- \"Input: {category}\" is input
      template,\n- \"{prompt}\" is the LLM prompt,\n- \"Output: {skill_0}\" is the
      output template.\n\nModel can produce erroneous output if a prompt is not well
      defined. In our collaboration, we\u2019ll work together to refine a prompt.
      The process consists of two main steps:\n\n## Step 1\nI will provide you with
      the current prompt along with prediction examples. Each example contains the
      input text, the final prediction produced by the model, and the user feedback.
      User feedback indicates whether the model prediction is correct or not. Your
      task is to analyze the examples and user feedback, determining whether the existing
      instruction is describing the task reflected by these examples precisely, and
      suggests changes to the prompt to address the incorrect predictions.\n\n## Step
      2\nNext, you will carefully review your reasoning in step 1, integrate the insights
      to refine the prompt, and provide me with the new prompt that improves the model\u2019s
      performance."}, {"role": "assistant", "content": "Sure, I\u2019d be happy to
      help you with this prompt engineering problem. Please provide me with the current
      prompt and the examples with user feedback."}, {"role": "user", "content": "\n##
      Current prompt\n\"Given a category related to health and wellness, your task
      is to list specific examples that fall under this category. Do not provide descriptions
      or explanations. Your answer should be a concise list of examples only.\"\n\n##
      Examples\n### Example #0\n\nInput: Macronutrients\n\nOutput: 1. Carbohydrates\n2.
      Proteins\n3. Fats\n\nUser feedback: Prediction is incorrect. Correct answer:
      \"Carbohydrates, Proteins, Fats\"\n\n\n### Example #1\n\nInput: Vitamins\n\nOutput:
      - Vitamin C\n- Vitamin D\n- Vitamin B12\n- Vitamin E\n- Vitamin A\n\nUser feedback:
      Prediction is incorrect. Correct answer: \"Vitamin A, Vitamin C, Vitamin D\"\n\n\n###
      Example #2\n\nInput: Minerals\n\nOutput: - Iron\n- Calcium\n- Magnesium\n- Zinc\n-
      Potassium\n\nUser feedback: Prediction is incorrect. Correct answer: \"Calcium,
      Iron, Magnesium\"\n\n\n\nSummarize your analysis about incorrect predictions
      and suggest changes to the prompt."}, {"role": "assistant", "content": "## Analysis\nFrom
      the provided examples and user feedback, it seems that the large language model
      (LLM) understanding of the task is correct and it is generating appropriate
      examples under the given categories. However, the primary issue seems to lie
      in the formatting of the output response.\n\nThe users'' feedback indicates
      that they expect the output to be provided as a plain sequence of words separated
      by commas, without numbers or bullet points as generated by the LLM.\n\n## Suggested
      Changes\nTo address the incorrect predictions and align the output with user
      expectations, we can slightly modify the existing prompt to include a specification
      about the display format. Here is the proposed improved instruction:\n\n\"Given
      a category related to health and wellness, your task is to list specific examples
      that fall under this category. Do not provide descriptions or explanations.
      Your answer should be a concise list of examples. The list should be formatted
      as a sequence of words separated by commas, without any numbers or bullet points
      in front.\""}, {"role": "user", "content": "\nNow please carefully review your
      reasoning in Step 1 and help with Step 2: refining the prompt.\n\n## Current
      prompt\n\"Given a category related to health and wellness, your task is to list
      specific examples that fall under this category. Do not provide descriptions
      or explanations. Your answer should be a concise list of examples only.\"\n\n##
      Follow this guidance to refine the prompt:\n\n1. The new prompt should should
      describe the task precisely, and address the points raised in the user feedback.\n\n2.
      The new prompt should be similar to the current prompt, and only differ in the
      parts that address the issues you identified in Step 1.\n    Example:\n    -
      Current prompt: \"Generate a summary of the input text.\"\n    - New prompt:
      \"Generate a summary of the input text. Pay attention to the original style.\"\n\n3.
      Reply only with the new prompt. Do not include input and output templates in
      the prompt.\n"}], "model": "gpt-4", "max_tokens": 1000}'
    headers:
      accept:
      - application/json
      accept-encoding:
      - gzip, deflate
      connection:
      - keep-alive
      content-length:
      - '4780'
      content-type:
      - application/json
      cookie:
      - __cf_bm=HLvgucfz5wSfnrlcOwGscxsenCsI21cr01f56SqnkKY-1721162933-1.0.1.1-M2ur9xDzPqDV97_elPqQaACNn9BvhofFVTzcxDhuEU6KBa86qW.fBWcJIiPe.QNluI7P6Kwci.gxNMVMdcCkTA;
        _cfuvid=P4hZdwOPfZCAA9r.YzhkXYaQZ8g357nPpvDcX5rDDVg-1721162933404-0.0.1.1-604800000
      host:
      - api.openai.com
      user-agent:
      - OpenAI/Python 1.34.0
      x-stainless-arch:
      - x64
      x-stainless-async:
      - 'false'
      x-stainless-lang:
      - python
      x-stainless-os:
      - MacOS
      x-stainless-package-version:
      - 1.34.0
      x-stainless-runtime:
      - CPython
      x-stainless-runtime-version:
      - 3.10.5
    method: POST
    uri: https://api.openai.com/v1/chat/completions
  response:
    body:
      string: !!binary |
        H4sIAAAAAAAAAwAAAP//VFLBjhoxDL3PV1g5A1roFjqcu6ISl6qXbdWtUCYxTHYzdhp7FtCKf68y
        sLC9RLKfn/3sl7cKwARvlmBca9V1KY7r+Py9fnTr4+rbbPXj0T2sF4EfvizW659+ZkaFwc0zOn1n
        TRx3KaIGpjPsMlrF0nW6mE2n81m9qAegY4+x0HZJx/fju/n004XRcnAoZgm/KwCAt+Et2sjjwSzh
        bvSe6VDE7tAsr0UAJnMsGWNFgqglNaMb6JgUaZD7ZFbhFQksOKu443yEjLGIBWVo0UZtwZKHPcZI
        KDKCI/cZ1MoLBClFMYiCJHRhGxzgwZbdBbS1ClsbI/TkMYO2Qa5DJvCVgVghZX4NHsGjuBxSOZkA
        Z8BDipbsEE/gVxlpSfaYQVruo4cGi2YmFwTPEnh7HT6ClFGQyhpWwILg3x7JYSnac/YCgsnmYc/m
        CI67zgrsg7bcK1DfNZgHHU0fIyokDqQCgVzsPfrJkzGXc56uPkTepcxN8Yz6GK/5baAg7SajFaZy
        c1FOZ/qpAvgz+N3/Z6FJmbukG+UXpNKwvp+e+5nb17qhn+cXUFlt/MCqF9VFoZGjKHabbaAd5pTD
        YH/RWZ2qfwAAAP//AwCFhXte9QIAAA==
    headers:
      CF-Cache-Status:
      - DYNAMIC
      CF-RAY:
      - 8a44dc2edfcc2ae8-LAX
      Connection:
      - keep-alive
      Content-Encoding:
      - gzip
      Content-Type:
      - application/json
      Date:
      - Tue, 16 Jul 2024 20:49:43 GMT
      Server:
      - cloudflare
      Transfer-Encoding:
      - chunked
      X-Content-Type-Options:
      - nosniff
      alt-svc:
      - h3=":443"; ma=86400
      openai-organization:
      - user-jt0khdjhkecks0yodhgozy8e
      openai-processing-ms:
      - '3501'
      openai-version:
      - '2020-10-01'
      strict-transport-security:
      - max-age=15552000; includeSubDomains; preload
      x-ratelimit-limit-requests:
      - '10000'
      x-ratelimit-limit-tokens:
      - '10000'
      x-ratelimit-remaining-requests:
      - '9999'
      x-ratelimit-remaining-tokens:
      - '7894'
      x-ratelimit-reset-requests:
      - 8.64s
      x-ratelimit-reset-tokens:
      - 12.636s
      x-request-id:
      - req_d17b42b932c1a20da0bbab8155b02069
    status:
      code: 200
      message: OK
version: 1
